// {{.Struct.Object.Name}}DBBackend defines a backend which represents the giving
// methods exposed by the DB implementation for the giving type {{.Struct.Object.Name}}.
// @implement_mock
type {{.Struct.Object.Name}}DBBackend interface{
  Count(ctx context.Context) (int, error)
  Delete(ctx context.Context, publicID string) error
  Create(ctx context.Context, elem {{.Struct.Package}}.{{.Struct.Object.Name}}) error 
  Get(ctx context.Context, publicID string)  ({{.Struct.Package}}.{{.Struct.Object.Name}},  error)
  Update(ctx context.Context, publicID string, elem {{.Struct.Package}}.{{.Struct.Object.Name}}) error
  GetAllByOrder(ctx context.Context, order string, orderBy string)  ([]{{.Struct.Package}}.{{.Struct.Object.Name}},  error)
  GetByField(ctx context.Context, key string, value interface{})  ({{.Struct.Package}}.{{.Struct.Object.Name}},  error)
  GetAll(ctx context.Context, order string, orderBy string, page int, responsePerPage int)  ([]{{.Struct.Package}}.{{.Struct.Object.Name}},  int, error)
}