package static


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
)

type fileData struct{
  path string
  root string
  data []byte
}

var (
  assets = map[string][]string{
    
      ".tml": []string{  // all .tml assets.
        
          "sql-api-json.tml",
        
          "sql-api-migration.tml",
        
          "sql-api-readme.tml",
        
          "sql-api-test.tml",
        
          "sql-api.tml",
        
      },
    
  }

  assetFiles = map[string]fileData{
    
      
        "sql-api-json.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x6b\xc2\x40\x10\x85\xcf\x09\xe4\x3f\xbc\x7a\x28\x06\x24\xde\x5b\x3c\x94\x42\x0f\x3d\x68\x41\x3c\x95\x82\xeb\x3a\xd1\xd8\x64\x57\x26\xa3\x52\x96\xfd\xef\x65\x37\x4a\x3d\xb4\xa5\xa1\x97\x84\x9d\x19\xde\xf7\xf1\x8e\x8a\xe1\x5c\x6d\x4f\xc4\x28\xe6\xc2\x07\x2d\xc5\x6c\xb5\x23\x2d\xc5\x54\x35\x14\x3f\xde\x3f\xcf\x67\x53\x4c\xb0\x74\x0e\x8d\xda\xc7\xd7\xf9\x18\x83\x55\x6b\xcd\x00\x83\x5d\xfc\x79\xbf\xcc\xd2\x2c\xfd\x5b\xea\x23\x93\x12\xfa\x2e\xbb\xdb\x3c\x68\xa9\xac\xf9\x0f\x61\xb1\x5f\xff\x40\xe8\x36\xbf\x11\xc6\x63\xd4\x56\xad\xc3\xf9\x93\x65\x30\xc9\x81\x4d\x0b\x05\x43\x27\x54\xa6\x15\x65\x34\xc1\x96\x50\x70\xee\xa2\xf0\xa2\xf4\xbb\xda\x90\xf7\xc5\xd7\xec\x4a\xcb\x7b\x94\x6c\x1b\xc8\x96\xb0\x67\x7b\xac\xd6\x84\x00\x85\xb6\x46\xc8\x48\x91\xa5\xe5\xc1\xe8\x6b\xf0\xf0\xbc\x42\x2b\x5c\x99\x4d\x8e\x61\x0f\xda\x08\xc4\x6c\x39\x87\xcb\xd2\x24\x54\x46\x35\x35\x7d\x74\x43\x11\x49\x55\x86\x18\xdc\x4d\xa2\x6b\xb1\x30\x8d\xe2\x76\xab\xea\xe1\xeb\xdb\xea\x43\xe8\x62\x98\x8f\x70\x1b\xf2\xf3\xfb\x78\x7e\x33\x81\xa9\xea\x48\x4e\xba\xf2\xfa\x80\x5d\xe7\x9e\xa5\x49\xe7\x70\x4e\x08\xf9\xa3\x90\x9b\xa5\x71\xfe\x19\x00\x00\xff\xff\x20\x59\xff\x66\xbf\x02\x00\x00"),
          path: "sql-api-json.tml",
          root: "sql-api-json.tml",
        },
      
        "sql-api-migration.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xcf\x4b\xfb\x40\x10\xc5\xef\xfd\x2b\x1e\x3d\x7d\xbf\x50\xd3\x7b\xc0\x43\xd5\x0a\x42\xb5\xa0\xf1\x24\x22\xd3\xec\xb4\x59\xe9\xfe\x70\x77\x6a\x94\x90\xff\x5d\x76\x25\xc9\x41\xcd\x69\xb2\xf3\x3e\x6f\xde\x7b\xa7\x80\x7f\x33\x00\x58\x2e\xd1\x75\xc5\x83\x84\x53\x2d\xc5\x76\xf7\xca\xb5\x14\x77\x64\xb8\xef\x2b\xda\x1d\x19\x8a\xf7\xda\x72\x84\x34\x0c\xc9\x2f\x46\x1f\x02\x89\x76\x16\x86\x85\xce\x14\x09\xa1\x6d\x74\xdd\x60\x30\xd4\x11\xa7\xc8\x0a\xe2\x70\x60\xcb\x81\x84\x33\x4f\xde\x07\xe7\x83\x4e\xff\x97\xf7\xeb\x55\xb5\x46\xb5\xba\xd8\xac\x11\xdf\x8e\x88\x42\xc2\x86\xad\x60\xef\xc2\xc0\x69\x7b\x18\x5d\x29\x46\x57\x27\x56\x65\x7d\x0e\x53\x0c\xcb\x6a\x7b\xb5\x2d\xf1\xe8\x55\xf2\x6e\xb5\x34\xd8\x6b\x3e\x2a\x58\x32\x0c\xf9\xf4\x1c\x41\x56\x41\x5b\xc5\x1f\xdf\xd0\x1f\xad\x6f\xc7\x76\xe7\x18\xe7\x2e\x13\xe9\xab\xb4\xe1\x28\x64\x3c\xab\x12\x12\x4e\xbc\xc0\xb4\x4b\x89\x92\x4b\x89\x79\xd7\x89\xdb\xb8\x96\x03\x7e\xbd\xf2\x92\xd3\xcf\x17\x23\x7b\x93\x82\x71\x2c\xf1\xf4\x9c\xc7\xe9\x74\x3f\x89\xae\x53\xa5\xac\xc9\xd3\x0f\x4d\x3f\xfb\x3f\xfb\x0a\x00\x00\xff\xff\xde\xf6\xc3\xf5\xda\x01\x00\x00"),
          path: "sql-api-migration.tml",
          root: "sql-api-migration.tml",
        },
      
        "sql-api-readme.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xd1\x6a\xdb\x30\x14\x86\xef\x03\x79\x87\x1f\x72\x93\x8c\x4c\x0f\x30\xd8\x45\x12\x6f\xa3\x50\xb6\x74\x59\xaf\xc6\xc0\xaa\x72\x62\x6b\x91\x25\x4f\x3a\xde\x5c\x8a\xdf\x7d\xc8\x76\x97\xb8\xb8\xb4\x65\xf5\x8d\xa4\x83\x75\xbe\x4f\xff\xb9\xbb\x13\x3b\xf6\x95\x62\xf1\xe5\xe6\x27\x29\x16\x9f\x65\x41\x4d\x83\xdd\xd5\x65\xb2\xc6\x6a\x7b\x31\x9d\xbc\x7f\xfa\x9b\x4e\xa6\x93\x27\x3b\x41\x07\x48\xc8\x8a\xdd\xdb\x8c\x2c\x79\xc9\xb4\xc7\xe6\xeb\x75\x02\x5d\x94\x86\x0a\xb2\x2c\x59\x3b\x8b\x83\xf3\xe0\x9c\x90\x8e\xb6\xec\xfb\xa6\xd0\x16\xa5\x54\x47\x99\x75\x7f\x6e\x8f\x99\xd8\x4a\xce\x9b\x26\x15\xd1\xe7\x5b\x4e\x38\x38\x63\xdc\x1f\x6d\x33\x14\xc4\xb9\xdb\x83\x6a\x1d\x38\xb4\x04\x55\x05\x76\x05\x5c\x19\x4d\xb4\xb3\xe1\x5d\xbc\x35\x9b\xe1\x43\x4d\x2a\x6e\xd3\x34\xcd\xdc\x74\x12\x8f\x73\xc5\x35\x94\xb3\x4c\x35\x8b\x4d\xb7\x2e\x71\xa8\x71\xa8\xac\x9a\xbf\x09\xbf\x8c\xd8\x5d\x5d\x2e\x11\x37\xc9\x7a\x01\xf2\xde\xf9\x7e\x69\x1b\x3d\x26\x14\xee\x8d\xb4\x6d\x9f\x7c\x0a\x26\x06\x26\x03\x4a\xf2\x2c\xb5\x8d\x37\xd8\xb5\x69\xdd\x6b\x6e\x3c\x49\xa6\x33\xd1\xae\x30\xae\x4a\x86\x0a\x9c\xe2\xdc\x76\xb9\x35\x8d\x78\x64\x6a\x0f\xdd\x67\x33\x7c\x22\x5e\xdf\x7e\xd4\x64\xf6\x67\xcc\x53\x71\x9c\x7b\xa4\x5b\x04\xf6\xda\x66\x4b\xfc\x96\xa6\xa2\xfe\xb4\x00\xe6\x2f\xd0\x59\xa2\x8f\xf4\x81\xd0\xd0\x64\x5c\xa1\xac\x6e\x8c\x56\x17\xc9\x3f\xf2\xcb\xc0\xa3\x5c\xac\x8c\x19\xb2\x57\xc6\x8c\xe1\x17\x98\x7f\xff\xf1\x9f\xbc\xeb\x72\x3f\x1c\x74\x57\x78\xd6\x6b\x5f\x65\xf2\x09\x19\x1a\x08\x74\x85\x67\xc6\x7d\xde\xee\x6f\x00\x00\x00\xff\xff\x66\x01\x04\xbe\x6e\x04\x00\x00"),
          path: "sql-api-readme.tml",
          root: "sql-api-readme.tml",
        },
      
        "sql-api-test.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdd\x4f\xe3\xc6\x17\x7d\x8f\x94\xff\xe1\xfe\xac\x5f\x25\x7b\xeb\x0e\xcb\x6b\xaa\x3c\x10\xdc\x45\x5b\x55\x49\x8a\x43\xf7\x11\x0d\xf6\x75\x98\xdd\xb1\x07\x66\xae\x13\x90\xe5\xff\xbd\x1a\x8f\xf3\xc1\x47\xd8\x24\x2c\x95\x4a\x83\x04\x02\xfb\x7e\x9e\x39\xe7\x60\xa7\xaa\xe0\xff\x37\x99\x40\x99\x42\xaf\x0f\xcd\x2f\x83\xfb\x21\xcf\x11\x58\x4c\xba\x4c\x08\xbc\x71\x79\x25\x45\xf2\x39\xf2\xa0\xae\xbb\x9d\x26\x81\xf8\xd4\x86\x4f\x91\x26\x7c\xba\x2c\xe0\x99\x5b\xe9\x81\xf7\xd5\xa8\xc2\xc5\x76\x3b\x33\xae\xc1\xef\x76\x00\x00\x70\x86\x05\x19\xe8\x43\x8e\xa4\x45\x62\xd8\x10\xe7\x7e\x52\x1a\x52\x39\x8b\x89\x27\xdf\x22\x61\x6e\x24\xbf\xf7\x95\x61\x31\xa5\xaa\xa4\x20\xb0\x25\x6c\x6e\xa2\x8a\x4c\x4c\xa1\x0f\xe6\x56\xb2\xd3\xe6\x8f\xca\xdd\xb1\x5f\xd1\xc0\x0e\xdc\x03\x65\xd8\x19\x12\x16\x33\xdf\xab\xaa\x76\x7c\x36\xe6\xc9\x37\x3e\xc5\xba\xbe\x8c\xff\xfc\xe3\x32\x1a\x78\x41\xb8\xca\xbc\x30\xa8\xb7\xca\xbb\x88\x7f\x3b\x7f\x90\x19\x0d\x3e\x8f\xb7\xca\x3c\x89\xa2\xc7\x99\x63\xa5\x69\xab\xdc\xf1\xe8\x7c\xf2\x28\x37\xd2\x62\xb6\xe5\xcc\x2e\xf4\xc9\xbe\x63\x6e\xcc\x5c\xe9\x74\xbb\x09\x4e\xe2\xf8\xcb\xe8\x3c\x5a\x56\xa9\x17\x47\x42\x68\xe8\x54\x49\xe8\x83\x57\x55\x52\xcd\x51\x2f\x18\xc3\x46\x57\x5f\x31\x21\x66\x0f\xa5\xf9\x51\xd7\x97\x36\xda\xeb\x76\x9a\x03\x3d\x3a\x82\x09\x1a\x3a\x43\x5a\x75\x5d\x4b\xa9\x6b\x98\x71\x29\x52\x4e\x68\x80\xae\x11\xb4\xe5\x0b\xce\xb8\x04\x95\x01\x87\x0d\x49\x4d\x5d\x8d\x89\xd2\x29\x64\x5a\xe5\xc0\x2d\x59\xd2\x2b\xd6\xed\x64\x65\x91\x7c\xa7\xa5\x4f\xf0\xc1\xce\x28\x8a\x29\x9b\x04\x2d\xb7\xf8\x8d\xb0\x2c\x77\x65\x2c\x5b\xdb\x9d\xc3\x96\xcb\x61\x43\xc7\x21\xce\xa3\x81\xef\x18\xba\xb8\xb3\xc6\x5c\xba\xb3\x35\x12\x55\x10\xde\x11\xfb\x22\xe8\x7a\x22\x72\x54\x25\xf9\x8b\x6b\x43\x9c\xff\xc5\x65\x89\x03\x3e\xf5\x83\x10\x8e\x3f\xc2\x07\x20\x91\x23\x8b\x31\x51\x45\xba\x2c\x85\x12\xf3\x10\x50\x6b\x5b\x50\x2a\x9e\xfe\x1e\x8f\x86\x9f\x94\xf6\xbf\x8f\xff\xa9\x46\x4e\x68\xe3\x03\x57\x4b\x64\x4d\xa1\xff\xf5\xa1\x10\x12\xd6\xb4\x64\x57\x34\xec\x13\x17\x12\x53\xdf\x8b\xcb\x24\x41\x63\xb2\x52\xca\xfb\xa6\x25\xa6\x60\xab\x40\xa6\xf4\xa6\x83\x68\x0f\xa1\x07\x3f\xfd\x7c\xcb\xbc\x66\xe0\x60\xc9\x9d\x55\x0b\x4b\xc3\x57\xb6\xf0\x96\xd0\xa4\x98\xa1\xb6\xe7\xc5\x22\x94\x48\xe8\x27\x74\x17\x36\x80\xb1\x85\x7b\x2d\x63\xdb\xd5\x7b\xfd\x26\xde\x21\xb3\x8a\x0f\x7e\xdd\x1d\x18\x9e\xda\xa1\x17\xdc\x7b\x61\x6c\x51\x90\x82\xf4\x6a\x2f\x68\x76\x6d\xc2\x56\xe8\x5c\x3a\xd6\xb8\x85\xcf\x90\x9e\x47\x67\x5f\x5a\xb4\xf2\xc4\x14\x0c\x29\xbd\xdd\x8c\x8d\x40\xf7\x04\xe2\x15\xfd\x1a\x4c\xea\x87\x1e\x74\x22\xe5\x3e\x36\x24\xe5\x2b\x8d\x68\x73\xdf\x83\x17\x1d\xbc\xe8\xdd\x7a\x91\x4b\x32\xe1\xc2\x94\x7a\x4b\x57\x3a\x91\xd2\xad\xee\x71\x93\x78\xa1\x57\x55\xcd\x73\x26\x6b\xf8\x58\xd7\x5e\x08\xbf\x1c\xdb\xef\x1f\x62\x55\x56\xbf\xed\x28\xff\x80\x51\xed\xd8\x6d\x0d\x2e\x91\x81\xc4\xc2\x6f\x93\x03\xe8\xf7\xe1\xe3\xee\xcb\x92\x44\x6e\x08\x8e\x77\xb5\xca\x9d\xf7\xdc\xb7\xd1\xba\x27\x6f\x88\x77\xe2\x78\xe4\xc9\x89\xbd\x28\x54\xb1\xf5\x93\xe1\x5c\xd0\xf5\x73\x86\xfc\x62\xd3\x83\x21\x1f\x0c\xf9\x1d\x1a\xf2\x16\xa2\xbb\xb8\x49\x9f\x8a\xae\x74\x17\xdf\x48\x72\xae\xe5\x41\x72\x07\xc9\xbd\x43\xc9\xb9\xaa\x47\x47\x93\x51\x34\xea\x41\xab\x2e\xa3\x72\xa4\x6b\xcb\xf4\xe7\x21\x69\x15\xf1\x14\xc2\xfd\x11\x72\x12\x7e\x73\x8c\x76\x6f\x73\x78\x6b\xdd\xff\x09\xc9\x49\xed\xc9\x5b\x6b\xae\x7e\xc4\x47\x67\x2f\xf6\x3c\xb8\xf5\xbf\xda\xad\xff\x7b\x0e\xfc\x70\xe3\xcd\xff\xa3\xf6\x58\xbd\x11\xdc\xdb\x2f\xbf\x7b\x9b\x85\x8d\xfc\x1d\x00\x00\xff\xff\x08\x8f\xe4\xc4\xf2\x19\x00\x00"),
          path: "sql-api-test.tml",
          root: "sql-api-test.tml",
        },
      
        "sql-api.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x4b\x6f\xdb\x48\x12\x3e\xdb\x80\xff\x43\x8d\xb0\x18\x90\x03\x2e\x8d\xbd\xda\xc8\x61\xfc\xc8\x22\xc0\x8e\x93\x4d\x32\xbb\x87\xc1\x60\xd0\x62\x97\xa4\x4e\xf8\x50\xba\x5b\x96\x04\x41\xff\x7d\x51\xdd\xcd\xa7\x49\x89\xb2\xe8\x24\x76\xd6\x87\x28\x14\xfb\x51\xf5\xd5\xeb\x63\xb1\x75\x7e\x0e\x09\x9b\xbf\x16\x18\x73\x05\x1c\x27\x22\x45\x05\x0c\xf4\x7a\x8e\x30\xc9\x24\x30\xba\x0d\x7a\xc6\x34\xe0\x6a\x9e\x29\x73\xd7\x0e\xf7\x7c\x48\x50\xcf\x32\x1e\x9e\x9d\x9a\xf1\xe5\x42\x09\x9b\xff\xa1\xb4\x14\xe9\xf4\x4f\x91\x6a\x94\x13\x16\xe1\x66\x7b\x76\x7a\x76\x7a\x7e\xee\x66\x83\x44\xbd\x90\xa9\x02\x3d\x33\x33\x41\x68\x85\xf1\x04\x58\xca\x61\x2e\xb3\x7b\xc1\xcd\x56\x76\x07\xd0\x19\x24\x4c\x47\x33\x33\x5a\x7d\x89\xc3\x8f\x6c\x1c\xa3\x59\x09\x8a\x1d\xc2\xb3\xd3\xc9\x22\x8d\xc0\x4b\x4a\x51\xfc\x52\x58\xaf\x5d\xaa\x00\x50\xca\x4c\xfa\xb0\x39\x3b\x05\x00\x27\x17\x24\x01\xa4\x22\x3e\x3b\xcd\xa5\xde\x6c\xc2\x0f\x5a\x2e\x22\x1d\xbe\x1d\x7f\xc2\x48\x87\x77\x2c\xc1\xed\xb6\x89\x5c\x5a\x8a\x03\xcb\x99\x88\x66\x05\x6c\xa5\x26\x6e\x07\x0b\x6d\x36\x01\x16\xc7\x66\x0b\xa6\xb5\x14\xe3\x85\xa6\x75\x94\xca\x22\xc1\x34\x72\x58\x0a\x6d\xd5\xb6\x7b\x70\x50\x46\x8c\x85\x44\x60\xb4\x71\x24\x38\x72\x18\xaf\x2d\x34\xf9\xbd\xdc\x26\xbb\xc5\xae\x08\xbb\x39\x3b\x3d\xe9\x0b\xd5\x5e\x54\xae\xb3\x54\x2d\x12\x94\xbb\x70\x61\x51\x84\x73\xad\x4a\x18\x38\xd3\xcc\xdd\x5b\x8a\x38\x86\x31\x42\x64\xd7\xe1\x66\x2f\x91\xea\xcc\x28\x39\x15\xf7\x22\x9d\x82\x48\xe6\x31\x26\x98\x6a\xba\x18\x02\x94\x42\xea\x3a\x2a\xee\xeb\x0e\x4c\x7c\x8b\xc9\x5e\x48\x6e\xae\x2a\xe1\x55\x4a\x6b\xf5\x75\x0e\x0f\x37\x57\x70\xfd\xfe\xf7\x1b\xc8\xe6\x28\x99\x16\x59\xaa\xcc\x92\x0b\x65\x54\xfc\x12\x93\x72\xa4\xd1\x22\xe5\x28\x63\x91\x22\xf0\xf1\x1e\xa5\x6e\xae\xdc\x6e\xc6\xbd\xa3\x2c\x06\xab\x03\x5d\xa9\x95\x89\xa5\x9b\x2b\xba\xe0\x2b\xf8\x85\xae\x3e\xfc\xfb\x5f\x74\x99\xa0\x96\x22\x52\xf9\x67\xf8\x9b\xfd\xa4\x5b\x9a\x62\x8f\x76\x36\x41\xf8\x86\x93\x09\xf4\xba\x44\xe0\x0e\x97\x45\x74\x33\x48\x71\x09\x22\x55\x9a\xa5\x11\x92\x99\x3b\xe5\xcc\xc3\xf7\x0e\x97\x9e\xdd\xc2\x4a\x1a\x40\xd2\x94\x22\x28\x45\x0f\x40\x27\x10\x86\xa1\x99\xa1\xac\x48\xbf\x89\xa9\x85\xcf\x87\x5f\x3a\xb7\x73\xe1\xce\x57\x70\xf1\xca\xac\x45\xfb\x26\xb4\x32\x2d\x19\x86\xa1\x4f\xea\x54\x32\xc2\xcf\xfb\x96\xa2\x3f\xb5\xba\xa0\x15\xca\x2f\xf8\xea\x02\x78\xf5\x8b\x28\x8b\x2f\x2c\x84\x95\x2f\x9d\x7e\x17\x90\x54\xbe\x34\x83\x2e\x0a\xa0\x69\xb7\x0d\xfd\xe3\xa6\x6f\xdd\xd0\x6d\x89\xfc\x0d\xc6\xa8\x91\x12\x09\x26\x14\x5b\x26\xd9\x24\xd9\x3d\x1a\xaf\x91\x18\x65\x92\xc3\x44\x66\x89\x4d\x28\x63\xe7\x59\x74\xe1\x5c\x90\xc3\x7c\x31\x8e\x45\xf4\xe6\x26\x34\x2b\xbe\x37\x73\x54\x31\x50\x28\x72\xd2\x64\xa1\x34\xcc\xd8\x3d\x02\x73\xe3\x41\x70\xb8\x67\xf1\x02\x03\x4a\x78\x12\x95\x42\x0e\x28\xf4\x0c\x25\x85\x21\x83\xb1\xca\x52\xc8\x24\x7c\xa2\x4f\xcd\xa6\x66\x75\xfa\xaf\x0d\x68\x4c\x2b\x8e\xf1\x8e\x45\x9f\xd9\x14\xb7\xdb\xb0\x03\x72\xe7\xd2\x65\xc2\xe7\xe3\x1d\x96\xf6\x1d\x2e\x5e\xa4\x57\x94\x52\x34\xae\x74\x78\x6d\x3f\x83\x42\x5f\xe7\x6d\x2e\x9e\xf3\x6a\x90\x90\x77\xe4\xde\x77\x87\xcb\x8f\x92\x45\xe8\x8d\xba\x9d\xd8\x6e\x35\xf2\x9d\x77\xe1\x04\x25\x24\x7c\x1c\xe6\x6b\xdc\x26\x42\x7b\xf9\xc5\x9b\x74\x92\xf5\x59\x2c\xc8\x27\xfc\x57\xe8\x99\x37\xca\x45\x1e\x95\xd2\xd7\x87\x58\x29\x93\xf0\x36\xe5\x9e\xef\x17\x8e\x2c\x26\x85\xfa\x6f\xd4\xed\x6a\x2e\x24\x72\x02\xa5\xa8\x7d\xf4\x87\x52\x92\xce\x93\x44\x87\xb7\x84\xc4\xc4\x1b\x39\xac\x60\xc6\x14\x59\x97\xa6\xe5\x0a\x1a\x8c\xba\xd4\xcb\xe7\xbf\x66\x22\x46\x53\xfa\xb8\x75\x50\xeb\x89\x0d\xbd\x5c\xf5\xd9\xaf\x5d\x3e\xd0\x44\xc1\x28\x30\xfb\x47\x59\xdc\x3e\xc8\x58\x73\x64\x2a\x97\x95\xc7\x02\x92\xcb\xee\x62\x1b\xa5\x2c\x82\xa9\xc0\xca\x21\x41\xcb\xf3\x95\xb3\x05\xb9\x9a\xcd\x35\x01\x38\x49\xff\x12\xbc\x2a\xea\xa5\x99\xf7\xd3\x2b\xa2\x0f\x55\x5c\x07\x46\xa9\x97\xf2\xbd\xa1\x7c\x2c\x4a\x7b\x3c\xdb\x62\xc6\x9f\x48\x93\x66\x82\xae\xf1\xb5\x6b\x89\xac\x91\x0a\x19\xe7\xd5\x3c\x58\xf0\x89\xf6\x3c\x58\xad\x59\x7a\x86\x8d\xda\xbe\x37\x45\x7d\xc3\xf4\x79\x54\xaa\xb4\xb8\xb5\xa7\x4a\x8c\x31\x39\x04\x83\x63\x73\xa9\x95\x65\xa0\x5c\x9a\x2f\xd6\x9d\x4b\x49\xbd\xf0\xdd\xf3\x4a\xa8\x91\x75\xf3\xbe\x09\x75\x87\x8a\x43\x64\xd5\x93\x93\x93\x93\x5d\x19\x75\x42\xd3\x51\x06\x90\x7d\x26\x48\x2a\x34\xda\x23\xc9\xfc\xd0\xdb\xf9\xbc\xe2\x5f\xd2\xc4\x0a\xb4\x0f\x92\xf4\x07\x76\x5f\x4b\xd1\x6e\xc3\xce\xa4\xdc\x8a\x76\xfd\x76\x85\x9e\x75\xe3\xdf\x15\x7c\x85\x5d\xba\xd7\xdc\x89\x7d\xbf\x69\x84\x9d\x33\x6e\xef\x29\x2d\x06\x6c\x4c\x2d\xbc\xbc\xab\x0a\xd4\xac\xdb\xa3\x1a\x5c\x37\x7c\xf5\x01\xfd\xed\x8b\xc5\x3e\x0c\x6a\x92\x57\x8b\x43\xd3\x1f\x87\x0c\xde\x17\x10\xbe\x5d\x86\x2e\x20\x33\x78\xa5\xda\x04\x5c\xde\x61\xf1\x36\x1b\xba\xc8\x16\xda\x35\x15\x5c\xa6\xfd\x35\xa2\x27\x30\xb0\x86\x81\x11\x15\xb0\x11\x8c\x3e\x99\x8f\xed\xd6\xef\xe4\x59\xcd\x10\x76\x7b\x0e\xc1\xab\xfa\x06\xeb\xa3\x71\xfd\xb2\x40\xb9\x1e\x95\x32\x7f\x4d\xae\xd5\x8c\xae\xc1\x94\xf0\xbb\x49\xd6\x3f\x51\xff\x1a\xc7\x74\x4b\x0a\xbc\x47\x05\xcc\x5c\x59\xce\x53\x7d\xce\x64\x29\xaf\xb4\x04\x54\x2c\x9a\xbd\x80\xfd\x8f\x7c\x7a\x3d\xc7\xe7\x4a\xaa\x2c\x4e\xed\xa4\x2a\x93\x1c\x65\xd1\xea\x30\x57\xe3\x75\x71\x3d\x67\x53\xa4\x3a\x19\x80\x44\x35\xcf\x52\x85\xef\x50\xbe\x73\x5f\xfa\x00\xde\x1f\x7f\x1e\x00\x62\x60\x97\xaa\x37\x3c\x0f\xa6\x65\x56\x9b\x81\x68\x59\xbe\xd8\xf3\xa0\x5b\xb9\xa7\x0f\x10\x66\x1d\x69\xa0\xad\x70\x05\xf0\xf7\x7f\x04\x2d\x19\x61\xb3\x21\x48\x3c\xd2\xeb\x35\xf9\xa1\xc3\x18\x46\xae\x65\x39\x02\xf0\x61\xbb\x2d\x97\xbc\x67\x12\xa4\xd0\x98\x28\x38\xc8\x6f\xaa\x62\x99\xe9\x01\xe8\x4c\xb3\x38\x68\xe4\x6e\x6b\x4c\xe7\xa1\xd5\x24\x6e\xdc\xba\xf0\x6e\xeb\xd6\x0f\x5c\xda\xbf\x7c\xc0\xec\x7a\x32\xb6\x1e\x06\xab\x66\xa6\xee\x2e\xa4\x7b\xf1\x41\x99\x8b\x8f\x9f\xd4\xba\x4d\x0b\x97\x78\x76\x90\xab\x49\x26\xe1\xaf\xc0\xc0\x4f\x88\x4b\x96\x52\x12\x30\xb6\x6c\xc0\x43\x56\x3e\xf4\x51\xad\x29\x5a\x59\x96\x0d\xe7\xc8\x7b\xe0\xb4\xdf\x4e\x32\x7d\x68\x45\xb6\xeb\xe6\x8f\xe4\xe6\x15\x00\x29\xda\x65\x9e\x01\x2c\x43\x7b\x8c\x2c\x8e\x47\x98\x6e\x67\x80\xb6\xda\xcf\xcc\xb0\xf6\x7a\x05\x6c\x3e\xc7\x94\x7b\xd2\x05\x93\x61\xad\x1d\x76\x77\xbb\xc8\x7a\xdc\x15\x74\x76\xb3\x01\x8c\x15\x0e\x1e\xe6\xfb\xe3\xfb\x6a\x7d\x70\x84\x07\x40\xf5\xd2\x93\xd9\x52\x99\x97\x0d\xab\xf0\x7d\xb6\x54\x8d\x36\x41\xd5\xe1\x69\x64\x78\x87\x2b\xed\xf9\x6d\x9e\x56\x28\x7a\x8c\xab\xd7\xdd\xdd\xec\x68\xa7\x7d\x88\x58\xea\xfd\x2c\x7b\xf9\x7c\x1f\xbf\x47\x29\x5b\x3d\x2e\xff\xca\x5c\x76\xac\x4d\x7f\xe4\x99\xa3\x0b\x5b\xe2\x5a\x1e\xf3\x8a\x61\x36\x0c\x2e\xa0\xb0\x8e\x7d\x7f\xe0\xb5\x3d\x1b\x1a\x77\x6b\x77\x6f\xe8\x78\xe4\x2b\xa6\xb5\xc6\x44\x87\x87\x5b\x14\xf7\x85\x47\xe3\x51\xcd\x0a\x77\x59\xab\x3e\x03\xd5\x85\x6f\x90\x78\x86\x2f\x09\x3d\x52\x43\xca\x4d\x66\x30\xd3\x4a\xd2\x7e\xb5\xb6\xaf\xce\x2b\xc4\x7d\xf7\xdb\x21\xd3\x47\x81\xcf\xb8\x36\x4c\xde\x92\x6a\xb3\x58\xf5\x2d\xfe\x0f\xc4\xe6\x1d\x80\xed\x8c\x9e\x60\xca\xf9\xbb\x91\xb8\x78\xb5\x04\xde\x41\x64\x7d\x00\xa2\x3e\x1c\x4b\x6f\x76\x4e\x3f\xe3\xda\xa9\xf7\x92\xb8\x7b\x97\x56\x4f\x42\xed\x0f\x70\x06\x77\xf8\xa2\xd9\xc2\xd2\x98\xb4\xd4\xe8\x6a\x5d\xae\x28\x74\x59\xeb\xb8\x1c\xd5\x49\xf9\x6e\x69\xf5\x50\xc8\x3e\x96\x43\x9f\x9c\x88\x09\xd1\x74\xdb\xe0\x36\xdc\xb9\xab\xa7\x9d\x1f\x37\xf1\x2f\xe1\x27\xdb\xd6\xae\x74\xcf\x63\x67\xd8\x4c\x9a\x50\xf7\x46\x6f\xd3\x78\xbd\xf7\xe0\x0a\x8b\xe3\x6c\x69\x03\xe4\xe4\xa4\xe5\x55\x66\x7f\x2e\xff\x7d\x97\xd2\xe3\x39\xfc\x50\x7e\x52\xb3\x57\xb3\x37\xd6\xbf\xbe\x16\x87\x10\xaa\x8d\xb2\x1f\xac\xa6\xf6\x3c\x9e\xf1\x92\x6a\xe8\xa3\x4e\x72\x3c\xab\x7a\xfa\x4d\x4e\x73\x1c\x1d\xd5\x07\x37\xd6\x7a\x14\xe2\x8e\xd3\x22\x3f\x66\xcb\xeb\xb1\x16\x7a\xf0\x08\x74\x6c\xaf\xeb\xb1\x7d\xae\x97\x5e\x1f\x9f\xc2\x56\x0f\x6b\x25\x34\x1a\x58\xc3\xd9\x75\xb3\x81\xbf\xcd\xed\x53\x2b\x25\x40\xfa\xcf\xd5\x9a\x86\x95\xb1\x9c\xbf\x47\x1d\xd5\x22\xd9\x4c\xd4\x6c\x4a\xd3\xa6\xa8\x3f\xb2\x69\xb1\xd0\x48\x7d\x89\xf3\x57\x98\x5d\x5e\x54\xc6\x7e\xbd\x3d\x96\xf7\xbd\xca\xb6\x57\x47\xd7\xab\xd6\x89\xaa\x35\xa2\x4c\x93\xf0\xd8\xde\xeb\x31\x3d\xa8\x1e\xfd\xa7\x83\x7a\x4f\x1d\x7d\xa7\xae\x9e\x53\xbf\x76\x51\x00\xa3\xcd\xc6\x58\x30\xfc\x0f\x31\x9b\xed\xb6\xcf\xe1\xbc\x3e\xd0\x3d\x9f\xee\xd1\x57\x88\xd8\x7a\x5f\xe9\xfc\x1c\x7e\x9f\x73\xa6\x11\x16\xea\xff\x64\x77\x2f\xd9\xb5\x58\xf5\xe2\xbb\x5f\xff\xd0\x9d\x15\x6e\x20\xce\x9b\x2f\xf6\x62\x0e\x30\x4f\x44\x2a\xd4\x2c\xc8\xc5\xa8\xaf\x78\xec\xf1\xd6\x06\x37\x1c\xf4\xf4\x08\x15\x54\x93\xa7\x76\x9e\xb0\x6b\x9e\xd5\x53\x83\x1d\xd5\x33\x7b\xbb\x4a\xac\x9c\x6c\x54\xf7\x1f\x0e\x39\xfe\x64\x11\x34\xb8\xfc\xe1\x4c\xe0\x60\x16\xf0\x80\x01\xb8\x18\xaf\x50\x00\x52\xef\x71\xd5\xe9\x00\xff\x5c\xd8\x34\xfc\xa8\x23\x4e\xf9\xc1\x1f\x12\xf4\x08\x5f\xde\xa1\xe0\xd7\x3c\x0f\xe5\x0a\xd2\xf1\x07\x35\x0e\xd5\xa7\x06\xe3\xce\x33\xea\xb7\x2b\x8c\xaa\x3f\x76\xa4\xea\x61\x5c\xdb\xfd\x42\x2e\x8e\xb3\xa5\xad\x8c\xb8\xc2\x68\x61\x6e\x65\x13\x60\x10\x2d\x94\xce\x92\x72\x3c\x9b\x32\x91\x2a\x6d\x86\x5a\xd6\xd5\xb7\x14\x91\x08\xed\x85\x68\xb2\xb2\xa4\x35\xff\x51\x58\xe0\x7e\x70\xe5\xe7\x1d\x95\xe3\xca\x0c\x6d\x3c\x50\x91\xb1\x4b\x3d\x8f\xfa\x61\x0d\x89\xe5\x2f\xfc\x9e\x80\x13\xee\x8d\x9c\x32\x59\x4d\x56\x9e\xcd\x57\x76\x27\xb5\x1a\x22\x07\x7d\x17\x3a\xee\xf1\xa6\xb7\xb9\x6c\xb9\xb4\x7d\x53\x44\x57\x40\xff\x2f\x00\x00\xff\xff\x95\xb3\x8d\xf4\x49\x3d\x00\x00"),
          path: "sql-api.tml",
          root: "sql-api.tml",
        },
      
    
  }
)

//==============================================================================

// FilesFor returns all files that use the provided extension, returning a
// empty/nil slice if none is found.
func FilesFor(ext string) []string {
  return assets[ext]
}

// MustFindFile calls FindFile to retrieve file reader with path else panics.
func MustFindFile(path string, doGzip bool) (io.Reader, int64) {
  reader, size, err := FindFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return reader, size
}

// FindDecompressedGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindDecompressedGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, true)
}

// MustFindDecompressedGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindDecompressedGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindDecompressedGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, false)
}

// MustFindGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFile returns a io.Reader by seeking the giving file path if it exists.
func FindFile(path string, doGzip bool) (io.Reader, int64, error){
	reader, size, err := FindFileReader(path)
	if err != nil {
		return nil, size, err
	}

	if !doGzip {
		return reader, size, nil
	}

  gzr, err := gzip.NewReader(reader)
	return gzr, size, err
}

// MustFindFileReader returns bytes.Reader for path else panics.
func MustFindFileReader(path string) (*bytes.Reader, int64){
	reader, size, err := FindFileReader(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFileReader returns a io.Reader by seeking the giving file path if it exists.
func FindFileReader(path string) (*bytes.Reader, int64, error){
  item, ok := assetFiles[path]
  if !ok {
    return nil,0, fmt.Errorf("File %q not found in file system", path)
  }

  return bytes.NewReader(item.data), int64(len(item.data)), nil
}

// MustReadFile calls ReadFile to retrieve file content with path else panics.
func MustReadFile(path string, doGzip bool) string {
  body, err := ReadFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFile attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFile(path string, doGzip bool) (string, error){
  body, err := ReadFileByte(path, doGzip)
  return string(body), err
}

// MustReadFileByte calls ReadFile to retrieve file content with path else panics.
func MustReadFileByte(path string, doGzip bool) []byte {
  body, err := ReadFileByte(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFileByte attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFileByte(path string, doGzip bool) ([]byte, error){
  reader, _, err := FindFile(path, doGzip)
  if err != nil {
    return nil, err
  }

  if closer, ok := reader.(io.Closer); ok {
    defer closer.Close()
  }

  var bu bytes.Buffer

  _, err = io.Copy(&bu, reader);
  if err != nil && err != io.EOF {
   return nil, fmt.Errorf("File %q failed to be read: %+q", path, err)
  }

  return bu.Bytes(), nil
}
