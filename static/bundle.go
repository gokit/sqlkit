package static


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
)

type fileData struct{
  path string
  root string
  data []byte
}

var (
  assets = map[string][]string{
    
      ".tml": []string{  // all .tml assets.
        
          "sql-api-json.tml",
        
          "sql-api-migration.tml",
        
          "sql-api-readme.tml",
        
          "sql-api-test.tml",
        
          "sql-api.tml",
        
      },
    
  }

  assetFiles = map[string]fileData{
    
      
        "sql-api-json.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x6b\xc2\x40\x10\x85\xcf\x09\xe4\x3f\xbc\x7a\x28\x06\x24\xde\x5b\x3c\x94\x42\x0f\x3d\x68\x41\x3c\x95\x82\xeb\x3a\xd1\xd8\x64\x57\x26\xa3\x52\x96\xfd\xef\x65\x37\x4a\x3d\xb4\xa5\xa1\x97\x84\x9d\x19\xde\xf7\xf1\x8e\x8a\xe1\x5c\x6d\x4f\xc4\x28\xe6\xc2\x07\x2d\xc5\x6c\xb5\x23\x2d\xc5\x54\x35\x14\x3f\xde\x3f\xcf\x67\x53\x4c\xb0\x74\x0e\x8d\xda\xc7\xd7\xf9\x18\x83\x55\x6b\xcd\x00\x83\x5d\xfc\x79\xbf\xcc\xd2\x2c\xfd\x5b\xea\x23\x93\x12\xfa\x2e\xbb\xdb\x3c\x68\xa9\xac\xf9\x0f\x61\xb1\x5f\xff\x40\xe8\x36\xbf\x11\xc6\x63\xd4\x56\xad\xc3\xf9\x93\x65\x30\xc9\x81\x4d\x0b\x05\x43\x27\x54\xa6\x15\x65\x34\xc1\x96\x50\x70\xee\xa2\xf0\xa2\xf4\xbb\xda\x90\xf7\xc5\xd7\xec\x4a\xcb\x7b\x94\x6c\x1b\xc8\x96\xb0\x67\x7b\xac\xd6\x84\x00\x85\xb6\x46\xc8\x48\x91\xa5\xe5\xc1\xe8\x6b\xf0\xf0\xbc\x42\x2b\x5c\x99\x4d\x8e\x61\x0f\xda\x08\xc4\x6c\x39\x87\xcb\xd2\x24\x54\x46\x35\x35\x7d\x74\x43\x11\x49\x55\x86\x18\xdc\x4d\xa2\x6b\xb1\x30\x8d\xe2\x76\xab\xea\xe1\xeb\xdb\xea\x43\xe8\x62\x98\x8f\x70\x1b\xf2\xf3\xfb\x78\x7e\x33\x81\xa9\xea\x48\x4e\xba\xf2\xfa\x80\x5d\xe7\x9e\xa5\x49\xe7\x70\x4e\x08\xf9\xa3\x90\x9b\xa5\x71\xfe\x19\x00\x00\xff\xff\x20\x59\xff\x66\xbf\x02\x00\x00"),
          path: "sql-api-json.tml",
          root: "sql-api-json.tml",
        },
      
        "sql-api-migration.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xcf\x4b\xfb\x40\x10\xc5\xef\xfd\x2b\x1e\x3d\x7d\xbf\x50\xd3\x7b\xc0\x43\xd5\x0a\x42\xb5\xa0\xf1\x24\x22\xd3\xec\xb4\x59\xe9\xfe\x70\x77\x6a\x94\x90\xff\x5d\x76\x25\xc9\x41\xcd\x69\xb2\xf3\x3e\x6f\xde\x7b\xa7\x80\x7f\x33\x00\x58\x2e\xd1\x75\xc5\x83\x84\x53\x2d\xc5\x76\xf7\xca\xb5\x14\x77\x64\xb8\xef\x2b\xda\x1d\x19\x8a\xf7\xda\x72\x84\x34\x0c\xc9\x2f\x46\x1f\x02\x89\x76\x16\x86\x85\xce\x14\x09\xa1\x6d\x74\xdd\x60\x30\xd4\x11\xa7\xc8\x0a\xe2\x70\x60\xcb\x81\x84\x33\x4f\xde\x07\xe7\x83\x4e\xff\x97\xf7\xeb\x55\xb5\x46\xb5\xba\xd8\xac\x11\xdf\x8e\x88\x42\xc2\x86\xad\x60\xef\xc2\xc0\x69\x7b\x18\x5d\x29\x46\x57\x27\x56\x65\x7d\x0e\x53\x0c\xcb\x6a\x7b\xb5\x2d\xf1\xe8\x55\xf2\x6e\xb5\x34\xd8\x6b\x3e\x2a\x58\x32\x0c\xf9\xf4\x1c\x41\x56\x41\x5b\xc5\x1f\xdf\xd0\x1f\xad\x6f\xc7\x76\xe7\x18\xe7\x2e\x13\xe9\xab\xb4\xe1\x28\x64\x3c\xab\x12\x12\x4e\xbc\xc0\xb4\x4b\x89\x92\x4b\x89\x79\xd7\x89\xdb\xb8\x96\x03\x7e\xbd\xf2\x92\xd3\xcf\x17\x23\x7b\x93\x82\x71\x2c\xf1\xf4\x9c\xc7\xe9\x74\x3f\x89\xae\x53\xa5\xac\xc9\xd3\x0f\x4d\x3f\xfb\x3f\xfb\x0a\x00\x00\xff\xff\xde\xf6\xc3\xf5\xda\x01\x00\x00"),
          path: "sql-api-migration.tml",
          root: "sql-api-migration.tml",
        },
      
        "sql-api-readme.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xd1\x6a\xdb\x30\x14\x86\xef\x03\x79\x87\x1f\x72\x93\x8c\x4c\x0f\x30\xd8\x45\x12\x6f\xa3\x50\xb6\x74\x59\xaf\xc6\xc0\xaa\x72\x62\x6b\x91\x25\x4f\x3a\xde\x5c\x8a\xdf\x7d\xc8\x76\x97\xb8\xb8\xb4\x65\xf5\x8d\xa4\x83\x75\xbe\x4f\xff\xb9\xbb\x13\x3b\xf6\x95\x62\xf1\xe5\xe6\x27\x29\x16\x9f\x65\x41\x4d\x83\xdd\xd5\x65\xb2\xc6\x6a\x7b\x31\x9d\xbc\x7f\xfa\x9b\x4e\xa6\x93\x27\x3b\x41\x07\x48\xc8\x8a\xdd\xdb\x8c\x2c\x79\xc9\xb4\xc7\xe6\xeb\x75\x02\x5d\x94\x86\x0a\xb2\x2c\x59\x3b\x8b\x83\xf3\xe0\x9c\x90\x8e\xb6\xec\xfb\xa6\xd0\x16\xa5\x54\x47\x99\x75\x7f\x6e\x8f\x99\xd8\x4a\xce\x9b\x26\x15\xd1\xe7\x5b\x4e\x38\x38\x63\xdc\x1f\x6d\x33\x14\xc4\xb9\xdb\x83\x6a\x1d\x38\xb4\x04\x55\x05\x76\x05\x5c\x19\x4d\xb4\xb3\xe1\x5d\xbc\x35\x9b\xe1\x43\x4d\x2a\x6e\xd3\x34\xcd\xdc\x74\x12\x8f\x73\xc5\x35\x94\xb3\x4c\x35\x8b\x4d\xb7\x2e\x71\xa8\x71\xa8\xac\x9a\xbf\x09\xbf\x8c\xd8\x5d\x5d\x2e\x11\x37\xc9\x7a\x01\xf2\xde\xf9\x7e\x69\x1b\x3d\x26\x14\xee\x8d\xb4\x6d\x9f\x7c\x0a\x26\x06\x26\x03\x4a\xf2\x2c\xb5\x8d\x37\xd8\xb5\x69\xdd\x6b\x6e\x3c\x49\xa6\x33\xd1\xae\x30\xae\x4a\x86\x0a\x9c\xe2\xdc\x76\xb9\x35\x8d\x78\x64\x6a\x0f\xdd\x67\x33\x7c\x22\x5e\xdf\x7e\xd4\x64\xf6\x67\xcc\x53\x71\x9c\x7b\xa4\x5b\x04\xf6\xda\x66\x4b\xfc\x96\xa6\xa2\xfe\xb4\x00\xe6\x2f\xd0\x59\xa2\x8f\xf4\x81\xd0\xd0\x64\x5c\xa1\xac\x6e\x8c\x56\x17\xc9\x3f\xf2\xcb\xc0\xa3\x5c\xac\x8c\x19\xb2\x57\xc6\x8c\xe1\x17\x98\x7f\xff\xf1\x9f\xbc\xeb\x72\x3f\x1c\x74\x57\x78\xd6\x6b\x5f\x65\xf2\x09\x19\x1a\x08\x74\x85\x67\xc6\x7d\xde\xee\x6f\x00\x00\x00\xff\xff\x66\x01\x04\xbe\x6e\x04\x00\x00"),
          path: "sql-api-readme.tml",
          root: "sql-api-readme.tml",
        },
      
        "sql-api-test.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdd\x4f\xe3\xc6\x17\x7d\x8f\x94\xff\xe1\xfe\xac\x5f\x25\x7b\xeb\x0e\xcb\x6b\xaa\x3c\x10\xdc\x45\x5b\x55\x49\x8a\x43\xf7\x11\x0d\xf6\x75\x98\xdd\xb1\x07\x66\xae\x13\x90\xe5\xff\xbd\x1a\x8f\xf3\xc1\x47\xd8\x24\x2c\x95\x4a\x83\x04\x02\xfb\x7e\x9e\x39\xe7\x60\xa7\xaa\xe0\xff\x37\x99\x40\x99\x42\xaf\x0f\xcd\x2f\x83\xfb\x21\xcf\x11\x58\x4c\xba\x4c\x08\xbc\x71\x79\x25\x45\xf2\x39\xf2\xa0\xae\xbb\x9d\x26\x81\xf8\xd4\x86\x4f\x91\x26\x7c\xba\x2c\xe0\x99\x5b\xe9\x81\xf7\xd5\xa8\xc2\xc5\x76\x3b\x33\xae\xc1\xef\x76\x00\x00\x70\x86\x05\x19\xe8\x43\x8e\xa4\x45\x62\xd8\x10\xe7\x7e\x52\x1a\x52\x39\x8b\x89\x27\xdf\x22\x61\x6e\x24\xbf\xf7\x95\x61\x31\xa5\xaa\xa4\x20\xb0\x25\x6c\x6e\xa2\x8a\x4c\x4c\xa1\x0f\xe6\x56\xb2\xd3\xe6\x8f\xca\xdd\xb1\x5f\xd1\xc0\x0e\xdc\x03\x65\xd8\x19\x12\x16\x33\xdf\xab\xaa\x76\x7c\x36\xe6\xc9\x37\x3e\xc5\xba\xbe\x8c\xff\xfc\xe3\x32\x1a\x78\x41\xb8\xca\xbc\x30\xa8\xb7\xca\xbb\x88\x7f\x3b\x7f\x90\x19\x0d\x3e\x8f\xb7\xca\x3c\x89\xa2\xc7\x99\x63\xa5\x69\xab\xdc\xf1\xe8\x7c\xf2\x28\x37\xd2\x62\xb6\xe5\xcc\x2e\xf4\xc9\xbe\x63\x6e\xcc\x5c\xe9\x74\xbb\x09\x4e\xe2\xf8\xcb\xe8\x3c\x5a\x56\xa9\x17\x47\x42\x68\xe8\x54\x49\xe8\x83\x57\x55\x52\xcd\x51\x2f\x18\xc3\x46\x57\x5f\x31\x21\x66\x0f\xa5\xf9\x51\xd7\x97\x36\xda\xeb\x76\x9a\x03\x3d\x3a\x82\x09\x1a\x3a\x43\x5a\x75\x5d\x4b\xa9\x6b\x98\x71\x29\x52\x4e\x68\x80\xae\x11\xb4\xe5\x0b\xce\xb8\x04\x95\x01\x87\x0d\x49\x4d\x5d\x8d\x89\xd2\x29\x64\x5a\xe5\xc0\x2d\x59\xd2\x2b\xd6\xed\x64\x65\x91\x7c\xa7\xa5\x4f\xf0\xc1\xce\x28\x8a\x29\x9b\x04\x2d\xb7\xf8\x8d\xb0\x2c\x77\x65\x2c\x5b\xdb\x9d\xc3\x96\xcb\x61\x43\xc7\x21\xce\xa3\x81\xef\x18\xba\xb8\xb3\xc6\x5c\xba\xb3\x35\x12\x55\x10\xde\x11\xfb\x22\xe8\x7a\x22\x72\x54\x25\xf9\x8b\x6b\x43\x9c\xff\xc5\x65\x89\x03\x3e\xf5\x83\x10\x8e\x3f\xc2\x07\x20\x91\x23\x8b\x31\x51\x45\xba\x2c\x85\x12\xf3\x10\x50\x6b\x5b\x50\x2a\x9e\xfe\x1e\x8f\x86\x9f\x94\xf6\xbf\x8f\xff\xa9\x46\x4e\x68\xe3\x03\x57\x4b\x64\x4d\xa1\xff\xf5\xa1\x10\x12\xd6\xb4\x64\x57\x34\xec\x13\x17\x12\x53\xdf\x8b\xcb\x24\x41\x63\xb2\x52\xca\xfb\xa6\x25\xa6\x60\xab\x40\xa6\xf4\xa6\x83\x68\x0f\xa1\x07\x3f\xfd\x7c\xcb\xbc\x66\xe0\x60\xc9\x9d\x55\x0b\x4b\xc3\x57\xb6\xf0\x96\xd0\xa4\x98\xa1\xb6\xe7\xc5\x22\x94\x48\xe8\x27\x74\x17\x36\x80\xb1\x85\x7b\x2d\x63\xdb\xd5\x7b\xfd\x26\xde\x21\xb3\x8a\x0f\x7e\xdd\x1d\x18\x9e\xda\xa1\x17\xdc\x7b\x61\x6c\x51\x90\x82\xf4\x6a\x2f\x68\x76\x6d\xc2\x56\xe8\x5c\x3a\xd6\xb8\x85\xcf\x90\x9e\x47\x67\x5f\x5a\xb4\xf2\xc4\x14\x0c\x29\xbd\xdd\x8c\x8d\x40\xf7\x04\xe2\x15\xfd\x1a\x4c\xea\x87\x1e\x74\x22\xe5\x3e\x36\x24\xe5\x2b\x8d\x68\x73\xdf\x83\x17\x1d\xbc\xe8\xdd\x7a\x91\x4b\x32\xe1\xc2\x94\x7a\x4b\x57\x3a\x91\xd2\xad\xee\x71\x93\x78\xa1\x57\x55\xcd\x73\x26\x6b\xf8\x58\xd7\x5e\x08\xbf\x1c\xdb\xef\x1f\x62\x55\x56\xbf\xed\x28\xff\x80\x51\xed\xd8\x6d\x0d\x2e\x91\x81\xc4\xc2\x6f\x93\x03\xe8\xf7\xe1\xe3\xee\xcb\x92\x44\x6e\x08\x8e\x77\xb5\xca\x9d\xf7\xdc\xb7\xd1\xba\x27\x6f\x88\x77\xe2\x78\xe4\xc9\x89\xbd\x28\x54\xb1\xf5\x93\xe1\x5c\xd0\xf5\x73\x86\xfc\x62\xd3\x83\x21\x1f\x0c\xf9\x1d\x1a\xf2\x16\xa2\xbb\xb8\x49\x9f\x8a\xae\x74\x17\xdf\x48\x72\xae\xe5\x41\x72\x07\xc9\xbd\x43\xc9\xb9\xaa\x47\x47\x93\x51\x34\xea\x41\xab\x2e\xa3\x72\xa4\x6b\xcb\xf4\xe7\x21\x69\x15\xf1\x14\xc2\xfd\x11\x72\x12\x7e\x73\x8c\x76\x6f\x73\x78\x6b\xdd\xff\x09\xc9\x49\xed\xc9\x5b\x6b\xae\x7e\xc4\x47\x67\x2f\xf6\x3c\xb8\xf5\xbf\xda\xad\xff\x7b\x0e\xfc\x70\xe3\xcd\xff\xa3\xf6\x58\xbd\x11\xdc\xdb\x2f\xbf\x7b\x9b\x85\x8d\xfc\x1d\x00\x00\xff\xff\x08\x8f\xe4\xc4\xf2\x19\x00\x00"),
          path: "sql-api-test.tml",
          root: "sql-api-test.tml",
        },
      
        "sql-api.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x49\x8f\xdb\x46\x16\x3e\x77\x03\xfd\x1f\xde\x10\x83\x80\x0a\x38\x34\xe6\xda\x81\x0f\xe9\xc5\x81\x81\x89\xe3\x89\x9d\x99\x43\x10\x04\x25\xd6\xa3\x54\x36\x17\x75\x55\xa9\x5b\x82\xa0\xff\x1e\xbc\x5a\x48\x8a\x2d\x8a\xa2\x9a\x71\xd2\x5e\x0e\x56\x73\xa9\xb7\x7c\x6f\xf9\x6a\xe1\x8b\x17\x90\xb3\xc5\x2b\x81\x19\x57\xc0\x31\x15\x05\x2a\x60\xa0\xd7\x0b\x84\xb4\x94\xc0\xe8\x31\xe8\x39\xd3\x80\xab\x45\xa9\xcc\x53\xfb\x7a\x38\x81\x1c\xf5\xbc\xe4\xf1\xc5\xb9\x79\xbf\x16\x94\xb3\xc5\xaf\x4a\x4b\x51\xcc\x7e\x13\x85\x46\x99\xb2\x04\x37\xdb\x8b\xf3\x8b\xf3\x17\x2f\xdc\x68\x90\xa8\x97\xb2\x50\xa0\xe7\x66\x24\x08\xad\x30\x4b\x81\x15\x1c\x16\xb2\xbc\x17\xdc\xa8\xb2\x1a\x40\x97\x90\x33\x9d\xcc\xcd\xdb\xea\x2e\x8b\xdf\xb3\x69\x86\x46\x12\x54\x1a\xe2\x8b\xf3\x74\x59\x24\x10\xe6\xb5\x29\x93\xda\xd8\x70\xbf\x55\x11\xa0\x94\xa5\x9c\xc0\xe6\xe2\x1c\x00\x9c\x5d\x90\x47\x50\x88\xec\xe2\xdc\x5b\xbd\xd9\xc4\xef\xb4\x5c\x26\x3a\xfe\x69\xfa\x01\x13\x1d\xbf\x61\x39\x6e\xb7\x6d\xe4\x8a\xda\x1c\x78\x98\x8b\x64\x5e\xc1\x56\x7b\xe2\x34\x58\x68\xcb\x14\x58\x96\x19\x15\x4c\x6b\x29\xa6\x4b\x4d\x72\x94\x2a\x13\xc1\x34\x72\x78\x10\xda\xba\x6d\x75\x70\x50\xc6\x8c\xa5\x44\x60\xa4\x38\x11\x1c\x39\x4c\xd7\x16\x1a\xff\xcc\xc7\xe4\xb0\xd9\x0d\x63\x37\x17\xe7\x67\xc7\x42\xd5\x8b\xca\x75\x59\xa8\x65\x8e\xf2\x10\x2e\x2c\x49\x70\xa1\x55\x0d\x03\x67\x9a\xb9\x67\x0f\x22\xcb\x60\x8a\x90\x58\x39\xdc\xe8\x12\x85\x2e\x8d\x93\x33\x71\x2f\x8a\x19\x88\x7c\x91\x61\x8e\x85\xa6\x8b\x31\x40\xa9\xac\xde\x45\xc5\xdd\xee\xc0\x64\x62\x31\xe9\x85\xe4\xe6\xaa\x51\x5e\xb5\xb5\xd6\x5f\x97\xf0\x70\x73\x05\xd7\x3f\xff\x72\x03\xe5\x02\x25\xd3\xa2\x2c\x94\x11\xb9\x54\xc6\xc5\xbb\x8c\x9c\x23\x8f\x96\x05\x47\x99\x89\x02\x81\x4f\x7b\x9c\xba\xb9\x72\xda\x4c\x7a\x27\x65\x06\xd6\x07\xba\x52\x2b\x53\x4b\x37\x57\x74\xc1\x57\xf0\x2d\x5d\xbd\xfb\xef\x7f\xe8\x32\x47\x2d\x45\xa2\xfc\x6f\xfc\xa3\xfd\xa5\x47\x9a\x6a\x8f\x34\x9b\x22\x7c\xcd\x29\x04\x7a\x5d\x23\xf0\x06\x1f\xaa\xea\x66\x50\xe0\x03\x88\x42\x69\x56\x24\x48\x61\xee\xb4\xd3\x97\xef\x1b\x7c\x08\xad\x0a\x6b\x69\x04\x79\xdb\x8a\xa8\x36\x3d\x02\x9d\x43\x1c\xc7\x66\x84\xb2\x26\xfd\x28\x66\x16\xbe\x09\x7c\xdb\xa9\xce\x95\x3b\x5f\xc1\xe5\x4b\x23\x8b\xf4\xe6\x24\x99\x44\xc6\x71\x3c\x21\x77\x1a\x1d\xe1\x9b\x3e\x51\xf4\x4f\xad\x2e\x49\x42\x7d\x83\xaf\x2e\x81\x37\x6f\x24\x65\x76\x69\x21\x6c\xdc\x74\xfe\x5d\x42\xde\xb8\x69\x5e\xba\xac\x80\x26\x6d\x1b\xfa\xcf\x0d\xdf\xba\x57\xb7\x35\xf2\x37\x98\xa1\x46\x6a\x24\x98\x53\x6d\x99\x66\x93\x97\xf7\x68\xb2\x46\x62\x52\x4a\x0e\xa9\x2c\x73\xdb\x50\xa6\x2e\xb3\xe8\xc2\xa5\x20\x87\xc5\x72\x9a\x89\xe4\xf5\x4d\x6c\x24\xfe\x6c\xc6\xa8\xea\x45\xa1\x28\x49\xf3\xa5\xd2\x30\x67\xf7\x08\xcc\xbd\x0f\x82\xc3\x3d\xcb\x96\x18\x51\xc3\x93\xa8\x14\x72\x40\xa1\xe7\x28\xa9\x0c\x19\x4c\x55\x59\x40\x29\xe1\x03\xfd\x6a\x36\x33\xd2\xe9\x4f\x5b\xd0\x58\x34\x12\xe3\x2d\x4b\x3e\xb2\x19\x6e\xb7\x71\x07\xe4\x2e\xa5\xeb\x86\xcf\xa7\x07\x22\x3d\x71\xb8\x84\x89\x5e\x51\x4b\xd1\xb8\xd2\xf1\xb5\xfd\x8d\x2a\x7f\x5d\xb6\xb9\x7a\xf6\x6c\x90\x53\x76\xf8\xec\x7b\x83\x0f\xef\x25\x4b\x30\x0c\xba\x93\xd8\xaa\x0a\x26\x2e\xbb\x30\x45\x09\x39\x9f\xc6\x5e\xc6\x6d\x2e\x74\xe8\x2f\x5e\x17\x69\x79\x8c\xb0\xc8\x0f\xf8\xbf\xd0\xf3\x30\xf0\x26\x07\xb5\xf5\xbb\xaf\x58\x2b\xf3\xf8\xb6\xe0\xe1\x64\x52\x25\xb2\x48\x2b\xf7\x5f\xab\xdb\xd5\x42\x48\xe4\x04\x4a\xc5\x7d\xf4\x0f\xa5\x24\x9f\xd3\x5c\xc7\xb7\x84\x44\x1a\x06\x0e\x2b\x98\x33\x45\xd1\xa5\x61\xde\x41\x83\x51\x97\x7b\x7e\xfc\x2b\x26\x32\x34\xd4\xc7\x6d\x82\xda\x4c\x1c\xee\x57\x18\x98\xcc\x0f\x22\xa3\x33\x29\xb3\xf6\x63\x13\xbb\xc0\xf0\x94\xd5\x6e\xdd\xf7\x96\xba\x4a\x46\x29\xab\xd2\xa9\x90\x71\x7e\x93\x60\xbe\x72\xc8\x53\x62\xd9\xce\x12\x81\xb3\xee\x77\xc1\x9b\xe6\x7d\x67\xc6\xfd\xe3\x25\x4d\x16\x9a\x28\x8e\x86\x49\x8f\xc3\x47\x40\x76\x2a\x26\x3d\x59\x6b\x11\xe2\x23\xda\xdd\x6e\xb8\x3b\xf3\xaf\x6b\x89\xac\xd5\xda\x18\xe7\xcd\xbe\x56\xcd\x0f\xf6\xf7\xb5\x26\x07\xe9\x39\xb6\xb8\xba\xb7\xe5\xfc\x85\xed\xf0\x49\xad\xcf\xe2\xb6\xbf\xf5\x61\x86\xf9\x10\x0c\x9e\xda\x1b\xad\x2d\x23\xf5\x46\x2f\xac\x3b\xb1\xc8\xbd\xf8\xed\xf3\x6a\x90\x89\x4d\xf3\xfe\x06\x79\xc0\xb9\x53\xbb\xe4\xd9\xd9\xd9\x59\x67\x37\xd8\x6c\x08\x9d\x70\xce\xd4\x2b\xca\x3b\x17\x15\x08\xec\x9a\x21\x98\xc0\x76\x5b\x3b\xfc\xa8\x9d\xbe\x63\xf7\x3b\xcd\x94\xac\xef\xec\x9d\x7b\x21\xdb\x7d\xdc\x98\x33\x75\x83\xd8\x55\x41\x15\xb8\xdd\x32\x3b\x60\xec\x1b\x40\x6e\xb9\xd8\x1c\xf1\xf2\x9e\x28\xb4\x06\x55\x89\xd9\xd5\xac\x77\x42\x74\x44\xd3\xbe\x6e\xa5\xd7\xa3\x19\x68\xbf\xe7\xdd\x1e\x4f\x7c\xa6\x60\xa6\xb0\x99\x0e\xa6\xa6\x0a\x6d\xf2\xc1\x2f\xcc\xc3\xcd\x86\x2e\xca\xa5\x76\x6b\x51\x57\xd0\xdf\x27\x34\x71\x07\x2b\x18\x02\xea\x93\x01\x04\x1f\xcc\xcf\x76\x3b\x19\x90\x63\x4e\xeb\xb0\x34\x7b\x7a\x52\x0d\xaa\xc4\xbb\x25\xca\x75\x50\xdb\x3a\x8c\xba\xff\x8c\x8c\x78\x92\xf9\x75\x06\x14\x7c\xbb\x3d\x44\xe7\x3f\xa0\xfe\x3e\xcb\xe8\x91\x14\x78\x4f\x8b\x62\x73\x65\xd9\xb5\xb9\x42\x61\x05\x6f\x2c\x26\x55\x26\xda\xab\xc8\xfe\xc5\x02\x2d\x8f\x9f\x2b\x7d\x5b\x9c\xf6\xd3\x77\x29\x39\xca\x6a\x91\x6c\xae\xa6\xeb\xea\x7a\xc1\x66\x48\x73\xa2\x08\x24\xaa\x45\x59\x28\x7c\x8b\xf2\xad\xbb\x39\x01\x08\x7f\xfd\x6d\x00\x88\x91\x15\xb5\xbb\x55\x36\x78\x02\x60\xbd\x19\x69\x02\xe0\x85\x3d\x0f\x62\xf7\x99\x7e\x62\xa5\x75\x74\x82\x47\xd3\xf8\x42\x64\x11\xfc\xeb\xdf\xd1\x1e\x06\xbf\x67\x12\x74\xa9\x59\x46\xa1\xac\x6f\x49\xa1\x31\x57\x30\x28\x1b\xfa\x26\x05\x6e\xcb\xac\x3d\x2b\x20\x45\x91\xb5\x21\x6a\x35\x6f\x1b\x4c\x97\xa1\xcd\x2e\x6e\xd2\xba\xca\x6e\x9b\xd6\x8f\x52\x7a\xf2\xdd\x23\x5e\x78\x72\xbf\xaf\x02\xd6\xec\x4c\xdd\xfb\x57\x6e\xcb\x9c\x3a\x17\x9f\x8e\x14\xdd\x3d\x7d\xde\xc4\xb7\x46\xb0\xa3\xe7\xa7\xa5\x84\xdf\x23\x03\x38\x61\x2c\x59\x41\x65\x6f\xe2\xdc\x02\x84\x32\x60\xe8\x32\x60\x57\x42\xcd\xc3\x66\x4a\xea\x77\x4b\x49\xdb\x41\xea\x1d\x4a\xbf\x56\xae\x5f\xec\x99\xcd\x62\x72\xb3\x2b\x1c\x27\x46\x82\xe4\x06\x16\xb9\x13\x82\x74\xb0\x10\x1b\x91\xda\x79\xdf\xc6\xe5\x25\xb0\xc5\x02\x0b\x1e\x4a\x57\x26\x66\x4a\xb5\x13\x5f\xd8\x3b\xb9\x5a\xb0\x42\x24\x1d\x7d\xd2\x83\x61\x18\xae\xda\x2f\xdf\x8f\x59\x6b\x13\x3c\x38\xc8\xe5\x72\xb7\x96\xdb\xd4\x7e\xb5\xb6\x47\x33\x0d\x7a\x3f\xbc\xfb\x98\x9a\xd7\x3f\xe2\xda\xf0\xbd\xa5\x5e\x23\xac\x79\x4a\xf4\x05\x71\xbe\x03\x70\x3f\xef\x13\x4c\x9e\xe5\x8d\xc5\xd5\xd6\x25\x84\x83\x28\x7d\x04\x3a\x1f\x8f\xcb\xdb\x95\xfa\x11\xd7\xce\xbd\xcf\x83\xe1\xbb\xfc\x19\x8d\xfa\x07\x84\xde\x1d\xe5\xed\x99\x20\x0c\xe7\x82\x93\x66\x02\xed\xb5\xdb\x0f\xa8\x9b\xa4\xff\x0d\x99\x61\x12\xdd\x43\x36\xd2\x22\x6e\x10\xa9\x77\x30\x7b\x4b\xf9\x90\x1d\x83\x81\x81\x1d\x21\xb8\x7f\x3f\xea\xb0\xa1\x6d\x33\xc6\xf1\x54\x51\x9d\xd7\x34\x57\x86\x5f\x18\x3d\x1c\x79\x92\xf5\x39\xd1\xc1\x49\x87\x5e\xcf\x84\x1a\x3e\xd9\xc1\xd7\xdf\x81\x22\xa0\x93\x23\x00\x76\x59\x62\xb3\x81\x7f\x2e\xec\xcc\x90\x22\x43\x7f\x5c\xad\x49\x66\x3d\xd4\x6f\x80\x07\x8f\x07\x6a\x36\xa3\x61\x33\xd4\xef\xd9\xac\x12\x14\xa8\xbb\xcc\xef\x27\x6e\x77\xd6\x4c\x47\x72\x52\xb0\xd9\x18\xd9\xf1\xff\xa8\x19\x6c\xb7\xc7\x1c\x06\x7e\x25\xa9\x67\x41\x52\x7d\x34\xf5\xcb\x82\x33\x8d\xb0\x54\x5f\x49\xaa\x97\xa4\x2c\x56\x47\xf1\xd4\xa7\x3f\x87\xb4\xc6\x8d\xc4\x55\x5e\xd8\x67\xf3\x8d\x46\x2a\x0a\xa1\xe6\x91\x37\x63\x57\xe2\x29\xa7\xfc\xad\x4f\x26\x46\xfa\x3c\xe1\x24\x76\x18\xcc\x0c\x9d\xa4\xe5\xce\x3d\xdb\x9c\xf5\x88\x45\x5c\x21\xb4\xce\x3e\x3f\x09\x8f\x2c\x6d\xbf\x1a\x78\x62\xe5\xcf\x74\xec\x21\xe6\xa0\x70\x1f\x70\x69\xb4\x83\xad\xfd\x24\x61\xb6\x03\xff\xdc\xe3\xc5\xc7\x81\x24\xa5\x5f\x03\xf9\xc4\x40\xee\x92\x6f\x4f\x17\x76\x0c\x7c\xda\x11\xca\xf1\x4e\x79\xe4\x28\xc0\x87\xbf\x4a\xba\x5d\x61\xd2\xfc\x5c\x9d\xc8\xd1\x24\x98\xfb\xc6\x39\xcb\xca\x07\x4b\xfc\xb8\xc2\x64\x69\x1e\x95\x29\x30\x48\x96\x4a\x97\x79\xfd\x3e\x9b\x31\x51\x28\x6d\x5e\x35\x7e\x1c\xcd\xb4\x64\xc2\x7e\x9e\x4d\x57\x46\x7e\xe8\x3f\xeb\x8d\xdc\x27\xb3\x13\xbf\xd0\x7b\x1a\x8b\x92\xe2\x91\x38\xd4\x8a\x7a\x1e\xf4\x68\x03\x89\xf5\x37\xda\x23\x1f\xf6\x1c\xf1\x8d\x62\xba\x0a\x6d\x53\xb2\x3a\xd4\x6a\x8c\xcf\x10\xff\x32\xbf\x7a\xb2\xe6\x27\x6f\x8f\xb7\xb0\xbf\xf0\xbb\x4a\xf6\x8f\x00\x00\x00\xff\xff\xa8\x47\xf9\xfb\xed\x32\x00\x00"),
          path: "sql-api.tml",
          root: "sql-api.tml",
        },
      
    
  }
)

//==============================================================================

// FilesFor returns all files that use the provided extension, returning a
// empty/nil slice if none is found.
func FilesFor(ext string) []string {
  return assets[ext]
}

// MustFindFile calls FindFile to retrieve file reader with path else panics.
func MustFindFile(path string, doGzip bool) (io.Reader, int64) {
  reader, size, err := FindFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return reader, size
}

// FindDecompressedGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindDecompressedGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, true)
}

// MustFindDecompressedGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindDecompressedGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindDecompressedGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, false)
}

// MustFindGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFile returns a io.Reader by seeking the giving file path if it exists.
func FindFile(path string, doGzip bool) (io.Reader, int64, error){
	reader, size, err := FindFileReader(path)
	if err != nil {
		return nil, size, err
	}

	if !doGzip {
		return reader, size, nil
	}

  gzr, err := gzip.NewReader(reader)
	return gzr, size, err
}

// MustFindFileReader returns bytes.Reader for path else panics.
func MustFindFileReader(path string) (*bytes.Reader, int64){
	reader, size, err := FindFileReader(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFileReader returns a io.Reader by seeking the giving file path if it exists.
func FindFileReader(path string) (*bytes.Reader, int64, error){
  item, ok := assetFiles[path]
  if !ok {
    return nil,0, fmt.Errorf("File %q not found in file system", path)
  }

  return bytes.NewReader(item.data), int64(len(item.data)), nil
}

// MustReadFile calls ReadFile to retrieve file content with path else panics.
func MustReadFile(path string, doGzip bool) string {
  body, err := ReadFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFile attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFile(path string, doGzip bool) (string, error){
  body, err := ReadFileByte(path, doGzip)
  return string(body), err
}

// MustReadFileByte calls ReadFile to retrieve file content with path else panics.
func MustReadFileByte(path string, doGzip bool) []byte {
  body, err := ReadFileByte(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFileByte attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFileByte(path string, doGzip bool) ([]byte, error){
  reader, _, err := FindFile(path, doGzip)
  if err != nil {
    return nil, err
  }

  if closer, ok := reader.(io.Closer); ok {
    defer closer.Close()
  }

  var bu bytes.Buffer

  _, err = io.Copy(&bu, reader);
  if err != nil && err != io.EOF {
   return nil, fmt.Errorf("File %q failed to be read: %+q", path, err)
  }

  return bu.Bytes(), nil
}
