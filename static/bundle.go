package static


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
)

type fileData struct{
  path string
  root string
  data []byte
}

var (
  assets = map[string][]string{
    
      ".tml": []string{  // all .tml assets.
        
          "sql-api-json.tml",
        
          "sql-api-migration.tml",
        
          "sql-api-readme.tml",
        
          "sql-api-test.tml",
        
          "sql-api.tml",
        
      },
    
  }

  assetFiles = map[string]fileData{
    
      
        "sql-api-json.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x6b\xc2\x40\x10\x85\xcf\x09\xe4\x3f\xbc\x7a\x28\x06\x24\xde\x5b\x3c\x94\x42\x0f\x3d\x68\x41\x3c\x95\x82\xeb\x3a\xd1\xd8\x64\x57\x26\xa3\x52\x96\xfd\xef\x65\x37\x4a\x3d\xb4\xa5\xa1\x97\x84\x9d\x19\xde\xf7\xf1\x8e\x8a\xe1\x5c\x6d\x4f\xc4\x28\xe6\xc2\x07\x2d\xc5\x6c\xb5\x23\x2d\xc5\x54\x35\x14\x3f\xde\x3f\xcf\x67\x53\x4c\xb0\x74\x0e\x8d\xda\xc7\xd7\xf9\x18\x83\x55\x6b\xcd\x00\x83\x5d\xfc\x79\xbf\xcc\xd2\x2c\xfd\x5b\xea\x23\x93\x12\xfa\x2e\xbb\xdb\x3c\x68\xa9\xac\xf9\x0f\x61\xb1\x5f\xff\x40\xe8\x36\xbf\x11\xc6\x63\xd4\x56\xad\xc3\xf9\x93\x65\x30\xc9\x81\x4d\x0b\x05\x43\x27\x54\xa6\x15\x65\x34\xc1\x96\x50\x70\xee\xa2\xf0\xa2\xf4\xbb\xda\x90\xf7\xc5\xd7\xec\x4a\xcb\x7b\x94\x6c\x1b\xc8\x96\xb0\x67\x7b\xac\xd6\x84\x00\x85\xb6\x46\xc8\x48\x91\xa5\xe5\xc1\xe8\x6b\xf0\xf0\xbc\x42\x2b\x5c\x99\x4d\x8e\x61\x0f\xda\x08\xc4\x6c\x39\x87\xcb\xd2\x24\x54\x46\x35\x35\x7d\x74\x43\x11\x49\x55\x86\x18\xdc\x4d\xa2\x6b\xb1\x30\x8d\xe2\x76\xab\xea\xe1\xeb\xdb\xea\x43\xe8\x62\x98\x8f\x70\x1b\xf2\xf3\xfb\x78\x7e\x33\x81\xa9\xea\x48\x4e\xba\xf2\xfa\x80\x5d\xe7\x9e\xa5\x49\xe7\x70\x4e\x08\xf9\xa3\x90\x9b\xa5\x71\xfe\x19\x00\x00\xff\xff\x20\x59\xff\x66\xbf\x02\x00\x00"),
          path: "sql-api-json.tml",
          root: "sql-api-json.tml",
        },
      
        "sql-api-migration.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xcf\x4b\xfb\x40\x10\xc5\xef\xfd\x2b\x1e\x3d\x7d\xbf\x50\xd3\x7b\xc0\x43\xd5\x0a\x42\xb5\xa0\xf1\x24\x22\xd3\xec\xb4\x59\xe9\xfe\x70\x77\x6a\x94\x90\xff\x5d\x76\x25\xc9\x41\xcd\x69\xb2\xf3\x3e\x6f\xde\x7b\xa7\x80\x7f\x33\x00\x58\x2e\xd1\x75\xc5\x83\x84\x53\x2d\xc5\x76\xf7\xca\xb5\x14\x77\x64\xb8\xef\x2b\xda\x1d\x19\x8a\xf7\xda\x72\x84\x34\x0c\xc9\x2f\x46\x1f\x02\x89\x76\x16\x86\x85\xce\x14\x09\xa1\x6d\x74\xdd\x60\x30\xd4\x11\xa7\xc8\x0a\xe2\x70\x60\xcb\x81\x84\x33\x4f\xde\x07\xe7\x83\x4e\xff\x97\xf7\xeb\x55\xb5\x46\xb5\xba\xd8\xac\x11\xdf\x8e\x88\x42\xc2\x86\xad\x60\xef\xc2\xc0\x69\x7b\x18\x5d\x29\x46\x57\x27\x56\x65\x7d\x0e\x53\x0c\xcb\x6a\x7b\xb5\x2d\xf1\xe8\x55\xf2\x6e\xb5\x34\xd8\x6b\x3e\x2a\x58\x32\x0c\xf9\xf4\x1c\x41\x56\x41\x5b\xc5\x1f\xdf\xd0\x1f\xad\x6f\xc7\x76\xe7\x18\xe7\x2e\x13\xe9\xab\xb4\xe1\x28\x64\x3c\xab\x12\x12\x4e\xbc\xc0\xb4\x4b\x89\x92\x4b\x89\x79\xd7\x89\xdb\xb8\x96\x03\x7e\xbd\xf2\x92\xd3\xcf\x17\x23\x7b\x93\x82\x71\x2c\xf1\xf4\x9c\xc7\xe9\x74\x3f\x89\xae\x53\xa5\xac\xc9\xd3\x0f\x4d\x3f\xfb\x3f\xfb\x0a\x00\x00\xff\xff\xde\xf6\xc3\xf5\xda\x01\x00\x00"),
          path: "sql-api-migration.tml",
          root: "sql-api-migration.tml",
        },
      
        "sql-api-readme.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xd1\x6a\xdb\x30\x14\x86\xef\x03\x79\x87\x1f\x72\x93\x8c\x4c\x0f\x30\xd8\x45\x12\x6f\xa3\x50\xb6\x74\x59\xaf\xc6\xc0\xaa\x72\x62\x6b\x91\x25\x4f\x3a\xde\x5c\x8a\xdf\x7d\xc8\x76\x97\xb8\xb8\xb4\x65\xf5\x8d\xa4\x83\x75\xbe\x4f\xff\xb9\xbb\x13\x3b\xf6\x95\x62\xf1\xe5\xe6\x27\x29\x16\x9f\x65\x41\x4d\x83\xdd\xd5\x65\xb2\xc6\x6a\x7b\x31\x9d\xbc\x7f\xfa\x9b\x4e\xa6\x93\x27\x3b\x41\x07\x48\xc8\x8a\xdd\xdb\x8c\x2c\x79\xc9\xb4\xc7\xe6\xeb\x75\x02\x5d\x94\x86\x0a\xb2\x2c\x59\x3b\x8b\x83\xf3\xe0\x9c\x90\x8e\xb6\xec\xfb\xa6\xd0\x16\xa5\x54\x47\x99\x75\x7f\x6e\x8f\x99\xd8\x4a\xce\x9b\x26\x15\xd1\xe7\x5b\x4e\x38\x38\x63\xdc\x1f\x6d\x33\x14\xc4\xb9\xdb\x83\x6a\x1d\x38\xb4\x04\x55\x05\x76\x05\x5c\x19\x4d\xb4\xb3\xe1\x5d\xbc\x35\x9b\xe1\x43\x4d\x2a\x6e\xd3\x34\xcd\xdc\x74\x12\x8f\x73\xc5\x35\x94\xb3\x4c\x35\x8b\x4d\xb7\x2e\x71\xa8\x71\xa8\xac\x9a\xbf\x09\xbf\x8c\xd8\x5d\x5d\x2e\x11\x37\xc9\x7a\x01\xf2\xde\xf9\x7e\x69\x1b\x3d\x26\x14\xee\x8d\xb4\x6d\x9f\x7c\x0a\x26\x06\x26\x03\x4a\xf2\x2c\xb5\x8d\x37\xd8\xb5\x69\xdd\x6b\x6e\x3c\x49\xa6\x33\xd1\xae\x30\xae\x4a\x86\x0a\x9c\xe2\xdc\x76\xb9\x35\x8d\x78\x64\x6a\x0f\xdd\x67\x33\x7c\x22\x5e\xdf\x7e\xd4\x64\xf6\x67\xcc\x53\x71\x9c\x7b\xa4\x5b\x04\xf6\xda\x66\x4b\xfc\x96\xa6\xa2\xfe\xb4\x00\xe6\x2f\xd0\x59\xa2\x8f\xf4\x81\xd0\xd0\x64\x5c\xa1\xac\x6e\x8c\x56\x17\xc9\x3f\xf2\xcb\xc0\xa3\x5c\xac\x8c\x19\xb2\x57\xc6\x8c\xe1\x17\x98\x7f\xff\xf1\x9f\xbc\xeb\x72\x3f\x1c\x74\x57\x78\xd6\x6b\x5f\x65\xf2\x09\x19\x1a\x08\x74\x85\x67\xc6\x7d\xde\xee\x6f\x00\x00\x00\xff\xff\x66\x01\x04\xbe\x6e\x04\x00\x00"),
          path: "sql-api-readme.tml",
          root: "sql-api-readme.tml",
        },
      
        "sql-api-test.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdd\x4f\xe3\xc6\x17\x7d\x8f\x94\xff\xe1\xfe\xac\x5f\x25\x7b\xeb\x0e\xcb\x6b\xaa\x3c\x10\xdc\x45\x5b\x55\x49\x8a\x43\xf7\x11\x0d\xf6\x75\x98\xdd\xb1\x07\x66\xae\x13\x90\xe5\xff\xbd\x1a\x8f\xf3\xc1\x47\xd8\x24\x2c\x95\x4a\x83\x04\x02\xfb\x7e\x9e\x39\xe7\x60\xa7\xaa\xe0\xff\x37\x99\x40\x99\x42\xaf\x0f\xcd\x2f\x83\xfb\x21\xcf\x11\x58\x4c\xba\x4c\x08\xbc\x71\x79\x25\x45\xf2\x39\xf2\xa0\xae\xbb\x9d\x26\x81\xf8\xd4\x86\x4f\x91\x26\x7c\xba\x2c\xe0\x99\x5b\xe9\x81\xf7\xd5\xa8\xc2\xc5\x76\x3b\x33\xae\xc1\xef\x76\x00\x00\x70\x86\x05\x19\xe8\x43\x8e\xa4\x45\x62\xd8\x10\xe7\x7e\x52\x1a\x52\x39\x8b\x89\x27\xdf\x22\x61\x6e\x24\xbf\xf7\x95\x61\x31\xa5\xaa\xa4\x20\xb0\x25\x6c\x6e\xa2\x8a\x4c\x4c\xa1\x0f\xe6\x56\xb2\xd3\xe6\x8f\xca\xdd\xb1\x5f\xd1\xc0\x0e\xdc\x03\x65\xd8\x19\x12\x16\x33\xdf\xab\xaa\x76\x7c\x36\xe6\xc9\x37\x3e\xc5\xba\xbe\x8c\xff\xfc\xe3\x32\x1a\x78\x41\xb8\xca\xbc\x30\xa8\xb7\xca\xbb\x88\x7f\x3b\x7f\x90\x19\x0d\x3e\x8f\xb7\xca\x3c\x89\xa2\xc7\x99\x63\xa5\x69\xab\xdc\xf1\xe8\x7c\xf2\x28\x37\xd2\x62\xb6\xe5\xcc\x2e\xf4\xc9\xbe\x63\x6e\xcc\x5c\xe9\x74\xbb\x09\x4e\xe2\xf8\xcb\xe8\x3c\x5a\x56\xa9\x17\x47\x42\x68\xe8\x54\x49\xe8\x83\x57\x55\x52\xcd\x51\x2f\x18\xc3\x46\x57\x5f\x31\x21\x66\x0f\xa5\xf9\x51\xd7\x97\x36\xda\xeb\x76\x9a\x03\x3d\x3a\x82\x09\x1a\x3a\x43\x5a\x75\x5d\x4b\xa9\x6b\x98\x71\x29\x52\x4e\x68\x80\xae\x11\xb4\xe5\x0b\xce\xb8\x04\x95\x01\x87\x0d\x49\x4d\x5d\x8d\x89\xd2\x29\x64\x5a\xe5\xc0\x2d\x59\xd2\x2b\xd6\xed\x64\x65\x91\x7c\xa7\xa5\x4f\xf0\xc1\xce\x28\x8a\x29\x9b\x04\x2d\xb7\xf8\x8d\xb0\x2c\x77\x65\x2c\x5b\xdb\x9d\xc3\x96\xcb\x61\x43\xc7\x21\xce\xa3\x81\xef\x18\xba\xb8\xb3\xc6\x5c\xba\xb3\x35\x12\x55\x10\xde\x11\xfb\x22\xe8\x7a\x22\x72\x54\x25\xf9\x8b\x6b\x43\x9c\xff\xc5\x65\x89\x03\x3e\xf5\x83\x10\x8e\x3f\xc2\x07\x20\x91\x23\x8b\x31\x51\x45\xba\x2c\x85\x12\xf3\x10\x50\x6b\x5b\x50\x2a\x9e\xfe\x1e\x8f\x86\x9f\x94\xf6\xbf\x8f\xff\xa9\x46\x4e\x68\xe3\x03\x57\x4b\x64\x4d\xa1\xff\xf5\xa1\x10\x12\xd6\xb4\x64\x57\x34\xec\x13\x17\x12\x53\xdf\x8b\xcb\x24\x41\x63\xb2\x52\xca\xfb\xa6\x25\xa6\x60\xab\x40\xa6\xf4\xa6\x83\x68\x0f\xa1\x07\x3f\xfd\x7c\xcb\xbc\x66\xe0\x60\xc9\x9d\x55\x0b\x4b\xc3\x57\xb6\xf0\x96\xd0\xa4\x98\xa1\xb6\xe7\xc5\x22\x94\x48\xe8\x27\x74\x17\x36\x80\xb1\x85\x7b\x2d\x63\xdb\xd5\x7b\xfd\x26\xde\x21\xb3\x8a\x0f\x7e\xdd\x1d\x18\x9e\xda\xa1\x17\xdc\x7b\x61\x6c\x51\x90\x82\xf4\x6a\x2f\x68\x76\x6d\xc2\x56\xe8\x5c\x3a\xd6\xb8\x85\xcf\x90\x9e\x47\x67\x5f\x5a\xb4\xf2\xc4\x14\x0c\x29\xbd\xdd\x8c\x8d\x40\xf7\x04\xe2\x15\xfd\x1a\x4c\xea\x87\x1e\x74\x22\xe5\x3e\x36\x24\xe5\x2b\x8d\x68\x73\xdf\x83\x17\x1d\xbc\xe8\xdd\x7a\x91\x4b\x32\xe1\xc2\x94\x7a\x4b\x57\x3a\x91\xd2\xad\xee\x71\x93\x78\xa1\x57\x55\xcd\x73\x26\x6b\xf8\x58\xd7\x5e\x08\xbf\x1c\xdb\xef\x1f\x62\x55\x56\xbf\xed\x28\xff\x80\x51\xed\xd8\x6d\x0d\x2e\x91\x81\xc4\xc2\x6f\x93\x03\xe8\xf7\xe1\xe3\xee\xcb\x92\x44\x6e\x08\x8e\x77\xb5\xca\x9d\xf7\xdc\xb7\xd1\xba\x27\x6f\x88\x77\xe2\x78\xe4\xc9\x89\xbd\x28\x54\xb1\xf5\x93\xe1\x5c\xd0\xf5\x73\x86\xfc\x62\xd3\x83\x21\x1f\x0c\xf9\x1d\x1a\xf2\x16\xa2\xbb\xb8\x49\x9f\x8a\xae\x74\x17\xdf\x48\x72\xae\xe5\x41\x72\x07\xc9\xbd\x43\xc9\xb9\xaa\x47\x47\x93\x51\x34\xea\x41\xab\x2e\xa3\x72\xa4\x6b\xcb\xf4\xe7\x21\x69\x15\xf1\x14\xc2\xfd\x11\x72\x12\x7e\x73\x8c\x76\x6f\x73\x78\x6b\xdd\xff\x09\xc9\x49\xed\xc9\x5b\x6b\xae\x7e\xc4\x47\x67\x2f\xf6\x3c\xb8\xf5\xbf\xda\xad\xff\x7b\x0e\xfc\x70\xe3\xcd\xff\xa3\xf6\x58\xbd\x11\xdc\xdb\x2f\xbf\x7b\x9b\x85\x8d\xfc\x1d\x00\x00\xff\xff\x08\x8f\xe4\xc4\xf2\x19\x00\x00"),
          path: "sql-api-test.tml",
          root: "sql-api-test.tml",
        },
      
        "sql-api.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5b\x8f\xdb\x36\x16\x7e\x9e\x01\xe6\x3f\x9c\x15\x16\x85\x5c\x68\x15\xec\xeb\x14\x79\xe8\x5c\x52\x04\xd8\xa6\xd9\x26\xdd\x7d\x28\x8a\x82\x16\x8f\x6c\x26\xba\x85\xa4\xc6\x36\x0c\xff\xf7\xc5\x21\xa9\x8b\x35\x96\x65\x79\xb4\x69\x27\x4d\x1e\xe2\x91\x44\x1e\x9e\xf3\x9d\xcb\xc7\xdb\x8b\x17\x90\xb2\xe2\x95\xc0\x84\x2b\xe0\x18\x8b\x0c\x15\x30\xd0\x9b\x02\x21\xce\x25\x30\xfa\x0c\x7a\xc9\x34\xe0\xba\xc8\x95\xf9\x6a\x9b\xfb\x33\x48\x51\x2f\x73\x1e\x5e\x5d\x9a\xf6\x8d\xa0\x94\x15\xbf\x2a\x2d\x45\xb6\xf8\x4d\x64\x1a\x65\xcc\x22\xdc\xee\xae\x2e\xaf\x2e\x5f\xbc\x70\xbd\x41\xa2\x2e\x65\xa6\x40\x2f\x4d\x4f\x10\x5a\x61\x12\x03\xcb\x38\x14\x32\x7f\x10\xdc\x0c\x65\x47\x00\x9d\x43\xca\x74\xb4\x34\xad\xd5\xa7\x24\x7c\xcf\xe6\x09\x1a\x49\x50\x8f\x10\x5e\x5d\xc6\x65\x16\x81\x9f\x36\xaa\xcc\x1a\x65\xfd\xc3\x5a\x05\x80\x52\xe6\x72\x06\xdb\xab\x4b\x00\x70\x7a\x41\x1a\x40\x26\x92\xab\xcb\x4a\xeb\xed\x36\x7c\xa7\x65\x19\xe9\xf0\xa7\xf9\x07\x8c\x74\xf8\x86\xa5\xb8\xdb\x75\x91\xcb\x1a\x75\x60\xb5\x14\xd1\xb2\x86\xad\xb1\xc4\x8d\x60\xa1\xcd\x63\x60\x49\x62\x86\x60\x5a\x4b\x31\x2f\x35\xc9\x51\x2a\x8f\x04\xd3\xc8\x61\x25\xb4\x35\xdb\x8e\xc1\x41\x19\x35\x4a\x89\xc0\x68\xe0\x48\x70\xe4\x30\xdf\x58\x68\xaa\x6f\x95\x4f\x8e\xab\xdd\x52\x76\x7b\x75\x79\x71\x2a\x54\x83\xa8\xdc\xe6\x99\x2a\x53\x94\xc7\x70\x61\x51\x84\x85\x56\x0d\x0c\x9c\x69\xe6\xbe\xad\x44\x92\xc0\x1c\x21\xb2\x72\xb8\x19\x4b\x64\x3a\x37\x46\x2e\xc4\x83\xc8\x16\x20\xd2\x22\xc1\x14\x33\x4d\x0f\x53\x80\x52\x6b\xbd\x8f\x8a\x7b\xdd\x83\xc9\xcc\x62\x32\x08\xc9\xdd\x4d\x2b\xbd\x1a\x6d\xad\xbd\x2e\xe0\xe1\xee\x06\x6e\x7f\xfe\xe5\x0e\xf2\x02\x25\xd3\x22\xcf\x94\x11\x59\x2a\x63\xe2\xa7\x84\x8c\x23\x8b\xca\x8c\xa3\x4c\x44\x86\xc0\xe7\x03\x46\xdd\xdd\xb8\xd1\x4c\x78\x47\x79\x02\xd6\x06\x7a\x52\x6b\x93\x4b\x77\x37\xf4\xc0\xd7\xf0\x2d\x3d\xbd\xfb\xf7\xbf\xe8\x31\x45\x2d\x45\xa4\xaa\xdf\xf0\x47\xfb\x4b\x9f\x34\xe5\x1e\x8d\x6c\x92\xf0\x35\x27\x17\xe8\x4d\x83\xc0\x1b\x5c\xd5\xd9\xcd\x20\xc3\x15\x88\x4c\x69\x96\x45\x48\x6e\xee\xd5\xb3\x4a\xdf\x37\xb8\xf2\xed\x10\x56\xd3\x00\xd2\xae\x16\x41\xa3\x7a\x00\x3a\x85\x30\x0c\x4d\x0f\x65\x55\xfa\x51\x2c\x2c\x7c\x33\xf8\xb6\x77\x38\x97\xee\x7c\x0d\xd7\x2f\x8d\x2c\x1a\x37\x25\xc9\x24\x32\x0c\xc3\x19\x99\xd3\xaa\x08\xdf\x0c\x89\xa2\x7f\x6a\x7d\x4d\x12\x9a\x17\x7c\x7d\x0d\xbc\xfd\x22\xca\x93\x6b\x0b\x61\xeb\xa5\xb3\xef\x1a\xd2\xd6\x4b\xd3\xe8\xba\x06\x9a\x46\xdb\xd2\x7f\xae\xfb\xce\x35\xdd\x35\xc8\xdf\x61\x82\x1a\xa9\x90\x60\x4a\xb9\x65\x8a\x4d\x9a\x3f\xa0\x89\x1a\x89\x51\x2e\x39\xc4\x32\x4f\x6d\x41\x99\xbb\xc8\xa2\x07\x17\x82\x1c\x8a\x72\x9e\x88\xe8\xf5\x5d\x68\x24\xfe\x6c\xfa\xa8\xba\xa1\x50\x14\xa4\x69\xa9\x34\x2c\xd9\x03\x02\x73\xed\x41\x70\x78\x60\x49\x89\x01\x15\x3c\x89\x4a\x21\x07\x14\x7a\x89\x92\xd2\x90\xc1\x5c\xe5\x19\xe4\x12\x3e\xd0\xaf\x66\x0b\x23\x9d\xfe\xb4\x09\x8d\x59\x2b\x30\xde\xb2\xe8\x23\x5b\xe0\x6e\x17\xf6\x40\xee\x42\xba\x29\xf8\x7c\x7e\xc4\xd3\x33\x87\x8b\x1f\xe9\x35\x95\x14\x8d\x6b\x1d\xde\xda\xdf\xa0\xb6\xd7\x45\x9b\xcb\xe7\x8a\x0d\x52\x8a\x8e\x2a\xfa\xde\xe0\xea\xbd\x64\x11\xfa\x5e\x7f\x10\xdb\xa1\xbc\x99\x8b\x2e\x8c\x51\x42\xca\xe7\x61\x25\xe3\x3e\x15\xda\xaf\x1e\x5e\x67\x71\x7e\x8a\xb0\xa0\xea\xf0\x5f\xa1\x97\xbe\x57\xa9\xec\x35\xda\xef\x37\xb1\x5a\xa6\xe1\x7d\xc6\xfd\xd9\xac\x0e\x64\x11\xd7\xe6\xbf\x56\xf7\xeb\x42\x48\xe4\x04\x4a\xcd\x7d\xf4\x0f\xa5\x24\x9b\xe3\x54\x87\xf7\x84\x44\xec\x7b\x0e\x2b\x58\x32\x45\xde\xa5\x6e\x95\x81\x06\xa3\x3e\xf3\xaa\xfe\xaf\x98\x48\xd0\x50\x1f\xb7\x01\x6a\x23\x71\xbc\x5d\xbe\x67\x22\xdf\x0b\xcc\x98\x51\x9e\x74\x3f\x1b\xdf\x79\x86\xa7\xec\xe8\xd6\xfc\x4a\x53\x97\xc9\x28\x65\x9d\x3a\x35\x32\xce\x6e\x12\xcc\xd7\x0e\x79\x0a\x2c\x5b\x59\x02\x70\xda\xfd\x2e\x78\x5b\xbd\xef\x4c\xbf\xbf\xbd\xa4\xc9\x42\x1b\xc5\xc9\x30\x19\x30\xf8\x04\xc8\xce\xc5\x64\x20\x6a\x2d\x42\x7c\x42\xbd\xbb\x05\x77\x6f\xfe\x75\x2b\x91\x75\x4a\x1b\xe3\xbc\x5d\xd7\xea\xf9\xc1\xe1\xba\xd6\xe6\x20\xbd\xc4\x0e\x57\x0f\x96\x9c\x3f\xb0\x1c\x3e\xa9\xf4\x59\xdc\x0e\x97\x3e\x4c\x30\x1d\x83\xc1\x53\x6b\xa3\xd5\x65\xa2\xda\x58\x09\xeb\x0f\x2c\x32\x2f\x7c\xfb\xbc\x0a\x64\x64\xc3\x7c\xb8\x40\x1e\x31\xee\xdc\x2a\x79\x71\x71\x71\xd1\x5b\x0d\xb6\x5b\x42\xc7\x5f\x32\xf5\x8a\xe2\xce\x79\x05\x3c\xbb\x66\xf0\x66\xb0\xdb\x35\x06\x3f\x2a\xa7\xef\xd8\xc3\x5e\x31\x25\xed\x7b\x6b\xe7\x41\xc8\xf6\x3f\xb7\xe6\x4c\xfd\x20\xf6\x65\x50\x0d\x6e\xbf\xcc\x1e\x18\x87\x3a\x90\x59\xce\x37\x27\x34\x3e\xe0\x85\x4e\xa7\x3a\x30\xfb\x8a\xf5\x9e\x8b\x4e\x28\xda\xb7\x9d\xf0\x7a\x34\x03\x1d\xb6\xbc\xdf\xe2\x59\x15\x29\x98\x28\x6c\x87\x83\xc9\xa9\x4c\x9b\x78\xa8\x16\xe6\xfe\x76\x4b\x0f\x79\xa9\xdd\x5a\xd4\x25\xf4\xf7\x11\x4d\xdc\xc1\x0a\x06\x8f\xea\xa4\x07\xde\x07\xf3\xb3\xdb\xcd\x46\xc4\x98\x1b\x75\x5c\x98\x3d\x3d\xa8\x46\x65\xe2\xa7\x12\xe5\xc6\x6b\x74\x1d\x47\xdd\xff\x8f\x88\x78\x92\xfa\x4d\x04\x64\x7c\xb7\x3b\x46\xe7\x3f\xa0\xfe\x3e\x49\xe8\x93\x14\xf8\x40\x8b\x62\xf3\x64\xd9\xb5\xbd\x42\x61\x19\x6f\x2d\x26\x55\x22\xba\xab\xc8\xe1\xc5\x02\x2d\x8f\x9f\x2b\x7d\x5b\x9c\x0e\xd3\x77\x2e\x39\xca\x7a\x91\x6c\x9e\xe6\x9b\xfa\xb9\x60\x0b\xa4\x39\x51\x00\x12\x55\x91\x67\x0a\xdf\xa2\x7c\xeb\x5e\xce\x00\xfc\x5f\x7f\x1b\x01\x62\x60\x45\xed\x6f\x95\x8d\x9e\x00\x58\x6b\x26\x9a\x00\x54\xc2\x9e\x07\xb1\x57\x91\x7e\x66\xa6\xf5\x54\x82\x47\xd3\xf8\x4c\x24\x01\xfc\xe3\x9f\xc1\x01\x06\x7f\x60\x12\x74\xae\x59\x42\xae\x6c\x5e\x49\xa1\x31\x55\x30\x2a\x1a\x86\x26\x05\x6e\xcb\xac\x3b\x2b\xa0\x81\x02\xab\x43\xd0\x29\xde\xd6\x99\x2e\x42\xdb\x55\xdc\x84\x75\x1d\xdd\x36\xac\x1f\x85\xf4\xec\xbb\x47\xbc\xf0\xe4\x7a\x5f\x3b\xac\x5d\x99\xfa\xf7\xaf\xdc\x96\x39\x55\x2e\x3e\x9f\xc8\xbb\x07\xea\xbc\xf1\x6f\x83\x60\x4f\xcd\x8f\x73\x09\xbf\x07\x06\x70\xc2\x58\xb2\x8c\xd2\xde\xf8\xb9\x03\x08\x45\xc0\xd8\x65\xc0\xbe\x84\x86\x87\xcd\x94\xb4\xda\x2d\xa5\xd1\x8e\x52\xef\x58\xfa\xb5\x72\xab\xc5\x9e\xd9\x2c\x26\x33\xfb\xdc\x71\xa6\x27\x48\xae\x67\x91\x3b\xc3\x49\x47\x13\xb1\xe5\xa9\xbd\xf6\xd6\x2f\x2f\x81\x15\x05\x66\xdc\x97\x2e\x4d\xcc\x94\x6a\xcf\xbf\x70\x70\x72\x55\xb0\x4c\x44\x3d\x75\xb2\x02\xc3\x30\x5c\xbd\x5f\x7e\x18\xb3\xce\x26\xb8\x77\x94\xcb\xe5\x7e\x2e\x77\xa9\xfd\x66\x63\x8f\x66\x5a\xf4\x7e\x7c\xf7\x31\x36\xcd\x3f\xe2\xc6\xf0\xbd\xa5\x5e\x23\xac\x7d\x4a\xf4\x17\xe2\x7c\x07\xe0\x61\xde\x27\x98\x2a\x96\x37\x1a\xd7\x5b\x97\xe0\x8f\xa2\xf4\x09\xe8\x7c\x3a\x2e\xef\x66\xea\x47\xdc\x38\xf3\xbe\x0c\x86\xef\xb3\x67\x32\xea\x1f\xe1\x7a\x77\x94\x77\x60\x82\x30\x9e\x0b\xce\x9a\x09\x74\xd7\x6e\x3f\xa0\x6e\x93\xfe\x37\xa4\x86\x09\xf4\x0a\xb2\x89\x16\x71\xa3\x48\xbd\x87\xd9\x3b\x83\x8f\xd9\x31\x18\xe9\xd8\x09\x9c\xfb\xe7\xa3\x0e\xeb\xda\x2e\x63\x9c\x4e\x15\xf5\x79\x4d\x7b\x65\xf8\x17\xa3\x87\x13\x4f\xb2\xbe\x24\x3a\x38\xeb\xd0\xeb\x99\x50\xc3\x67\x3b\xf8\xfa\x33\x50\x04\xf4\x72\x04\xc0\x3e\x4b\x6c\xb7\xf0\xf7\xc2\xce\x0c\xc9\x33\xf4\xc7\xcd\x86\x64\x36\x5d\xab\x0d\x70\xef\x71\x47\xcd\x16\xd4\x6d\x81\xfa\x3d\x5b\xd4\x82\x3c\xf5\x29\xa9\xf6\x13\x77\x7b\x6b\xa6\x13\x39\xc9\xdb\x6e\x8d\xec\xf0\x3f\x54\x0c\x76\xbb\x53\x0e\x03\xbf\x92\xd4\xb3\x20\xa9\x21\x9a\xfa\xa5\xe0\x4c\x23\x94\xea\x2b\x49\x0d\x92\x94\xc5\xea\x24\x9e\xfa\xfc\xe7\x90\x56\xb9\x89\xb8\xaa\x12\xf6\xc5\xdc\xd1\x88\x45\x26\xd4\x32\xa8\xd4\xd8\x97\x78\xce\x29\x7f\xe7\xca\xc4\x44\xd7\x13\xce\x62\x87\xd1\xcc\x40\x84\x67\xf6\x9a\x8e\x5e\xa4\x1c\xa4\x38\x77\x4a\xda\x65\x38\x23\xd9\x29\xaf\xfa\x0a\xa0\x6b\x34\xcd\xc9\x59\x67\x4e\xfe\x88\xf4\x5c\xde\xb6\x78\x8f\x86\x3f\x8f\xf6\x46\xc4\x5c\x69\x4b\xeb\xc8\xc3\xb5\xea\xf8\x89\x54\x1c\x19\x99\x47\xcc\xf9\x3c\xd7\x67\x1c\x99\x9c\x77\x1a\x70\xba\xf6\x7b\x10\x1d\xbd\x60\x73\xbf\xc6\xa8\x7d\xf3\x9a\xea\xbc\x09\x28\x77\x5d\x37\x49\xf2\x95\xe5\x30\x5c\x63\x54\x9a\x4f\x79\x0c\x0c\xa2\x52\xe9\x3c\x6d\xda\xb3\x05\x13\x99\xd2\xa6\xa9\xb1\xe3\x64\xd2\x20\x15\x0e\x53\x46\xbc\x36\xf2\xfd\xea\x86\x6a\xe0\x6e\x7f\xce\xaa\x35\xcb\xd3\x08\x81\x06\x9e\x88\x0e\xac\xa8\xe7\x51\xe9\xad\x23\xb1\xb9\x6e\x3c\xf1\xb9\xc5\x09\xd7\xed\xe2\xb5\x6f\x2b\x8f\x1d\x43\xad\xa7\xa8\x26\x7f\x98\x5d\x03\x51\xf3\x53\xa5\x4f\xa5\xe1\x70\xe2\xf7\xa5\xec\xff\x02\x00\x00\xff\xff\x08\xe5\xae\xdf\xb8\x31\x00\x00"),
          path: "sql-api.tml",
          root: "sql-api.tml",
        },
      
    
  }
)

//==============================================================================

// FilesFor returns all files that use the provided extension, returning a
// empty/nil slice if none is found.
func FilesFor(ext string) []string {
  return assets[ext]
}

// MustFindFile calls FindFile to retrieve file reader with path else panics.
func MustFindFile(path string, doGzip bool) (io.Reader, int64) {
  reader, size, err := FindFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return reader, size
}

// FindDecompressedGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindDecompressedGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, true)
}

// MustFindDecompressedGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindDecompressedGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindDecompressedGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, false)
}

// MustFindGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFile returns a io.Reader by seeking the giving file path if it exists.
func FindFile(path string, doGzip bool) (io.Reader, int64, error){
	reader, size, err := FindFileReader(path)
	if err != nil {
		return nil, size, err
	}

	if !doGzip {
		return reader, size, nil
	}

  gzr, err := gzip.NewReader(reader)
	return gzr, size, err
}

// MustFindFileReader returns bytes.Reader for path else panics.
func MustFindFileReader(path string) (*bytes.Reader, int64){
	reader, size, err := FindFileReader(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFileReader returns a io.Reader by seeking the giving file path if it exists.
func FindFileReader(path string) (*bytes.Reader, int64, error){
  item, ok := assetFiles[path]
  if !ok {
    return nil,0, fmt.Errorf("File %q not found in file system", path)
  }

  return bytes.NewReader(item.data), int64(len(item.data)), nil
}

// MustReadFile calls ReadFile to retrieve file content with path else panics.
func MustReadFile(path string, doGzip bool) string {
  body, err := ReadFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFile attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFile(path string, doGzip bool) (string, error){
  body, err := ReadFileByte(path, doGzip)
  return string(body), err
}

// MustReadFileByte calls ReadFile to retrieve file content with path else panics.
func MustReadFileByte(path string, doGzip bool) []byte {
  body, err := ReadFileByte(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFileByte attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFileByte(path string, doGzip bool) ([]byte, error){
  reader, _, err := FindFile(path, doGzip)
  if err != nil {
    return nil, err
  }

  if closer, ok := reader.(io.Closer); ok {
    defer closer.Close()
  }

  var bu bytes.Buffer

  _, err = io.Copy(&bu, reader);
  if err != nil && err != io.EOF {
   return nil, fmt.Errorf("File %q failed to be read: %+q", path, err)
  }

  return bu.Bytes(), nil
}
