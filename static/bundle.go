package static


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
)

type fileData struct{
  path string
  root string
  data []byte
}

var (
  assets = map[string][]string{
    
      ".tml": []string{  // all .tml assets.
        
          "sql-api-backend.tml",
        
          "sql-api-json.tml",
        
          "sql-api-migration.tml",
        
          "sql-api-readme.tml",
        
          "sql-api-test.tml",
        
          "sql-api.tml",
        
      },
    
  }

  assetFiles = map[string]fileData{
    
      
        "sql-api-backend.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x6e\xe2\x30\x10\x86\xef\x79\x8a\x39\x82\x14\x25\xcf\xb0\x01\x2d\xda\xcb\x82\xb4\xda\x53\xd5\x83\x63\xff\x24\x2e\x8e\x6d\xd9\x03\x25\x42\x79\xf7\x0a\x92\xa2\xb4\x22\xa8\xa5\x27\x4b\x33\x99\xf9\xbf\x6f\x94\x3c\xa7\xd3\x29\xfb\xc7\x61\x2f\x39\x5b\x97\x2f\x90\x9c\xfd\x15\x0d\xba\xae\x10\x72\x07\xab\x48\x61\xab\x2d\x22\x09\x2a\x87\xca\x6b\xad\x65\x4d\x01\x3e\x20\xc2\x72\x24\xae\x41\x95\x3e\x68\x5b\x51\x92\xe7\xd4\x80\x6b\xa7\x22\xe1\xe8\x5d\x84\xa2\xb2\xbd\x7c\xb1\x2c\x48\x37\xde\xa0\x81\x65\xc1\xda\x59\xda\xba\x30\x9e\xe5\xd6\x63\x8a\x26\x4b\xee\x75\xdf\x59\xb5\x65\x84\xad\x90\x38\x25\x44\x4b\x18\x30\x66\x92\x8f\x24\x9d\x65\x1c\x39\x5b\xf4\x6f\x4a\x7e\x5f\x1a\x2d\xff\x2c\x29\x72\xd0\xb6\x9a\x13\x42\x70\x21\x21\x5a\x04\x88\xa9\x21\x18\x34\x23\x82\x8d\x90\x3b\x51\x9d\xd9\x26\xa8\x86\xad\x94\x10\xad\xc0\x5f\x04\xa1\xd9\x37\x12\x52\xea\x23\xe6\x09\xd1\x7f\xaf\x26\xc9\x3f\xa5\x3c\xac\xd2\x9b\xfc\x32\xa6\x68\xd7\x41\x21\xdc\x4e\x73\xe7\xd6\xf0\x14\xed\xc8\xec\xe9\xf9\x41\xb7\x15\xb8\x68\x7f\x6b\x18\x75\x3b\x71\x87\xf6\xaa\x76\x10\x66\x8f\xd1\x9f\xd0\xfd\xe0\xa6\xbd\xec\x1d\xcb\x6b\xea\x47\xd9\x94\xbc\xa8\x2e\x10\x29\x05\x44\xef\x6c\xc4\x06\x61\x33\x14\x1f\xb9\xc5\x65\xd7\x00\xd6\xbd\x05\x00\x00\xff\xff\x4a\x68\x4a\xbf\xb6\x03\x00\x00"),
          path: "sql-api-backend.tml",
          root: "sql-api-backend.tml",
        },
      
        "sql-api-json.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x6b\xc2\x40\x10\x85\xcf\x09\xe4\x3f\xbc\x7a\x28\x06\x24\xde\x5b\x3c\x94\x42\x0f\x3d\x68\x41\x3c\x95\x82\xeb\x3a\xd1\xd8\x64\x57\x26\xa3\x52\x96\xfd\xef\x65\x37\x4a\x3d\xb4\xa5\xa1\x97\x84\x9d\x19\xde\xf7\xf1\x8e\x8a\xe1\x5c\x6d\x4f\xc4\x28\xe6\xc2\x07\x2d\xc5\x6c\xb5\x23\x2d\xc5\x54\x35\x14\x3f\xde\x3f\xcf\x67\x53\x4c\xb0\x74\x0e\x8d\xda\xc7\xd7\xf9\x18\x83\x55\x6b\xcd\x00\x83\x5d\xfc\x79\xbf\xcc\xd2\x2c\xfd\x5b\xea\x23\x93\x12\xfa\x2e\xbb\xdb\x3c\x68\xa9\xac\xf9\x0f\x61\xb1\x5f\xff\x40\xe8\x36\xbf\x11\xc6\x63\xd4\x56\xad\xc3\xf9\x93\x65\x30\xc9\x81\x4d\x0b\x05\x43\x27\x54\xa6\x15\x65\x34\xc1\x96\x50\x70\xee\xa2\xf0\xa2\xf4\xbb\xda\x90\xf7\xc5\xd7\xec\x4a\xcb\x7b\x94\x6c\x1b\xc8\x96\xb0\x67\x7b\xac\xd6\x84\x00\x85\xb6\x46\xc8\x48\x91\xa5\xe5\xc1\xe8\x6b\xf0\xf0\xbc\x42\x2b\x5c\x99\x4d\x8e\x61\x0f\xda\x08\xc4\x6c\x39\x87\xcb\xd2\x24\x54\x46\x35\x35\x7d\x74\x43\x11\x49\x55\x86\x18\xdc\x4d\xa2\x6b\xb1\x30\x8d\xe2\x76\xab\xea\xe1\xeb\xdb\xea\x43\xe8\x62\x98\x8f\x70\x1b\xf2\xf3\xfb\x78\x7e\x33\x81\xa9\xea\x48\x4e\xba\xf2\xfa\x80\x5d\xe7\x9e\xa5\x49\xe7\x70\x4e\x08\xf9\xa3\x90\x9b\xa5\x71\xfe\x19\x00\x00\xff\xff\x20\x59\xff\x66\xbf\x02\x00\x00"),
          path: "sql-api-json.tml",
          root: "sql-api-json.tml",
        },
      
        "sql-api-migration.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xcf\x4b\xfb\x40\x10\xc5\xef\xfd\x2b\x1e\x3d\x7d\xbf\x50\xd3\x7b\xc0\x43\xd5\x0a\x42\xb5\xa0\xf1\x24\x22\xd3\xec\xb4\x59\xe9\xfe\x70\x77\x6a\x94\x90\xff\x5d\x76\x25\xc9\x41\xcd\x69\xb2\xf3\x3e\x6f\xde\x7b\xa7\x80\x7f\x33\x00\x58\x2e\xd1\x75\xc5\x83\x84\x53\x2d\xc5\x76\xf7\xca\xb5\x14\x77\x64\xb8\xef\x2b\xda\x1d\x19\x8a\xf7\xda\x72\x84\x34\x0c\xc9\x2f\x46\x1f\x02\x89\x76\x16\x86\x85\xce\x14\x09\xa1\x6d\x74\xdd\x60\x30\xd4\x11\xa7\xc8\x0a\xe2\x70\x60\xcb\x81\x84\x33\x4f\xde\x07\xe7\x83\x4e\xff\x97\xf7\xeb\x55\xb5\x46\xb5\xba\xd8\xac\x11\xdf\x8e\x88\x42\xc2\x86\xad\x60\xef\xc2\xc0\x69\x7b\x18\x5d\x29\x46\x57\x27\x56\x65\x7d\x0e\x53\x0c\xcb\x6a\x7b\xb5\x2d\xf1\xe8\x55\xf2\x6e\xb5\x34\xd8\x6b\x3e\x2a\x58\x32\x0c\xf9\xf4\x1c\x41\x56\x41\x5b\xc5\x1f\xdf\xd0\x1f\xad\x6f\xc7\x76\xe7\x18\xe7\x2e\x13\xe9\xab\xb4\xe1\x28\x64\x3c\xab\x12\x12\x4e\xbc\xc0\xb4\x4b\x89\x92\x4b\x89\x79\xd7\x89\xdb\xb8\x96\x03\x7e\xbd\xf2\x92\xd3\xcf\x17\x23\x7b\x93\x82\x71\x2c\xf1\xf4\x9c\xc7\xe9\x74\x3f\x89\xae\x53\xa5\xac\xc9\xd3\x0f\x4d\x3f\xfb\x3f\xfb\x0a\x00\x00\xff\xff\xde\xf6\xc3\xf5\xda\x01\x00\x00"),
          path: "sql-api-migration.tml",
          root: "sql-api-migration.tml",
        },
      
        "sql-api-readme.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\x4f\x6f\xda\x40\x10\xc5\xef\x48\x7c\x87\xa9\xb8\x98\x8a\x2e\xf7\x48\x3d\x00\x6e\xa3\x48\x51\x4b\x42\x73\x42\x91\xbc\xac\x07\x7b\xcb\x7a\xc7\xdd\x1d\xb7\x8e\x90\xbf\x7b\xe5\x3f\x29\x90\x3a\x4d\x50\xe3\xcb\xee\x3e\x79\xe6\xfd\xe6\xcd\x7e\x2f\x56\xec\x0a\xc5\xe2\xeb\xe6\x3b\x2a\x16\x5f\x64\x86\x55\x05\xab\x9b\xeb\x70\x0e\xb3\xe5\xd5\x70\xf0\xf1\xe5\x6f\x38\x18\x0e\xd6\xef\xd6\x97\x04\xb7\x98\x93\x63\x58\x48\x17\xdf\x07\x29\x73\xee\x2f\xa6\xd3\x84\x5c\x23\x2b\xe9\x62\xa1\x28\x9b\x6e\x64\x9c\xe0\x74\xbf\x17\x4b\xa9\x76\x32\xc1\xa5\xe4\xb4\xaa\xc6\xff\xa8\x68\x9f\x7f\x97\xd4\xce\x2f\xce\x00\xda\x83\x04\x59\x30\x7d\x48\xd0\xa2\x93\x8c\x31\x2c\x6e\xef\x42\xd0\x59\x6e\x30\x43\xcb\x92\x35\x59\xd8\x92\x03\x4e\x11\xa2\xde\x96\x5d\xdf\x08\xb4\x85\xbc\xa5\x68\xfe\x5c\xee\x12\xd1\xe2\x44\xa2\xe6\xf9\x96\x22\x6c\xc9\x18\xfa\xa5\x6d\x02\x19\x72\x4a\x31\x60\xa9\x3d\xfb\xc6\x41\x15\x9e\x29\x03\xca\x6b\x12\x4d\xd6\x5f\xd4\x55\xa3\x11\x7c\x2a\x51\xd5\xd7\x28\x8a\x12\x1a\x0e\xea\x67\xa0\xb8\x04\x45\x96\xb1\x64\xb1\x68\xcf\x09\x6c\x4b\xd8\x16\x56\x05\xef\xfd\x0f\x23\x56\x37\xd7\x13\xa8\x2f\xe1\x7c\x0c\xe8\x1c\xb9\xee\x68\x1a\x3d\x07\xe4\x1f\x89\xb4\x6d\x46\x3e\x04\x53\x07\x26\x3d\xe4\xe8\x58\x6a\x5b\x57\x30\x35\x69\x3d\x62\x2e\x1c\x4a\xc6\x23\xd0\x56\xe8\x47\x45\x83\x19\x1c\xe2\xec\xb6\x57\x55\xe2\x99\xad\x3d\x65\x1f\x8d\xe0\x12\x79\xfe\xf0\x59\xa3\x89\x8f\x3c\x0f\x62\xbf\xef\x0e\x1f\xc0\xb3\xd3\x36\x99\xc0\x4f\x69\x0a\xec\x5e\x63\x80\xe0\x0c\x9c\x09\x74\x91\x3e\x01\x3a\x25\xe9\x47\xc8\x8b\x8d\xd1\xea\x2a\xfc\xe3\x7c\x9e\x71\xaf\x2f\xcc\x8c\x39\xf5\x9e\x19\xd3\x67\x3f\x86\x60\x7d\xff\x9f\x7e\x77\x79\x7c\xba\xe8\x56\x78\xd5\xb4\x6f\xb2\xf9\x10\x0d\x9e\x00\xb4\xc2\x2b\xe3\x3e\x6e\xf7\x3b\x00\x00\xff\xff\xd0\xde\x8b\x84\xe8\x04\x00\x00"),
          path: "sql-api-readme.tml",
          root: "sql-api-readme.tml",
        },
      
        "sql-api-test.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5d\x4f\xe3\x46\x14\x7d\x8f\x94\xff\x70\x6b\xb5\x92\xbd\x75\x87\xe5\x35\x55\x1e\x08\xde\x45\x5b\x55\x49\x8a\x43\xf7\x31\x1a\xec\xeb\x30\xbb\x63\x0f\xcc\x5c\x27\x20\xcb\xff\xbd\x1a\xdb\xf9\xe0\x23\x6c\x1c\xa0\x52\x69\x90\x40\x60\xdf\xcf\x33\xe7\x1c\xec\x14\x05\xfc\x7c\x9d\x08\x94\x31\xf4\xfa\x50\xfd\x32\xb8\x1b\xf2\x14\x81\x85\xa4\xf3\x88\xc0\x19\xe7\x97\x52\x44\x5f\x02\x07\xca\xb2\xdb\xa9\x12\x88\xcf\x6c\xf8\x0c\x69\xc2\x67\xab\x02\x8e\xb9\x91\x0e\x38\xdf\x8c\xca\xea\xd8\x6e\x67\xce\x35\xb8\xdd\x0e\x00\x00\xce\x31\x23\x03\x7d\x48\x91\xb4\x88\x0c\x1b\xe2\xc2\x8d\x72\x43\x2a\x65\x21\xf1\xe8\x7b\x20\xcc\xb5\xe4\x77\xae\x32\x2c\xa4\x58\xe5\xe4\x79\xb6\x84\xcd\x8d\x54\x96\x88\x19\xf4\xc1\xdc\x48\x76\x5a\xfd\x51\xd4\x77\xec\x57\x30\xb0\x03\xf7\x40\x19\x76\x86\x84\xd9\xdc\x75\x8a\xa2\x19\x9f\x8d\x79\xf4\x9d\xcf\xb0\x2c\xa7\xe1\x5f\x7f\x4e\x27\x9f\xc2\xc9\x34\x18\x38\x9e\xbf\x4e\xbf\x30\xa8\x77\x4f\xbe\x08\x3f\x9d\xdf\x4b\x0f\x06\x5f\xc6\xbb\xa7\x9f\x04\xc1\xc3\xf4\xb1\xd2\xb4\x7b\x81\xf1\xe8\x7c\xf2\xa0\x40\xa0\xc5\xbc\xcd\x0a\x75\xfc\x23\x0c\xc6\xdc\x98\x85\xd2\x71\x8b\x59\x4e\xc2\xf0\xeb\xe8\x3c\x58\x95\x2a\x97\x07\x46\x68\xe8\x54\x49\xe8\x83\x53\x14\x52\x2d\x50\x2f\xf9\xc4\x46\x97\xdf\x30\x22\x66\x8f\xac\xfa\x51\x96\x53\x1b\xed\x74\x3b\xd5\x71\x1f\x1d\xc1\x04\x0d\x9d\x21\xad\x5b\x6f\xa4\x94\x25\xcc\xb9\x14\x31\x27\x34\x40\x57\x08\xda\xb2\x09\xe7\x5c\x82\x4a\x80\xc3\x96\xa4\xaa\xae\xc6\x48\xe9\x18\x12\xad\x52\xe0\x96\x4a\xf1\x25\xeb\x76\x92\x3c\x8b\x7e\xd0\xd2\x25\xf8\x60\x67\x14\xd9\x8c\x4d\xbc\x86\x79\xfc\x5a\x58\x0d\xd4\x65\x2c\x97\x9b\x9d\xfd\x86\xe9\x7e\x45\xd6\x21\x2e\x82\x81\x5b\xf3\x77\x79\x67\x83\xd7\x74\x6b\x6b\x44\x2a\x23\xbc\x25\xf6\x55\xd0\xd5\x44\xa4\xa8\x72\x72\x97\xd7\x86\xb8\xf8\x9b\xcb\x1c\x07\x7c\xe6\x7a\x3e\x1c\x7f\x84\x0f\x40\x22\x45\x16\x62\xa4\xb2\x78\x55\x0a\x25\xa6\x3e\xa0\xd6\xb6\xa0\x54\x3c\xfe\x23\x1c\x0d\x3f\x2b\xed\xfe\x18\xff\x53\x8d\x9c\xd0\xc6\x7b\x75\x2d\x91\x54\x85\x7e\xea\x43\x26\x24\x6c\x28\xcd\xae\x68\xd8\x67\x2e\x24\xc6\xae\x13\xe6\x51\x84\xc6\x24\xb9\x94\x77\x55\x4b\x8c\xc1\x56\x81\x44\xe9\x6d\x07\xd1\x1c\x42\x0f\x7e\xf9\xf5\x86\x39\xd5\xc0\xde\x8a\x3b\xeb\x16\x96\x8b\x2f\x6c\xe1\xac\xa0\x89\x31\x41\x6d\xcf\x8b\x05\x28\x91\xd0\x8d\xe8\xd6\xaf\x00\x63\x4b\x6f\x5b\xc5\x36\xab\xf7\xfa\x55\x7c\x8d\xcc\x3a\xde\xfb\xbd\x3d\x30\x3c\xb6\x43\x2f\xb9\xf7\xcc\xd8\x22\x23\x05\xf1\xe5\x5e\xd0\xb4\x6d\xc2\xd6\xe8\x4c\x6b\xd6\xd4\x0b\x9f\x21\x3d\x8d\xce\xbe\xb4\x68\xe4\x89\x31\x18\x52\x7a\xb7\x19\x2b\x81\xee\x09\xc4\x0b\xfa\x55\x98\x94\xf7\x3d\xe8\x44\xca\x7d\x6c\x48\xca\x17\x1a\xd1\xf6\xbe\x07\x2f\x3a\x78\xd1\xbb\xf5\xa2\x3a\xc9\xf8\x4b\x53\xea\xad\x5c\xe9\x44\xca\x7a\x75\x87\x9b\xc8\xf1\x9d\xa2\xa8\x9e\x42\x59\xc5\xc7\xb2\x74\x7c\xf8\xed\xd8\x7e\xbf\x8a\x55\x59\xfd\x36\xa3\xfc\x0b\x46\xd5\xb2\xdb\x06\x5c\x22\x01\x89\x99\xdb\x24\x7b\xd0\xef\xc3\xc7\xf6\xcb\x92\x44\x6e\x08\x8e\xdb\x5a\x65\xeb\x3d\xf7\x6d\xb4\xe9\xc9\x5b\xe2\x6b\x71\x3c\xf0\xe4\xc8\x5e\x14\x2a\xdb\xf9\xc9\x70\x21\xe8\xea\x29\x43\x7e\xb6\xe9\xc1\x90\x0f\x86\xfc\x0e\x0d\x79\x07\xd1\x5d\x5c\xc7\x8f\x45\x97\xd7\x17\xdf\x48\x72\x75\xcb\x83\xe4\x0e\x92\x7b\x87\x92\xab\xab\x1e\x1d\x4d\x46\xc1\xa8\x07\x8d\xba\x8c\x4a\x91\xae\x2c\xd3\x9f\x86\xa4\x51\xc4\x63\x08\xf7\x47\xa8\x96\xf0\x9b\x63\xd4\xbe\xcd\xe1\xad\x75\xff\x27\xa4\x5a\x6a\x8f\xde\x5a\x53\xf5\x1a\x1f\x9d\x3d\xdb\xf3\xe0\xd6\xff\x69\xb7\xfe\xff\x39\xf0\xfd\x8d\xb7\xff\x8f\xda\x63\xf5\x4a\x70\x6f\xbf\x7c\xfb\x36\x4b\x1b\xf9\x27\x00\x00\xff\xff\xae\x6c\x2c\xd9\x10\x1a\x00\x00"),
          path: "sql-api-test.tml",
          root: "sql-api-test.tml",
        },
      
        "sql-api.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x59\x6f\xdb\x48\x12\x7e\xb6\x01\xff\x87\x5a\x62\x31\x90\x06\x5c\x06\xfb\xea\x81\x1f\xc6\x47\x06\x01\x76\x3c\xd9\x24\xb3\xfb\x30\x18\x04\x2d\x76\x51\xea\x84\x87\xd2\xdd\xb4\x25\x08\xfa\xef\x8b\xea\x83\x97\x44\x49\x94\x95\x6c\x9c\x89\x81\x44\xa6\xd8\x5d\xc7\x57\xd5\xf5\x55\xb3\xe9\x17\x2f\x00\xa5\x2c\xa4\x82\x28\x8a\x2e\xce\x1f\x98\x84\xd1\xc5\x39\x00\xc0\x9d\x94\xf7\x85\x7e\x59\x94\x39\x87\x2b\x37\x28\xba\xc7\xc7\x51\x20\x31\x2e\x24\x87\xbc\xd0\x90\xd0\xed\x60\x7c\x71\x3e\xbe\x38\xbf\x38\x7f\xf1\x02\x32\x36\x7f\x29\x30\xe5\x0a\x38\x26\x22\x47\x05\x0c\xf4\x72\x8e\x90\x14\x12\x18\xdd\x06\x3d\x63\x1a\x70\x31\x2f\x94\xb9\x6b\x87\x8f\xc6\x90\xa1\x9e\x15\x3c\xba\x38\x37\xe3\x6b\x41\x19\x9b\xff\xa1\xb4\x14\xf9\xf4\x4f\x91\x6b\x94\x09\x8b\x71\xb5\x76\xfa\xdc\x18\x89\xba\x94\xb9\x02\x3d\x33\x33\x41\x68\x85\x69\x02\x2c\xe7\x30\x97\xc5\x83\xe0\x46\x95\xd5\x00\xba\x80\x8c\xe9\x78\x66\x46\xab\x4f\x69\xf4\x8e\x4d\x52\x34\x92\xa0\xd2\x10\x5d\x9c\x27\x65\x1e\xc3\x28\xab\x4d\x19\xd7\xc6\x8e\xb6\x5b\x15\x5a\xa0\xc6\xb0\xb2\x20\x5a\xbb\x20\x0b\x21\x17\xe9\xc5\xb9\xb7\x7a\xb5\x8a\xde\x6a\x59\xc6\x3a\xfa\x6d\xf2\x01\x63\x1d\xdd\xb3\x0c\xd7\xeb\x2e\x72\x79\x6d\x0e\x3c\xce\x44\x3c\xab\x60\xab\x3d\x71\x1a\x2c\xb4\x45\x02\x2c\x4d\x8d\x0a\xa6\xb5\x14\x93\x52\x93\x1c\xa5\x8a\x58\x30\x8d\x1c\x1e\x85\xb6\x6e\x5b\x1d\x1c\x94\x31\xa3\x94\x08\x8c\x14\xc7\x82\x23\x87\xc9\xd2\x42\xe3\xef\xf9\x98\xec\x36\xbb\x61\xec\xea\xe2\xfc\xec\x50\xa8\xf6\xa2\x72\x53\xe4\xaa\xcc\x50\xee\xc2\x85\xc5\x31\xce\xb5\xaa\x61\xe0\x4c\x33\x77\xef\x51\xa4\x29\x4c\x10\x62\x2b\x87\x1b\x5d\x22\xd7\x85\x71\x72\x2a\x1e\x44\x3e\x05\x91\xcd\x53\xcc\x30\xd7\x74\x71\x0a\x50\x2a\xab\xdb\xa8\xb8\xaf\x7b\x30\x19\x5b\x4c\xf6\x42\x72\x7b\xdd\x58\x5e\xb5\xb5\xd6\x5f\x97\xf0\x70\x7b\x0d\x37\x6f\x7e\xbf\x85\x62\x8e\x92\x69\x51\xe4\xca\x88\x2c\x95\x71\xf1\x53\x4a\xce\x91\x47\x65\xce\x51\xa6\x22\x47\xe0\x93\x3d\x4e\xdd\x5e\x3b\x6d\x26\xbd\xe3\x22\x05\xeb\x03\x5d\xa9\x85\x59\x4b\xb7\xd7\x74\xc1\x17\xf0\x23\x5d\xbd\xfd\xf7\xbf\xe8\x32\x43\x2d\x45\xac\xfc\x67\xf4\xab\xfd\xa4\x5b\x9a\xd6\x1e\x69\x36\x8b\xf0\x15\xa7\x10\xe8\x65\x8d\xc0\x3d\x3e\x56\xab\x9b\x41\x8e\x8f\x20\x72\xa5\x59\x1e\x23\x85\xb9\xd7\x4e\xbf\x7c\xa9\x60\x59\x15\xd6\xd2\x10\xb2\xae\x15\x61\x6d\x7a\x08\x3a\xa3\x42\x68\x66\x28\x6b\xd2\xaf\x62\x6a\xe1\x1b\xc3\x8f\xbd\xea\xdc\x72\xe7\x0b\xb8\xbc\x32\xb2\x48\x6f\x46\x92\x49\x64\x14\x45\xa6\x3e\x36\x2a\xc2\x0f\xfb\x44\xd1\x8f\x5a\x5c\x92\x84\xfa\x0b\xbe\xb8\x04\xde\xfc\x22\x2e\xd2\x4b\x0b\x61\xe3\x4b\xe7\xdf\x25\x64\x8d\x2f\xcd\xa0\xcb\x0a\x68\xd2\xb6\xa2\xff\xdc\xf4\xb5\x1b\xba\xae\x91\xbf\xc5\x14\x35\x52\x21\xc1\x8c\xd6\x96\x29\x36\x59\xf1\x80\x26\x6b\x1c\x09\x24\xb2\xc8\x6c\x41\x99\xb8\xcc\xa2\x0b\x97\x82\x1c\xe6\xe5\x24\x15\xf1\xab\xdb\xc8\x48\x7c\x63\xe6\xa8\x6a\xa0\x50\x94\xa4\x59\xa9\x34\xcc\xd8\x03\x02\x73\xe3\x41\x70\x78\x60\x69\x89\x21\x15\x3c\x89\x4a\x21\x07\x14\x7a\x86\x92\x96\x21\x83\x89\x2a\x72\x28\x24\x7c\xa0\x4f\xcd\xa6\x46\x3a\xfd\x6a\x17\x34\xe6\x8d\xc4\x78\xcd\xe2\x8f\x6c\x8a\xeb\x75\xd4\x03\xb9\x4b\xe9\xba\xe0\xf3\xc9\x8e\x48\x8f\x1d\x2e\xa3\x58\x2f\xa8\xa4\x68\x5c\xe8\xe8\xc6\x7e\x86\x95\xbf\x2e\xdb\xdc\x7a\xf6\x6c\x90\x51\x76\xf8\xec\xbb\xc7\xc7\x77\x92\xc5\x38\x0a\xfa\x93\xd8\xaa\x22\x7e\x35\xd1\xc7\x04\x25\x64\x7c\x12\x79\x19\x77\x99\xd0\x23\x7f\xf1\x2a\x4f\x8a\x43\x84\x85\x7e\xc2\x7f\x85\x9e\x8d\x02\x6f\x72\x50\x5b\xdf\x1e\x62\xad\xcc\xa2\xbb\x9c\x8f\xc6\xe3\x2a\x91\x45\x52\xb9\xff\x4a\xdd\x2d\xe6\x42\x22\x27\x50\x2a\xee\xa3\x1f\x94\x92\x7c\x4e\x32\x1d\xdd\x11\x12\xc9\x28\x70\x58\xc1\x8c\x29\x8a\x2e\x4d\xf3\x0e\x1a\x8c\xfa\xdc\xf3\xf3\x5f\x32\x91\xa2\xa1\x3e\x6e\x13\xd4\x66\xe2\x70\xbf\x46\x81\xc9\xfc\x20\x34\x3a\xe3\x22\xed\xde\x36\xb1\x0b\x0c\x4f\x59\xed\xd6\x7d\x6f\xa9\x5b\xc9\x28\x65\xb5\x74\x2a\x64\x9c\xdf\x24\x98\x2f\x1c\xf2\x94\x58\xb6\xb2\x84\xe0\xac\x7b\x2f\x78\xd3\xbc\x9f\xcc\xbc\xbf\x5d\x51\xb3\xd0\x44\xf1\x64\x98\xec\x71\xf8\x00\xc8\xf6\x60\xe2\x5c\xbf\xba\x02\x4e\x55\xd0\xf4\x90\x6f\x8a\x47\xd5\xf4\xa6\x81\x5d\xa3\xc7\xac\xef\xaf\x0f\x80\x78\xcf\x22\xb0\x80\xf3\x13\xc2\xd0\xad\xdf\xad\x76\xee\x46\x22\xeb\x54\x4a\xc6\x79\xb3\x4c\x56\xed\xc6\xf6\x32\xd9\xa4\x34\x3d\xc3\x0e\xf5\xef\xad\x60\xff\xc7\xea\xfa\xa4\x4a\x6a\x71\xdb\x5e\x49\x31\xc5\x6c\x08\x06\x4f\x2d\xb5\xd6\x96\x13\x95\x5a\x2f\xac\x3f\xb1\xc8\xbd\xe8\xf5\xf3\xaa\xb7\xb1\x4d\xf3\xfd\xf5\x76\x87\x73\xc7\x16\xdd\xb3\xb3\xb3\xb3\xde\x6a\xb0\x5a\x11\x3a\xa3\x19\x53\x2f\x29\xef\x5c\x54\x20\xb0\x5b\x90\x60\x0c\xeb\xf5\x46\x89\xaa\xab\xf3\x5b\xf6\xd0\xaa\xcd\x64\x7d\x6f\x29\xde\x0a\x59\xfb\x76\xa3\x05\xeb\x07\xb1\x6f\x05\x55\xe0\xf6\xcb\xec\x81\x71\xdf\x04\x72\xcb\xc5\xe6\x80\xc1\x5b\xa2\xd0\x99\x54\x25\x66\x5f\xb1\x6e\x85\xe8\x80\xa2\x7d\xd3\x49\xaf\x8d\x86\x76\xbf\xe7\xfd\x1e\x8f\x7d\xa6\x60\xaa\xb0\x99\x0e\x66\x4d\xe5\xda\xe4\x83\xdf\xe7\x8f\x56\x2b\xba\x28\x4a\xed\xb6\xb6\x6e\x41\xff\x1c\xd3\x3e\x00\xac\x60\x08\xa8\x4e\x06\x10\x7c\x30\x1f\xeb\xf5\x26\x0d\xf6\xe7\x98\xd3\x3a\x2c\xcd\x9e\x9e\x54\x83\x56\xe2\xa7\x12\xe5\x32\xa8\x6d\x1d\xd6\x09\x7c\x8e\x8c\x78\x92\xf9\x75\x06\xe4\x7c\xbd\xde\x45\xe7\xbf\xa0\xfe\x39\x4d\xaf\x97\xbf\x49\x8e\xb2\xb3\xff\xd1\x52\x20\x71\x69\x9a\x9a\xbc\xc2\x5c\x2b\xbb\x07\xaa\x88\xbd\x22\xf5\xc2\x4e\xcf\xdd\x6f\x93\x25\x18\xe9\x86\x7a\xd5\xc1\x1c\xd9\x32\x66\x3b\x55\x5a\x45\x7e\x7f\xeb\x95\xf9\x1d\x08\x8c\xfe\xf8\x73\x00\x8f\x6e\x3e\xc1\x52\xe1\xfb\xb0\x99\xce\xd6\x22\x32\xc5\x29\xab\x74\x86\xf0\x8f\x7f\xd2\xbf\x71\x0b\x5b\x92\x60\x73\xa0\x0d\x70\x85\xa6\x32\x70\x4a\xd7\xbe\x34\x77\x94\x04\x5e\xbd\xf9\x57\xa9\xe8\xee\xfa\xf7\x6f\xee\xf4\x72\x8e\xcf\xb5\x3f\xaa\x91\x1e\x16\xf4\x10\xe6\x6c\x8a\xd4\x74\x86\x84\xfe\xbc\xc8\x15\xbe\x46\xf9\xda\x7d\x79\x44\x4e\x18\x51\xed\xc4\x18\xdc\x61\x59\x6f\x4e\xd4\x61\x79\x61\xcf\xa3\x73\xaa\xea\xc6\x71\xa5\xac\xa7\xd4\x6e\xec\x93\x72\x91\xda\x25\xb8\xd9\x22\x3d\x30\x09\xba\xd0\x2c\xa5\x50\xd6\x5f\x49\xa1\x31\x53\x30\x28\x1b\xf6\x75\x5d\xee\x11\x67\xb7\xed\x22\x45\xa1\xb5\x21\xec\xb0\xa3\x0d\xa6\xcb\xd0\x26\x4d\x76\xcb\x0b\xa5\xf5\x46\x4a\x8f\x7f\xda\x20\xde\x27\x13\x6a\xab\xd0\xfb\xca\xd4\xff\xbc\xd1\x1d\x71\x58\x1e\x38\x51\x74\x9b\x96\x1f\xba\xad\xee\xe6\x82\x43\x7b\xeb\x36\x1b\xda\x5b\xed\x9e\xa9\xfd\xdc\x9d\x14\x12\xde\x87\x26\xae\x14\x4a\xc9\x72\xaa\x2e\x26\x9d\x3a\x56\x51\xa2\x0d\xdd\xce\x6d\xf5\xff\xf2\xca\x6e\x2d\xfc\x43\x74\xd2\xb6\xb3\x85\x1a\x18\x75\x77\x42\xe0\x37\xed\xe6\x0c\x81\xdc\xec\x8b\xfa\x91\x01\x27\xb9\x81\x45\xee\x88\x5c\xd8\xb9\xde\xfb\x02\x6b\xe3\x72\x05\x6c\x3e\xc7\x9c\x8f\xa4\x5b\x8d\xa6\x35\xde\x78\xf2\xb2\xd9\x24\xcf\x59\x2e\xe2\x9e\x72\xec\xc1\x30\x44\x5a\x1d\xa3\x6c\xc7\xac\x73\x36\x12\xec\xec\xc9\x64\xbb\x64\x74\x5b\xb4\xeb\xa5\x3d\xb1\x6b\x74\x11\xbb\x1f\x4a\x27\x66\xf8\x47\x5c\x9a\xb6\xc2\x32\xbc\x11\xd6\x3c\x3c\xfc\x0b\xb5\x16\x0e\xc0\xed\xed\x05\xc1\xe4\x9b\x09\x63\x71\xa3\x9f\x1c\xd4\x39\x9c\xa0\x6b\x38\x5d\xcb\xd0\x5d\xa9\x1f\x71\xe9\xdc\xfb\x36\x1a\x89\x3e\x7f\x4e\xd6\x61\x0c\x08\xbd\x3b\xe1\xdd\xd2\x87\x0c\xe7\x82\xa3\x1a\x8e\xee\x1e\xfc\x17\xd4\xcd\xde\xe2\x07\x32\xc3\x24\xba\x87\xec\x44\x9b\xf1\x41\xbd\x43\x4f\x03\xd1\x51\x3e\xe4\xc9\xcf\xc0\xc0\xc2\x71\xed\xc5\xc0\x44\xd8\xd5\x81\x6c\xed\x41\x8e\x4d\xb4\xaf\x8f\xc6\x6c\x9a\x75\xd9\xeb\x70\xda\xaa\x8e\x14\x9b\x9b\xe1\xbf\x18\x55\x1d\x78\xd8\xfa\x2d\x51\xd3\x51\xe7\xb2\xcf\x84\xa6\xbe\xd8\xd9\xec\xd7\x40\x57\xd0\xcb\x57\x00\x6d\xc6\x5a\xad\xe0\xef\x73\xdb\xa5\x52\x64\xe8\x97\xeb\x25\xc9\xac\xa7\xfa\x43\x95\x60\x73\xa2\x66\x53\x9a\x36\x45\xfd\x8e\x4d\x2b\x41\x81\xfa\x94\xfa\x67\xd4\xeb\x56\xb1\x3d\x90\x1f\x83\xd5\xca\xc8\x8e\xfe\x43\xc5\x60\xbd\x3e\xe4\xbc\xfa\x3b\x61\x7e\x56\xc2\xfc\xf6\xe8\x72\x1f\x61\xfe\x3e\xe7\x4c\x23\x94\xea\x3b\x5d\xee\xa5\x4b\x8b\xd5\x41\x8c\xf9\xe5\x4f\xd9\xad\x71\x27\x62\x4d\x2f\xec\x9b\x79\xa1\x29\x11\xb9\x50\xb3\xd0\x9b\xd1\x96\x78\xcc\x3b\x2c\x9d\xf7\x8b\x4e\xf4\x7e\xd3\x51\x3c\x35\x98\xa3\x7a\xe9\xd3\x9d\xea\x77\xd9\x73\x83\xcf\xdc\x42\xe8\x9c\xec\x7f\x11\x46\x2b\x6d\xbd\x1a\x78\x1e\xeb\x4f\x2c\xed\x11\xfd\xa0\x70\xef\x70\xe9\x8b\x3c\x6d\x1e\x48\x57\x87\xf1\x8f\x79\xfe\xfa\x79\xcf\xe5\x37\x73\x84\x94\x7e\xcf\x91\xaf\x37\x47\xda\x2d\xc3\x1e\xee\x70\x7d\xc3\x71\xa7\x6e\x87\xe3\xd5\x0a\xca\xce\x37\x05\xef\x16\x18\x37\xff\x22\x85\x28\xdd\xe4\xae\xfb\x33\x86\x34\x25\x0c\xa9\x27\xc0\x05\xc6\xa5\xb9\x55\x24\xc0\x20\x2e\x95\x2e\xb2\x7a\x3c\x9b\x32\x91\x2b\x6d\x86\x1a\x3f\x0e\xee\x0f\xc8\x84\xed\xdd\x41\xb2\x30\xf2\x47\xfe\xcd\xfd\xd0\xbd\x15\x3f\xf6\x1b\xe5\xa7\x71\x3f\x29\x3e\x11\xf3\x5b\x51\xcf\x83\xd4\x6d\x20\xb1\xfe\x33\x8c\x13\x9f\x0f\x1e\xf0\x1a\x72\xb2\x18\xd9\x7a\x67\x75\xa8\xc5\x29\xde\x34\xfe\xdc\x7e\x7d\x25\xaf\x12\xff\xe6\xdd\xf3\x0e\xef\xaf\x23\x7d\x15\xe0\x7f\x01\x00\x00\xff\xff\xab\xe6\xdb\x1e\x6c\x37\x00\x00"),
          path: "sql-api.tml",
          root: "sql-api.tml",
        },
      
    
  }
)

//==============================================================================

// FilesFor returns all files that use the provided extension, returning a
// empty/nil slice if none is found.
func FilesFor(ext string) []string {
  return assets[ext]
}

// MustFindFile calls FindFile to retrieve file reader with path else panics.
func MustFindFile(path string, doGzip bool) (io.Reader, int64) {
  reader, size, err := FindFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return reader, size
}

// FindDecompressedGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindDecompressedGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, true)
}

// MustFindDecompressedGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindDecompressedGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindDecompressedGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, false)
}

// MustFindGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFile returns a io.Reader by seeking the giving file path if it exists.
func FindFile(path string, doGzip bool) (io.Reader, int64, error){
	reader, size, err := FindFileReader(path)
	if err != nil {
		return nil, size, err
	}

	if !doGzip {
		return reader, size, nil
	}

  gzr, err := gzip.NewReader(reader)
	return gzr, size, err
}

// MustFindFileReader returns bytes.Reader for path else panics.
func MustFindFileReader(path string) (*bytes.Reader, int64){
	reader, size, err := FindFileReader(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFileReader returns a io.Reader by seeking the giving file path if it exists.
func FindFileReader(path string) (*bytes.Reader, int64, error){
  item, ok := assetFiles[path]
  if !ok {
    return nil,0, fmt.Errorf("File %q not found in file system", path)
  }

  return bytes.NewReader(item.data), int64(len(item.data)), nil
}

// MustReadFile calls ReadFile to retrieve file content with path else panics.
func MustReadFile(path string, doGzip bool) string {
  body, err := ReadFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFile attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFile(path string, doGzip bool) (string, error){
  body, err := ReadFileByte(path, doGzip)
  return string(body), err
}

// MustReadFileByte calls ReadFile to retrieve file content with path else panics.
func MustReadFileByte(path string, doGzip bool) []byte {
  body, err := ReadFileByte(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFileByte attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFileByte(path string, doGzip bool) ([]byte, error){
  reader, _, err := FindFile(path, doGzip)
  if err != nil {
    return nil, err
  }

  if closer, ok := reader.(io.Closer); ok {
    defer closer.Close()
  }

  var bu bytes.Buffer

  _, err = io.Copy(&bu, reader);
  if err != nil && err != io.EOF {
   return nil, fmt.Errorf("File %q failed to be read: %+q", path, err)
  }

  return bu.Bytes(), nil
}
