package static


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
)

type fileData struct{
  path string
  root string
  data []byte
}

var (
  assets = map[string][]string{
    
      ".tml": []string{  // all .tml assets.
        
          "sql-api-backend.tml",
        
          "sql-api-json.tml",
        
          "sql-api-migration.tml",
        
          "sql-api-readme.tml",
        
          "sql-api-test.tml",
        
          "sql-api.tml",
        
      },
    
  }

  assetFiles = map[string]fileData{
    
      
        "sql-api-backend.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xc1\x6e\xe2\x30\x10\x86\xef\x79\x8a\x39\x82\x14\x25\xcf\xb0\x01\x2d\xda\xcb\x82\xb4\xda\x53\xd5\x83\x63\xff\x24\x2e\x8e\x6d\xd9\x03\x25\x42\x79\xf7\x0a\x92\xa2\xb4\x22\xa8\xa5\x27\x4b\x33\x99\xf9\xbf\x6f\x94\x3c\xa7\xd3\x29\xfb\xc7\x61\x2f\x39\x5b\x97\x2f\x90\x9c\xfd\x15\x0d\xba\xae\x10\x72\x07\xab\x48\x61\xab\x2d\x22\x09\x2a\x87\xca\x6b\xad\x65\x4d\x01\x3e\x20\xc2\x72\x24\xae\x41\x95\x3e\x68\x5b\x51\x92\xe7\xd4\x80\x6b\xa7\x22\xe1\xe8\x5d\x84\xa2\xb2\xbd\x7c\xb1\x2c\x48\x37\xde\xa0\x81\x65\xc1\xda\x59\xda\xba\x30\x9e\xe5\xd6\x63\x8a\x26\x4b\xee\x75\xdf\x59\xb5\x65\x84\xad\x90\x38\x25\x44\x4b\x18\x30\x66\x92\x8f\x24\x9d\x65\x1c\x39\x5b\xf4\x6f\x4a\x7e\x5f\x1a\x2d\xff\x2c\x29\x72\xd0\xb6\x9a\x13\x42\x70\x21\x21\x5a\x04\x88\xa9\x21\x18\x34\x23\x82\x8d\x90\x3b\x51\x9d\xd9\x26\xa8\x86\xad\x94\x10\xad\xc0\x5f\x04\xa1\xd9\x37\x12\x52\xea\x23\xe6\x09\xd1\x7f\xaf\x26\xc9\x3f\xa5\x3c\xac\xd2\x9b\xfc\x32\xa6\x68\xd7\x41\x21\xdc\x4e\x73\xe7\xd6\xf0\x14\xed\xc8\xec\xe9\xf9\x41\xb7\x15\xb8\x68\x7f\x6b\x18\x75\x3b\x71\x87\xf6\xaa\x76\x10\x66\x8f\xd1\x9f\xd0\xfd\xe0\xa6\xbd\xec\x1d\xcb\x6b\xea\x47\xd9\x94\xbc\xa8\x2e\x10\x29\x05\x44\xef\x6c\xc4\x06\x61\x33\x14\x1f\xb9\xc5\x65\xd7\x00\xd6\xbd\x05\x00\x00\xff\xff\x4a\x68\x4a\xbf\xb6\x03\x00\x00"),
          path: "sql-api-backend.tml",
          root: "sql-api-backend.tml",
        },
      
        "sql-api-json.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x6b\xc2\x40\x10\x85\xcf\x09\xe4\x3f\xbc\x7a\x28\x06\x24\xde\x5b\x3c\x94\x42\x0f\x3d\x68\x41\x3c\x95\x82\xeb\x3a\xd1\xd8\x64\x57\x26\xa3\x52\x96\xfd\xef\x65\x37\x4a\x3d\xb4\xa5\xa1\x97\x84\x9d\x19\xde\xf7\xf1\x8e\x8a\xe1\x5c\x6d\x4f\xc4\x28\xe6\xc2\x07\x2d\xc5\x6c\xb5\x23\x2d\xc5\x54\x35\x14\x3f\xde\x3f\xcf\x67\x53\x4c\xb0\x74\x0e\x8d\xda\xc7\xd7\xf9\x18\x83\x55\x6b\xcd\x00\x83\x5d\xfc\x79\xbf\xcc\xd2\x2c\xfd\x5b\xea\x23\x93\x12\xfa\x2e\xbb\xdb\x3c\x68\xa9\xac\xf9\x0f\x61\xb1\x5f\xff\x40\xe8\x36\xbf\x11\xc6\x63\xd4\x56\xad\xc3\xf9\x93\x65\x30\xc9\x81\x4d\x0b\x05\x43\x27\x54\xa6\x15\x65\x34\xc1\x96\x50\x70\xee\xa2\xf0\xa2\xf4\xbb\xda\x90\xf7\xc5\xd7\xec\x4a\xcb\x7b\x94\x6c\x1b\xc8\x96\xb0\x67\x7b\xac\xd6\x84\x00\x85\xb6\x46\xc8\x48\x91\xa5\xe5\xc1\xe8\x6b\xf0\xf0\xbc\x42\x2b\x5c\x99\x4d\x8e\x61\x0f\xda\x08\xc4\x6c\x39\x87\xcb\xd2\x24\x54\x46\x35\x35\x7d\x74\x43\x11\x49\x55\x86\x18\xdc\x4d\xa2\x6b\xb1\x30\x8d\xe2\x76\xab\xea\xe1\xeb\xdb\xea\x43\xe8\x62\x98\x8f\x70\x1b\xf2\xf3\xfb\x78\x7e\x33\x81\xa9\xea\x48\x4e\xba\xf2\xfa\x80\x5d\xe7\x9e\xa5\x49\xe7\x70\x4e\x08\xf9\xa3\x90\x9b\xa5\x71\xfe\x19\x00\x00\xff\xff\x20\x59\xff\x66\xbf\x02\x00\x00"),
          path: "sql-api-json.tml",
          root: "sql-api-json.tml",
        },
      
        "sql-api-migration.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xcf\x4b\xfb\x40\x10\xc5\xef\xfd\x2b\x1e\x3d\x7d\xbf\x50\xd3\x7b\xc0\x43\xd5\x0a\x42\xb5\xa0\xf1\x24\x22\xd3\xec\xb4\x59\xe9\xfe\x70\x77\x6a\x94\x90\xff\x5d\x76\x25\xc9\x41\xcd\x69\xb2\xf3\x3e\x6f\xde\x7b\xa7\x80\x7f\x33\x00\x58\x2e\xd1\x75\xc5\x83\x84\x53\x2d\xc5\x76\xf7\xca\xb5\x14\x77\x64\xb8\xef\x2b\xda\x1d\x19\x8a\xf7\xda\x72\x84\x34\x0c\xc9\x2f\x46\x1f\x02\x89\x76\x16\x86\x85\xce\x14\x09\xa1\x6d\x74\xdd\x60\x30\xd4\x11\xa7\xc8\x0a\xe2\x70\x60\xcb\x81\x84\x33\x4f\xde\x07\xe7\x83\x4e\xff\x97\xf7\xeb\x55\xb5\x46\xb5\xba\xd8\xac\x11\xdf\x8e\x88\x42\xc2\x86\xad\x60\xef\xc2\xc0\x69\x7b\x18\x5d\x29\x46\x57\x27\x56\x65\x7d\x0e\x53\x0c\xcb\x6a\x7b\xb5\x2d\xf1\xe8\x55\xf2\x6e\xb5\x34\xd8\x6b\x3e\x2a\x58\x32\x0c\xf9\xf4\x1c\x41\x56\x41\x5b\xc5\x1f\xdf\xd0\x1f\xad\x6f\xc7\x76\xe7\x18\xe7\x2e\x13\xe9\xab\xb4\xe1\x28\x64\x3c\xab\x12\x12\x4e\xbc\xc0\xb4\x4b\x89\x92\x4b\x89\x79\xd7\x89\xdb\xb8\x96\x03\x7e\xbd\xf2\x92\xd3\xcf\x17\x23\x7b\x93\x82\x71\x2c\xf1\xf4\x9c\xc7\xe9\x74\x3f\x89\xae\x53\xa5\xac\xc9\xd3\x0f\x4d\x3f\xfb\x3f\xfb\x0a\x00\x00\xff\xff\xde\xf6\xc3\xf5\xda\x01\x00\x00"),
          path: "sql-api-migration.tml",
          root: "sql-api-migration.tml",
        },
      
        "sql-api-readme.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\x4f\x6f\xda\x40\x10\xc5\xef\x48\x7c\x87\xa9\xb8\x98\x8a\x2e\xf7\x48\x3d\x00\x6e\xa3\x48\x51\x4b\x42\x73\x42\x91\xbc\xac\x07\x7b\xcb\x7a\xc7\xdd\x1d\xb7\x8e\x90\xbf\x7b\xe5\x3f\x29\x90\x3a\x4d\x50\xe3\xcb\xee\x3e\x79\xe6\xfd\xe6\xcd\x7e\x2f\x56\xec\x0a\xc5\xe2\xeb\xe6\x3b\x2a\x16\x5f\x64\x86\x55\x05\xab\x9b\xeb\x70\x0e\xb3\xe5\xd5\x70\xf0\xf1\xe5\x6f\x38\x18\x0e\xd6\xef\xd6\x97\x04\xb7\x98\x93\x63\x58\x48\x17\xdf\x07\x29\x73\xee\x2f\xa6\xd3\x84\x5c\x23\x2b\xe9\x62\xa1\x28\x9b\x6e\x64\x9c\xe0\x74\xbf\x17\x4b\xa9\x76\x32\xc1\xa5\xe4\xb4\xaa\xc6\xff\xa8\x68\x9f\x7f\x97\xd4\xce\x2f\xce\x00\xda\x83\x04\x59\x30\x7d\x48\xd0\xa2\x93\x8c\x31\x2c\x6e\xef\x42\xd0\x59\x6e\x30\x43\xcb\x92\x35\x59\xd8\x92\x03\x4e\x11\xa2\xde\x96\x5d\xdf\x08\xb4\x85\xbc\xa5\x68\xfe\x5c\xee\x12\xd1\xe2\x44\xa2\xe6\xf9\x96\x22\x6c\xc9\x18\xfa\xa5\x6d\x02\x19\x72\x4a\x31\x60\xa9\x3d\xfb\xc6\x41\x15\x9e\x29\x03\xca\x6b\x12\x4d\xd6\x5f\xd4\x55\xa3\x11\x7c\x2a\x51\xd5\xd7\x28\x8a\x12\x1a\x0e\xea\x67\xa0\xb8\x04\x45\x96\xb1\x64\xb1\x68\xcf\x09\x6c\x4b\xd8\x16\x56\x05\xef\xfd\x0f\x23\x56\x37\xd7\x13\xa8\x2f\xe1\x7c\x0c\xe8\x1c\xb9\xee\x68\x1a\x3d\x07\xe4\x1f\x89\xb4\x6d\x46\x3e\x04\x53\x07\x26\x3d\xe4\xe8\x58\x6a\x5b\x57\x30\x35\x69\x3d\x62\x2e\x1c\x4a\xc6\x23\xd0\x56\xe8\x47\x45\x83\x19\x1c\xe2\xec\xb6\x57\x55\xe2\x99\xad\x3d\x65\x1f\x8d\xe0\x12\x79\xfe\xf0\x59\xa3\x89\x8f\x3c\x0f\x62\xbf\xef\x0e\x1f\xc0\xb3\xd3\x36\x99\xc0\x4f\x69\x0a\xec\x5e\x63\x80\xe0\x0c\x9c\x09\x74\x91\x3e\x01\x3a\x25\xe9\x47\xc8\x8b\x8d\xd1\xea\x2a\xfc\xe3\x7c\x9e\x71\xaf\x2f\xcc\x8c\x39\xf5\x9e\x19\xd3\x67\x3f\x86\x60\x7d\xff\x9f\x7e\x77\x79\x7c\xba\xe8\x56\x78\xd5\xb4\x6f\xb2\xf9\x10\x0d\x9e\x00\xb4\xc2\x2b\xe3\x3e\x6e\xf7\x3b\x00\x00\xff\xff\xd0\xde\x8b\x84\xe8\x04\x00\x00"),
          path: "sql-api-readme.tml",
          root: "sql-api-readme.tml",
        },
      
        "sql-api-test.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5d\x4f\xe3\x46\x14\x7d\x8f\x94\xff\x70\x6b\xb5\x92\xbd\x75\x87\xe5\x35\x55\x1e\x08\xde\x45\x5b\x55\x49\x8a\x43\xf7\x31\x1a\xec\xeb\x30\xbb\x63\x0f\xcc\x5c\x27\x20\xcb\xff\xbd\x1a\xdb\xf9\xe0\x23\x6c\x1c\xa0\x52\x69\x90\x40\x60\xdf\xcf\x33\xe7\x1c\xec\x14\x05\xfc\x7c\x9d\x08\x94\x31\xf4\xfa\x50\xfd\x32\xb8\x1b\xf2\x14\x81\x85\xa4\xf3\x88\xc0\x19\xe7\x97\x52\x44\x5f\x02\x07\xca\xb2\xdb\xa9\x12\x88\xcf\x6c\xf8\x0c\x69\xc2\x67\xab\x02\x8e\xb9\x91\x0e\x38\xdf\x8c\xca\xea\xd8\x6e\x67\xce\x35\xb8\xdd\x0e\x00\x00\xce\x31\x23\x03\x7d\x48\x91\xb4\x88\x0c\x1b\xe2\xc2\x8d\x72\x43\x2a\x65\x21\xf1\xe8\x7b\x20\xcc\xb5\xe4\x77\xae\x32\x2c\xa4\x58\xe5\xe4\x79\xb6\x84\xcd\x8d\x54\x96\x88\x19\xf4\xc1\xdc\x48\x76\x5a\xfd\x51\xd4\x77\xec\x57\x30\xb0\x03\xf7\x40\x19\x76\x86\x84\xd9\xdc\x75\x8a\xa2\x19\x9f\x8d\x79\xf4\x9d\xcf\xb0\x2c\xa7\xe1\x5f\x7f\x4e\x27\x9f\xc2\xc9\x34\x18\x38\x9e\xbf\x4e\xbf\x30\xa8\x77\x4f\xbe\x08\x3f\x9d\xdf\x4b\x0f\x06\x5f\xc6\xbb\xa7\x9f\x04\xc1\xc3\xf4\xb1\xd2\xb4\x7b\x81\xf1\xe8\x7c\xf2\xa0\x40\xa0\xc5\xbc\xcd\x0a\x75\xfc\x23\x0c\xc6\xdc\x98\x85\xd2\x71\x8b\x59\x4e\xc2\xf0\xeb\xe8\x3c\x58\x95\x2a\x97\x07\x46\x68\xe8\x54\x49\xe8\x83\x53\x14\x52\x2d\x50\x2f\xf9\xc4\x46\x97\xdf\x30\x22\x66\x8f\xac\xfa\x51\x96\x53\x1b\xed\x74\x3b\xd5\x71\x1f\x1d\xc1\x04\x0d\x9d\x21\xad\x5b\x6f\xa4\x94\x25\xcc\xb9\x14\x31\x27\x34\x40\x57\x08\xda\xb2\x09\xe7\x5c\x82\x4a\x80\xc3\x96\xa4\xaa\xae\xc6\x48\xe9\x18\x12\xad\x52\xe0\x96\x4a\xf1\x25\xeb\x76\x92\x3c\x8b\x7e\xd0\xd2\x25\xf8\x60\x67\x14\xd9\x8c\x4d\xbc\x86\x79\xfc\x5a\x58\x0d\xd4\x65\x2c\x97\x9b\x9d\xfd\x86\xe9\x7e\x45\xd6\x21\x2e\x82\x81\x5b\xf3\x77\x79\x67\x83\xd7\x74\x6b\x6b\x44\x2a\x23\xbc\x25\xf6\x55\xd0\xd5\x44\xa4\xa8\x72\x72\x97\xd7\x86\xb8\xf8\x9b\xcb\x1c\x07\x7c\xe6\x7a\x3e\x1c\x7f\x84\x0f\x40\x22\x45\x16\x62\xa4\xb2\x78\x55\x0a\x25\xa6\x3e\xa0\xd6\xb6\xa0\x54\x3c\xfe\x23\x1c\x0d\x3f\x2b\xed\xfe\x18\xff\x53\x8d\x9c\xd0\xc6\x7b\x75\x2d\x91\x54\x85\x7e\xea\x43\x26\x24\x6c\x28\xcd\xae\x68\xd8\x67\x2e\x24\xc6\xae\x13\xe6\x51\x84\xc6\x24\xb9\x94\x77\x55\x4b\x8c\xc1\x56\x81\x44\xe9\x6d\x07\xd1\x1c\x42\x0f\x7e\xf9\xf5\x86\x39\xd5\xc0\xde\x8a\x3b\xeb\x16\x96\x8b\x2f\x6c\xe1\xac\xa0\x89\x31\x41\x6d\xcf\x8b\x05\x28\x91\xd0\x8d\xe8\xd6\xaf\x00\x63\x4b\x6f\x5b\xc5\x36\xab\xf7\xfa\x55\x7c\x8d\xcc\x3a\xde\xfb\xbd\x3d\x30\x3c\xb6\x43\x2f\xb9\xf7\xcc\xd8\x22\x23\x05\xf1\xe5\x5e\xd0\xb4\x6d\xc2\xd6\xe8\x4c\x6b\xd6\xd4\x0b\x9f\x21\x3d\x8d\xce\xbe\xb4\x68\xe4\x89\x31\x18\x52\x7a\xb7\x19\x2b\x81\xee\x09\xc4\x0b\xfa\x55\x98\x94\xf7\x3d\xe8\x44\xca\x7d\x6c\x48\xca\x17\x1a\xd1\xf6\xbe\x07\x2f\x3a\x78\xd1\xbb\xf5\xa2\x3a\xc9\xf8\x4b\x53\xea\xad\x5c\xe9\x44\xca\x7a\x75\x87\x9b\xc8\xf1\x9d\xa2\xa8\x9e\x42\x59\xc5\xc7\xb2\x74\x7c\xf8\xed\xd8\x7e\xbf\x8a\x55\x59\xfd\x36\xa3\xfc\x0b\x46\xd5\xb2\xdb\x06\x5c\x22\x01\x89\x99\xdb\x24\x7b\xd0\xef\xc3\xc7\xf6\xcb\x92\x44\x6e\x08\x8e\xdb\x5a\x65\xeb\x3d\xf7\x6d\xb4\xe9\xc9\x5b\xe2\x6b\x71\x3c\xf0\xe4\xc8\x5e\x14\x2a\xdb\xf9\xc9\x70\x21\xe8\xea\x29\x43\x7e\xb6\xe9\xc1\x90\x0f\x86\xfc\x0e\x0d\x79\x07\xd1\x5d\x5c\xc7\x8f\x45\x97\xd7\x17\xdf\x48\x72\x75\xcb\x83\xe4\x0e\x92\x7b\x87\x92\xab\xab\x1e\x1d\x4d\x46\xc1\xa8\x07\x8d\xba\x8c\x4a\x91\xae\x2c\xd3\x9f\x86\xa4\x51\xc4\x63\x08\xf7\x47\xa8\x96\xf0\x9b\x63\xd4\xbe\xcd\xe1\xad\x75\xff\x27\xa4\x5a\x6a\x8f\xde\x5a\x53\xf5\x1a\x1f\x9d\x3d\xdb\xf3\xe0\xd6\xff\x69\xb7\xfe\xff\x39\xf0\xfd\x8d\xb7\xff\x8f\xda\x63\xf5\x4a\x70\x6f\xbf\x7c\xfb\x36\x4b\x1b\xf9\x27\x00\x00\xff\xff\xae\x6c\x2c\xd9\x10\x1a\x00\x00"),
          path: "sql-api-test.tml",
          root: "sql-api-test.tml",
        },
      
        "sql-api.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\xdd\x6f\xdb\x38\x12\x7f\x4e\x80\xfc\x0f\x73\xc2\x61\x61\x2f\x74\x2a\xee\x35\x8b\x3c\x6c\x3e\xba\x28\x70\x9b\xf6\xda\xee\xdd\xc3\x62\xb1\xa0\xc5\x91\xcd\x56\x5f\x25\xa9\xc4\x86\xe1\xff\xfd\x30\xfc\x90\x64\xd9\xb2\x2d\xc7\xed\x35\xdd\x06\x68\x1d\x59\xe4\x7c\xfc\x66\x38\xbf\xa1\xa8\xbc\x78\x01\x28\x65\x21\x15\x44\x51\x74\x71\xfe\xc0\x24\x8c\x2e\xce\x01\x00\xee\xa4\xbc\x2f\xf4\xcb\xa2\xca\x39\x5c\xb9\x41\xd1\x3d\x3e\x8e\x02\x89\x71\x21\x39\xe4\x85\x86\x84\x6e\x07\xe3\x8b\xf3\xf1\xc5\xf9\xc5\xf9\x8b\x17\x90\xb1\xf2\xa5\xc0\x94\x2b\xe0\x98\x88\x1c\x15\x30\xd0\x8b\x12\x21\x29\x24\x30\xba\x0d\x7a\xc6\x34\xe0\xbc\x2c\x94\xb9\x6b\x87\x8f\xc6\x90\xa1\x9e\x15\x3c\xba\x38\x37\xe3\x1b\x41\x19\x2b\x7f\x57\x5a\x8a\x7c\xfa\x87\xc8\x35\xca\x84\xc5\xb8\x5c\x39\x7d\x6e\x8c\x44\x5d\xc9\x5c\x81\x9e\x99\x99\x20\xb4\xc2\x34\x01\x96\x73\x28\x65\xf1\x20\xb8\x51\x65\x35\x80\x2e\x20\x63\x3a\x9e\x99\xd1\xea\x53\x1a\xbd\x67\x93\x14\x8d\x24\xa8\x35\x44\x17\xe7\x49\x95\xc7\x30\xca\x1a\x53\xc6\x8d\xb1\xa3\xed\x56\x85\x16\xa8\x31\x2c\x2d\x88\xd6\x2e\xc8\x42\xc8\x45\x7a\x71\xee\xad\x5e\x2e\xa3\x77\x5a\x56\xb1\x8e\x5e\x4f\x3e\x60\xac\xa3\x7b\x96\xe1\x6a\xd5\x45\x2e\x6f\xcc\x81\xc7\x99\x88\x67\x35\x6c\x8d\x27\x4e\x83\x85\xb6\x48\x80\xa5\xa9\x51\xc1\xb4\x96\x62\x52\x69\x92\xa3\x54\x11\x0b\xa6\x91\xc3\xa3\xd0\xd6\x6d\xab\x83\x83\x32\x66\x54\x12\x81\x91\xe2\x58\x70\xe4\x30\x59\x58\x68\xfc\x3d\x1f\x93\xdd\x66\xb7\x8c\x5d\x5e\x9c\x9f\x1d\x0a\xd5\x5e\x54\x6e\x8a\x5c\x55\x19\xca\x5d\xb8\xb0\x38\xc6\x52\xab\x06\x06\xce\x34\x73\xf7\x1e\x45\x9a\xc2\x04\x21\xb6\x72\xb8\xd1\x25\x72\x5d\x18\x27\xa7\xe2\x41\xe4\x53\x10\x59\x99\x62\x86\xb9\xa6\x8b\x53\x80\x52\x5b\xbd\x8e\x8a\xfb\xba\x07\x93\xb1\xc5\x64\x2f\x24\xb7\xd7\xad\xe5\xd5\x58\x6b\xfd\x75\x09\x0f\xb7\xd7\x70\xf3\xf6\xb7\x5b\x28\x4a\x94\x4c\x8b\x22\x57\x46\x64\xa5\x8c\x8b\x9f\x52\x72\x8e\x3c\xaa\x72\x8e\x32\x15\x39\x02\x9f\xec\x71\xea\xf6\xda\x69\x33\xe9\x1d\x17\x29\x58\x1f\xe8\x4a\xcd\xcd\x5a\xba\xbd\xa6\x0b\x3e\x87\x1f\xe9\xea\xdd\xbf\xff\x45\x97\x19\x6a\x29\x62\xe5\x3f\xa3\x5f\xed\x27\xdd\xd2\xb4\xf6\x48\xb3\x59\x84\xaf\x38\x85\x40\x2f\x1a\x04\xee\xf1\xb1\x5e\xdd\x0c\x72\x7c\x04\x91\x2b\xcd\xf2\x18\x29\xcc\xbd\x76\xfa\xe5\x4b\x05\xcb\xaa\xb0\x96\x86\x90\x75\xad\x08\x1b\xd3\x43\xd0\x19\x15\x42\x33\x43\x59\x93\x7e\x15\x53\x0b\xdf\x18\x7e\xec\x55\xe7\x96\x3b\x9f\xc3\xe5\x95\x91\x45\x7a\x33\x92\x4c\x22\xa3\x28\x32\xf5\xb1\x55\x11\x7e\xd8\x27\x8a\x7e\xd4\xfc\x92\x24\x34\x5f\xf0\xf9\x25\xf0\xf6\x17\x71\x91\x5e\x5a\x08\x5b\x5f\x3a\xff\x2e\x21\x6b\x7d\x69\x06\x5d\xd6\x40\x93\xb6\x25\xfd\xe7\xa6\xaf\xdc\xd0\x55\x83\xfc\x2d\xa6\xa8\x91\x0a\x09\x66\xb4\xb6\x4c\xb1\xc9\x8a\x07\x34\x59\xe3\x48\x20\x91\x45\x66\x0b\xca\xc4\x65\x16\x5d\xb8\x14\xe4\x50\x56\x93\x54\xc4\xaf\x6e\x23\x23\xf1\xad\x99\xa3\xea\x81\x42\x51\x92\x66\x95\xd2\x30\x63\x0f\x08\xcc\x8d\x07\xc1\xe1\x81\xa5\x15\x86\x54\xf0\x24\x2a\x85\x1c\x50\xe8\x19\x4a\x5a\x86\x0c\x26\xaa\xc8\xa1\x90\xf0\x81\x3e\x35\x9b\x1a\xe9\xf4\xab\x5d\xd0\x98\xb7\x12\xe3\x0d\x8b\x3f\xb2\x29\xae\x56\x51\x0f\xe4\x2e\xa5\x9b\x82\xcf\x27\x3b\x22\x3d\x76\xb8\x8c\x62\x3d\xa7\x92\xa2\x71\xae\xa3\x1b\xfb\x19\xd6\xfe\xba\x6c\x73\xeb\xd9\xb3\x41\x46\xd9\xe1\xb3\xef\x1e\x1f\xdf\x4b\x16\xe3\x28\xe8\x4f\x62\xab\x8a\xf8\xd5\x44\x1f\x13\x94\x90\xf1\x49\xe4\x65\xdc\x65\x42\x8f\xfc\xc5\xab\x3c\x29\x0e\x11\x16\xfa\x09\xff\x15\x7a\x36\x0a\xbc\xc9\x41\x63\xfd\xfa\x10\x6b\x65\x16\xdd\xe5\x7c\x34\x1e\xd7\x89\x2c\x92\xda\xfd\x57\xea\x6e\x5e\x0a\x89\x9c\x40\xa9\xb9\x8f\x7e\x50\x4a\xf2\x39\xc9\x74\x74\x47\x48\x24\xa3\xc0\x61\x05\x33\xa6\x28\xba\x34\xcd\x3b\x68\x30\xea\x73\xcf\xcf\x7f\xc9\x44\x8a\x86\xfa\xb8\x4d\x50\x9b\x89\xc3\xfd\x1a\x05\x26\xf3\x83\xd0\xe8\x8c\x8b\xb4\x7b\xdb\xc4\x2e\x30\x3c\x65\xb5\x5b\xf7\xbd\xa5\x6e\x25\xa3\x94\xf5\xd2\xa9\x91\x71\x7e\x93\x60\x3e\x77\xc8\x53\x62\xd9\xca\x12\x82\xb3\xee\x4f\xc1\xdb\xe6\xfd\x64\xe6\xfd\xed\x8a\x9a\x85\x36\x8a\x27\xc3\x64\x8f\xc3\x07\x40\xb6\x07\x13\xe7\xfa\xd5\x15\x70\xaa\x82\xa6\x87\x7c\x5b\x3c\xaa\xb6\x37\x2d\xec\x5a\x3d\x66\x73\x7f\x75\x00\xc4\x7b\x16\x81\x05\x9c\x9f\x10\x86\x6e\xfd\x5e\x6b\xe7\x6e\x24\xb2\x4e\xa5\x64\x9c\xb7\xcb\x64\xdd\x6e\x6c\x2f\x93\x6d\x4a\xd3\x33\xec\x50\xff\xde\x0a\xf6\x7f\xac\xae\x4f\xaa\xa4\x16\xb7\xed\x95\x14\x53\xcc\x86\x60\xf0\xd4\x52\x6b\x6d\x39\x51\xa9\xf5\xc2\xfa\x13\x8b\xdc\x8b\xde\x3c\xaf\x7a\x1b\xdb\x34\xdf\x5f\x6f\x77\x38\x77\x6c\xd1\x3d\x3b\x3b\x3b\xeb\xad\x06\xcb\x25\xa1\x33\x9a\x31\xf5\x92\xf2\xce\x45\x05\x02\xbb\x05\x09\xc6\xb0\x5a\x6d\x94\xa8\xa6\x3a\xbf\x63\x0f\x6b\xb5\x99\xac\xef\x2d\xc5\x5b\x21\x5b\xbf\xdd\x6a\xc1\xfa\x41\xec\x5b\x41\x35\xb8\xfd\x32\x7b\x60\xdc\x37\x81\xdc\x72\xb1\x39\x60\xf0\x96\x28\x74\x26\xd5\x89\xd9\x57\xac\xd7\x42\x74\x40\xd1\xbe\xe9\xa4\xd7\x46\x43\xbb\xdf\xf3\x7e\x8f\xc7\x3e\x53\x30\x55\xd8\x4e\x07\xb3\xa6\x72\x6d\xf2\xc1\xef\xf3\x47\xcb\x25\x5d\x14\x95\x76\x5b\x5b\xb7\xa0\x7f\x8e\x69\x1f\x00\x56\x30\x04\x54\x27\x03\x08\x3e\x98\x8f\xd5\x6a\x93\x06\xfb\x73\xcc\x69\x1d\x96\x66\x4f\x4f\xaa\x41\x2b\xf1\x53\x85\x72\x11\x34\xb6\x0e\xeb\x04\x3e\x47\x46\x3c\xc9\xfc\x26\x03\x72\xbe\x5a\xed\xa2\xf3\x5f\x50\xff\x9c\xa6\xd7\x8b\xd7\x92\xa3\xec\xec\x7f\xb4\x14\x48\x5c\x9a\xa6\x26\xaf\x30\xd7\xca\xee\x81\x6a\x62\xaf\x49\xbd\xb0\xd3\x73\xf7\xdb\x64\x01\x46\xba\xa1\x5e\x75\x30\x47\xae\x19\xb3\x9d\x2a\xad\x22\xbf\xbf\xf5\xca\xfc\x0e\x04\x46\xbf\xff\x31\x80\x47\x43\xea\x55\xfa\x1e\x63\xf1\x49\x64\xed\x21\x43\x9c\xaa\x5a\x63\x08\xff\xf8\x27\xfd\x1b\x77\x91\xac\x61\x53\x06\x37\xe9\xfa\x94\xf6\xd6\x91\x50\x6a\x76\xf9\x2a\x15\xdd\xed\xfd\xfe\x5d\x9c\x5e\x94\xf8\x5c\x1b\xa1\x06\xd4\x61\xd1\x0d\xa1\x64\x53\xb4\x11\x93\xa8\xca\x22\x57\xf8\x06\xe5\x1b\xf7\xe5\x69\x82\x3f\xb8\x95\xb2\xde\x9c\xa8\x95\xf2\xc2\x9e\x47\x8b\x54\x17\x88\xe3\x6a\x56\x4f\x4d\xdd\xd8\x10\xe5\x22\xb5\xab\x6d\xb3\x17\x7a\x60\x12\x74\xa1\x59\x4a\xa1\x6c\xbe\x92\x42\x63\xa6\x60\x50\x36\xec\x6b\xaf\xdc\xb3\xcc\x6e\x7f\x45\x8a\x42\x6b\x43\xd8\xa1\x41\x1b\x4c\x97\xa1\x6d\x3e\xec\x56\x12\x4a\xeb\x8d\x94\x1e\xff\xb4\xc1\xb0\x4f\x66\xce\xb5\x8a\xee\x2b\x53\xff\x83\x45\x77\x96\x61\x0b\xfe\x89\xa2\xdb\xb6\xfc\xd0\xfd\x73\x37\x17\x1c\xda\x5b\xf7\xd3\xb0\xbe\xa7\xee\x99\xda\x4f\xd2\x49\x21\xe1\xcf\xd0\xc4\x95\x42\x29\x59\x4e\xd5\xc5\xa4\x53\xc7\x2a\x4a\xb4\xa1\xfb\xb6\xad\xfe\x5f\x5e\xd9\x3d\x84\x7f\x5a\x4e\xda\x76\xf6\x4a\x03\xa3\xee\x8e\x02\xfc\xee\xdc\x1c\x16\x90\x9b\x7d\x51\x3f\x32\xe0\x24\x37\xb0\xc8\x1d\x91\x0b\x3b\xd7\x7b\x5f\x60\x6d\x5c\xae\x80\x95\x25\xe6\x7c\x24\xdd\x6a\x34\x3d\xf0\xc6\x23\x96\xcd\x6e\xb8\x64\xb9\x88\x7b\xca\xb1\x07\xc3\x10\x69\x7d\x5e\xb2\x1d\xb3\xce\x21\x48\xb0\xb3\xf9\x92\xeb\x25\xa3\xdb\x8b\x5d\x2f\xec\xd1\x5c\xab\x8b\xd8\xfd\xf4\x39\x31\xc3\x3f\xe2\xc2\xb4\x15\x96\xe1\x8d\xb0\xf6\x29\xe1\x5f\xa8\xb5\x70\x00\x6e\x6f\x2f\x08\x26\xdf\x4c\x18\x8b\x5b\x8d\xe3\xa0\xce\xe1\x04\x5d\xc3\xe9\x5a\x86\xee\x4a\xfd\x88\x0b\xe7\xde\xb7\xd1\x48\xf4\xf9\x73\xb2\x0e\x63\x40\xe8\xdd\x51\xee\x96\x3e\x64\x38\x17\x1c\xd5\x70\x74\x37\xdb\xbf\xa0\x6e\xf7\x16\x3f\x90\x19\x26\xd1\x3d\x64\x27\xda\x75\x0f\xea\x1d\x7a\x1a\x88\x8e\xf2\x21\x8f\x78\x06\x06\x16\x8e\x6b\x2f\x06\x26\xc2\xae\x0e\x64\x6b\x0f\x72\x6c\xa2\x7d\x7d\x34\x66\xd3\xac\xcb\x5e\x87\xd3\x56\x7d\x76\xd8\xde\x0c\xff\xc5\xa8\xea\xc0\x53\xd5\x6f\x89\x9a\x8e\x3a\x80\x7d\x26\x34\xf5\xc5\x0e\x61\xbf\x06\xba\x82\x5e\xbe\x02\x58\x67\xac\xe5\x12\xfe\x5e\xda\x2e\x95\x22\x43\xbf\x5c\x2f\x48\x66\x33\xd5\x9f\x9e\x04\x9b\x13\x35\x9b\xd2\xb4\x29\xea\xf7\x6c\x5a\x0b\x0a\xd4\xa7\xd4\x3f\x8c\x5e\xad\x15\xdb\x03\xf9\x31\x58\x2e\x8d\xec\xe8\x3f\x54\x0c\x56\xab\x43\x0e\xa6\xbf\x13\xe6\x67\x25\xcc\x6f\x8f\x2e\xf7\x11\xe6\x6f\x25\x67\x1a\xa1\x52\xdf\xe9\x72\x2f\x5d\x5a\xac\x0e\x62\xcc\x2f\x7f\x9c\x6e\x8d\x3b\x11\x6b\x7a\x61\xdf\xcc\x9b\x4b\x89\xc8\x85\x9a\x85\xde\x8c\x75\x89\xc7\xbc\xac\xd2\x79\x91\xe8\x44\x2f\x32\x1d\xc5\x53\x83\x39\xaa\x97\x3e\xdd\xf1\x7d\x97\x3d\x37\xf8\xcc\x2d\x84\xce\x11\xfe\x17\x61\xb4\xca\xd6\xab\x81\x07\xaf\xfe\x68\xd2\x9e\xc5\x0f\x0a\xf7\x0e\x97\xbe\xc8\xd3\xe6\x81\x74\x75\x18\xff\x98\xe7\xaf\x9f\xf7\x00\x7e\x33\x47\x48\xe9\xf7\x1c\xf9\x7a\x73\x64\xbd\x65\xd8\xc3\x1d\xae\x6f\x38\xee\xd4\xed\x70\xbc\xd6\x82\xb2\xf3\x95\xc0\xbb\x39\xc6\xed\x3f\x3d\x21\x4a\x37\xb9\xeb\xfe\x5e\x21\x4d\x09\x43\xea\x09\x70\x8e\x71\x65\x6e\x15\x09\x30\x88\x2b\xa5\x8b\xac\x19\xcf\xa6\x4c\xe4\x4a\x9b\xa1\xc6\x8f\x83\xfb\x03\x32\x61\x7b\x77\x90\xcc\x8d\xfc\x91\x7f\x45\x3f\x74\xaf\xbf\x8f\xfd\x46\xf9\x69\xdc\x4f\x8a\x4f\xc4\xfc\x56\xd4\xf3\x20\x75\x1b\x48\x6c\xfe\xde\xe2\xc4\xe7\x83\x07\xbc\x6f\x9c\xcc\x47\xb6\xde\x59\x1d\x6a\x7e\x8a\x57\x8a\x3f\xb7\x5f\x5f\xc9\x3b\xc3\xaf\xbd\x7b\xde\xe1\xfd\x75\xa4\xaf\x02\xfc\x2f\x00\x00\xff\xff\x81\x19\xa3\x82\x55\x37\x00\x00"),
          path: "sql-api.tml",
          root: "sql-api.tml",
        },
      
    
  }
)

//==============================================================================

// FilesFor returns all files that use the provided extension, returning a
// empty/nil slice if none is found.
func FilesFor(ext string) []string {
  return assets[ext]
}

// MustFindFile calls FindFile to retrieve file reader with path else panics.
func MustFindFile(path string, doGzip bool) (io.Reader, int64) {
  reader, size, err := FindFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return reader, size
}

// FindDecompressedGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindDecompressedGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, true)
}

// MustFindDecompressedGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindDecompressedGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindDecompressedGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, false)
}

// MustFindGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFile returns a io.Reader by seeking the giving file path if it exists.
func FindFile(path string, doGzip bool) (io.Reader, int64, error){
	reader, size, err := FindFileReader(path)
	if err != nil {
		return nil, size, err
	}

	if !doGzip {
		return reader, size, nil
	}

  gzr, err := gzip.NewReader(reader)
	return gzr, size, err
}

// MustFindFileReader returns bytes.Reader for path else panics.
func MustFindFileReader(path string) (*bytes.Reader, int64){
	reader, size, err := FindFileReader(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFileReader returns a io.Reader by seeking the giving file path if it exists.
func FindFileReader(path string) (*bytes.Reader, int64, error){
  item, ok := assetFiles[path]
  if !ok {
    return nil,0, fmt.Errorf("File %q not found in file system", path)
  }

  return bytes.NewReader(item.data), int64(len(item.data)), nil
}

// MustReadFile calls ReadFile to retrieve file content with path else panics.
func MustReadFile(path string, doGzip bool) string {
  body, err := ReadFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFile attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFile(path string, doGzip bool) (string, error){
  body, err := ReadFileByte(path, doGzip)
  return string(body), err
}

// MustReadFileByte calls ReadFile to retrieve file content with path else panics.
func MustReadFileByte(path string, doGzip bool) []byte {
  body, err := ReadFileByte(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFileByte attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFileByte(path string, doGzip bool) ([]byte, error){
  reader, _, err := FindFile(path, doGzip)
  if err != nil {
    return nil, err
  }

  if closer, ok := reader.(io.Closer); ok {
    defer closer.Close()
  }

  var bu bytes.Buffer

  _, err = io.Copy(&bu, reader);
  if err != nil && err != io.EOF {
   return nil, fmt.Errorf("File %q failed to be read: %+q", path, err)
  }

  return bu.Bytes(), nil
}
