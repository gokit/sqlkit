package static


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
)

type fileData struct{
  path string
  root string
  data []byte
}

var (
  assets = map[string][]string{
    
      ".tml": []string{  // all .tml assets.
        
          "sql-api-json.tml",
        
          "sql-api-migration.tml",
        
          "sql-api-readme.tml",
        
          "sql-api-test.tml",
        
          "sql-api.tml",
        
      },
    
  }

  assetFiles = map[string]fileData{
    
      
        "sql-api-json.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x41\x6b\xc2\x40\x10\x85\xcf\x09\xe4\x3f\xbc\x7a\x28\x06\x24\xde\x5b\x3c\x94\x42\x0f\x3d\x68\x41\x3c\x95\x82\xeb\x3a\xd1\xd8\x64\x57\x26\xa3\x52\x96\xfd\xef\x65\x37\x4a\x3d\xb4\xa5\xa1\x97\x84\x9d\x19\xde\xf7\xf1\x8e\x8a\xe1\x5c\x6d\x4f\xc4\x28\xe6\xc2\x07\x2d\xc5\x6c\xb5\x23\x2d\xc5\x54\x35\x14\x3f\xde\x3f\xcf\x67\x53\x4c\xb0\x74\x0e\x8d\xda\xc7\xd7\xf9\x18\x83\x55\x6b\xcd\x00\x83\x5d\xfc\x79\xbf\xcc\xd2\x2c\xfd\x5b\xea\x23\x93\x12\xfa\x2e\xbb\xdb\x3c\x68\xa9\xac\xf9\x0f\x61\xb1\x5f\xff\x40\xe8\x36\xbf\x11\xc6\x63\xd4\x56\xad\xc3\xf9\x93\x65\x30\xc9\x81\x4d\x0b\x05\x43\x27\x54\xa6\x15\x65\x34\xc1\x96\x50\x70\xee\xa2\xf0\xa2\xf4\xbb\xda\x90\xf7\xc5\xd7\xec\x4a\xcb\x7b\x94\x6c\x1b\xc8\x96\xb0\x67\x7b\xac\xd6\x84\x00\x85\xb6\x46\xc8\x48\x91\xa5\xe5\xc1\xe8\x6b\xf0\xf0\xbc\x42\x2b\x5c\x99\x4d\x8e\x61\x0f\xda\x08\xc4\x6c\x39\x87\xcb\xd2\x24\x54\x46\x35\x35\x7d\x74\x43\x11\x49\x55\x86\x18\xdc\x4d\xa2\x6b\xb1\x30\x8d\xe2\x76\xab\xea\xe1\xeb\xdb\xea\x43\xe8\x62\x98\x8f\x70\x1b\xf2\xf3\xfb\x78\x7e\x33\x81\xa9\xea\x48\x4e\xba\xf2\xfa\x80\x5d\xe7\x9e\xa5\x49\xe7\x70\x4e\x08\xf9\xa3\x90\x9b\xa5\x71\xfe\x19\x00\x00\xff\xff\x20\x59\xff\x66\xbf\x02\x00\x00"),
          path: "sql-api-json.tml",
          root: "sql-api-json.tml",
        },
      
        "sql-api-migration.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\xcf\x4b\xfb\x40\x10\xc5\xef\xfd\x2b\x1e\x3d\x7d\xbf\x50\xd3\x7b\xc0\x43\xd5\x0a\x42\xb5\xa0\xf1\x24\x22\xd3\xec\xb4\x59\xe9\xfe\x70\x77\x6a\x94\x90\xff\x5d\x76\x25\xc9\x41\xcd\x69\xb2\xf3\x3e\x6f\xde\x7b\xa7\x80\x7f\x33\x00\x58\x2e\xd1\x75\xc5\x83\x84\x53\x2d\xc5\x76\xf7\xca\xb5\x14\x77\x64\xb8\xef\x2b\xda\x1d\x19\x8a\xf7\xda\x72\x84\x34\x0c\xc9\x2f\x46\x1f\x02\x89\x76\x16\x86\x85\xce\x14\x09\xa1\x6d\x74\xdd\x60\x30\xd4\x11\xa7\xc8\x0a\xe2\x70\x60\xcb\x81\x84\x33\x4f\xde\x07\xe7\x83\x4e\xff\x97\xf7\xeb\x55\xb5\x46\xb5\xba\xd8\xac\x11\xdf\x8e\x88\x42\xc2\x86\xad\x60\xef\xc2\xc0\x69\x7b\x18\x5d\x29\x46\x57\x27\x56\x65\x7d\x0e\x53\x0c\xcb\x6a\x7b\xb5\x2d\xf1\xe8\x55\xf2\x6e\xb5\x34\xd8\x6b\x3e\x2a\x58\x32\x0c\xf9\xf4\x1c\x41\x56\x41\x5b\xc5\x1f\xdf\xd0\x1f\xad\x6f\xc7\x76\xe7\x18\xe7\x2e\x13\xe9\xab\xb4\xe1\x28\x64\x3c\xab\x12\x12\x4e\xbc\xc0\xb4\x4b\x89\x92\x4b\x89\x79\xd7\x89\xdb\xb8\x96\x03\x7e\xbd\xf2\x92\xd3\xcf\x17\x23\x7b\x93\x82\x71\x2c\xf1\xf4\x9c\xc7\xe9\x74\x3f\x89\xae\x53\xa5\xac\xc9\xd3\x0f\x4d\x3f\xfb\x3f\xfb\x0a\x00\x00\xff\xff\xde\xf6\xc3\xf5\xda\x01\x00\x00"),
          path: "sql-api-migration.tml",
          root: "sql-api-migration.tml",
        },
      
        "sql-api-readme.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xd1\x6a\xdb\x30\x14\x86\xef\x03\x79\x87\x1f\x72\x93\x8c\x4c\x0f\x30\xd8\x45\x12\x6f\xa3\x50\xb6\x74\x59\xaf\xc6\xc0\xaa\x72\x62\x6b\x91\x25\x4f\x3a\xde\x5c\x8a\xdf\x7d\xc8\x76\x97\xb8\xb8\xb4\x65\xf5\x8d\xa4\x83\x75\xbe\x4f\xff\xb9\xbb\x13\x3b\xf6\x95\x62\xf1\xe5\xe6\x27\x29\x16\x9f\x65\x41\x4d\x83\xdd\xd5\x65\xb2\xc6\x6a\x7b\x31\x9d\xbc\x7f\xfa\x9b\x4e\xa6\x93\x27\x3b\x41\x07\x48\xc8\x8a\xdd\xdb\x8c\x2c\x79\xc9\xb4\xc7\xe6\xeb\x75\x02\x5d\x94\x86\x0a\xb2\x2c\x59\x3b\x8b\x83\xf3\xe0\x9c\x90\x8e\xb6\xec\xfb\xa6\xd0\x16\xa5\x54\x47\x99\x75\x7f\x6e\x8f\x99\xd8\x4a\xce\x9b\x26\x15\xd1\xe7\x5b\x4e\x38\x38\x63\xdc\x1f\x6d\x33\x14\xc4\xb9\xdb\x83\x6a\x1d\x38\xb4\x04\x55\x05\x76\x05\x5c\x19\x4d\xb4\xb3\xe1\x5d\xbc\x35\x9b\xe1\x43\x4d\x2a\x6e\xd3\x34\xcd\xdc\x74\x12\x8f\x73\xc5\x35\x94\xb3\x4c\x35\x8b\x4d\xb7\x2e\x71\xa8\x71\xa8\xac\x9a\xbf\x09\xbf\x8c\xd8\x5d\x5d\x2e\x11\x37\xc9\x7a\x01\xf2\xde\xf9\x7e\x69\x1b\x3d\x26\x14\xee\x8d\xb4\x6d\x9f\x7c\x0a\x26\x06\x26\x03\x4a\xf2\x2c\xb5\x8d\x37\xd8\xb5\x69\xdd\x6b\x6e\x3c\x49\xa6\x33\xd1\xae\x30\xae\x4a\x86\x0a\x9c\xe2\xdc\x76\xb9\x35\x8d\x78\x64\x6a\x0f\xdd\x67\x33\x7c\x22\x5e\xdf\x7e\xd4\x64\xf6\x67\xcc\x53\x71\x9c\x7b\xa4\x5b\x04\xf6\xda\x66\x4b\xfc\x96\xa6\xa2\xfe\xb4\x00\xe6\x2f\xd0\x59\xa2\x8f\xf4\x81\xd0\xd0\x64\x5c\xa1\xac\x6e\x8c\x56\x17\xc9\x3f\xf2\xcb\xc0\xa3\x5c\xac\x8c\x19\xb2\x57\xc6\x8c\xe1\x17\x98\x7f\xff\xf1\x9f\xbc\xeb\x72\x3f\x1c\x74\x57\x78\xd6\x6b\x5f\x65\xf2\x09\x19\x1a\x08\x74\x85\x67\xc6\x7d\xde\xee\x6f\x00\x00\x00\xff\xff\x66\x01\x04\xbe\x6e\x04\x00\x00"),
          path: "sql-api-readme.tml",
          root: "sql-api-readme.tml",
        },
      
        "sql-api-test.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\xdd\x4f\xe3\xc6\x17\x7d\x8f\x94\xff\xe1\xfe\xac\x5f\x25\x7b\xeb\x0e\xcb\x6b\xaa\x3c\x10\xdc\x45\x5b\x55\x49\x8a\x43\xf7\x11\x0d\xf6\x75\x98\xdd\xb1\x07\x66\xae\x13\x90\xe5\xff\xbd\x1a\x8f\xf3\xc1\x47\xd8\x24\x2c\x95\x4a\x83\x04\x02\xfb\x7e\x9e\x39\xe7\x60\xa7\xaa\xe0\xff\x37\x99\x40\x99\x42\xaf\x0f\xcd\x2f\x83\xfb\x21\xcf\x11\x58\x4c\xba\x4c\x08\xbc\x71\x79\x25\x45\xf2\x39\xf2\xa0\xae\xbb\x9d\x26\x81\xf8\xd4\x86\x4f\x91\x26\x7c\xba\x2c\xe0\x99\x5b\xe9\x81\xf7\xd5\xa8\xc2\xc5\x76\x3b\x33\xae\xc1\xef\x76\x00\x00\x70\x86\x05\x19\xe8\x43\x8e\xa4\x45\x62\xd8\x10\xe7\x7e\x52\x1a\x52\x39\x8b\x89\x27\xdf\x22\x61\x6e\x24\xbf\xf7\x95\x61\x31\xa5\xaa\xa4\x20\xb0\x25\x6c\x6e\xa2\x8a\x4c\x4c\xa1\x0f\xe6\x56\xb2\xd3\xe6\x8f\xca\xdd\xb1\x5f\xd1\xc0\x0e\xdc\x03\x65\xd8\x19\x12\x16\x33\xdf\xab\xaa\x76\x7c\x36\xe6\xc9\x37\x3e\xc5\xba\xbe\x8c\xff\xfc\xe3\x32\x1a\x78\x41\xb8\xca\xbc\x30\xa8\xb7\xca\xbb\x88\x7f\x3b\x7f\x90\x19\x0d\x3e\x8f\xb7\xca\x3c\x89\xa2\xc7\x99\x63\xa5\x69\xab\xdc\xf1\xe8\x7c\xf2\x28\x37\xd2\x62\xb6\xe5\xcc\x2e\xf4\xc9\xbe\x63\x6e\xcc\x5c\xe9\x74\xbb\x09\x4e\xe2\xf8\xcb\xe8\x3c\x5a\x56\xa9\x17\x47\x42\x68\xe8\x54\x49\xe8\x83\x57\x55\x52\xcd\x51\x2f\x18\xc3\x46\x57\x5f\x31\x21\x66\x0f\xa5\xf9\x51\xd7\x97\x36\xda\xeb\x76\x9a\x03\x3d\x3a\x82\x09\x1a\x3a\x43\x5a\x75\x5d\x4b\xa9\x6b\x98\x71\x29\x52\x4e\x68\x80\xae\x11\xb4\xe5\x0b\xce\xb8\x04\x95\x01\x87\x0d\x49\x4d\x5d\x8d\x89\xd2\x29\x64\x5a\xe5\xc0\x2d\x59\xd2\x2b\xd6\xed\x64\x65\x91\x7c\xa7\xa5\x4f\xf0\xc1\xce\x28\x8a\x29\x9b\x04\x2d\xb7\xf8\x8d\xb0\x2c\x77\x65\x2c\x5b\xdb\x9d\xc3\x96\xcb\x61\x43\xc7\x21\xce\xa3\x81\xef\x18\xba\xb8\xb3\xc6\x5c\xba\xb3\x35\x12\x55\x10\xde\x11\xfb\x22\xe8\x7a\x22\x72\x54\x25\xf9\x8b\x6b\x43\x9c\xff\xc5\x65\x89\x03\x3e\xf5\x83\x10\x8e\x3f\xc2\x07\x20\x91\x23\x8b\x31\x51\x45\xba\x2c\x85\x12\xf3\x10\x50\x6b\x5b\x50\x2a\x9e\xfe\x1e\x8f\x86\x9f\x94\xf6\xbf\x8f\xff\xa9\x46\x4e\x68\xe3\x03\x57\x4b\x64\x4d\xa1\xff\xf5\xa1\x10\x12\xd6\xb4\x64\x57\x34\xec\x13\x17\x12\x53\xdf\x8b\xcb\x24\x41\x63\xb2\x52\xca\xfb\xa6\x25\xa6\x60\xab\x40\xa6\xf4\xa6\x83\x68\x0f\xa1\x07\x3f\xfd\x7c\xcb\xbc\x66\xe0\x60\xc9\x9d\x55\x0b\x4b\xc3\x57\xb6\xf0\x96\xd0\xa4\x98\xa1\xb6\xe7\xc5\x22\x94\x48\xe8\x27\x74\x17\x36\x80\xb1\x85\x7b\x2d\x63\xdb\xd5\x7b\xfd\x26\xde\x21\xb3\x8a\x0f\x7e\xdd\x1d\x18\x9e\xda\xa1\x17\xdc\x7b\x61\x6c\x51\x90\x82\xf4\x6a\x2f\x68\x76\x6d\xc2\x56\xe8\x5c\x3a\xd6\xb8\x85\xcf\x90\x9e\x47\x67\x5f\x5a\xb4\xf2\xc4\x14\x0c\x29\xbd\xdd\x8c\x8d\x40\xf7\x04\xe2\x15\xfd\x1a\x4c\xea\x87\x1e\x74\x22\xe5\x3e\x36\x24\xe5\x2b\x8d\x68\x73\xdf\x83\x17\x1d\xbc\xe8\xdd\x7a\x91\x4b\x32\xe1\xc2\x94\x7a\x4b\x57\x3a\x91\xd2\xad\xee\x71\x93\x78\xa1\x57\x55\xcd\x73\x26\x6b\xf8\x58\xd7\x5e\x08\xbf\x1c\xdb\xef\x1f\x62\x55\x56\xbf\xed\x28\xff\x80\x51\xed\xd8\x6d\x0d\x2e\x91\x81\xc4\xc2\x6f\x93\x03\xe8\xf7\xe1\xe3\xee\xcb\x92\x44\x6e\x08\x8e\x77\xb5\xca\x9d\xf7\xdc\xb7\xd1\xba\x27\x6f\x88\x77\xe2\x78\xe4\xc9\x89\xbd\x28\x54\xb1\xf5\x93\xe1\x5c\xd0\xf5\x73\x86\xfc\x62\xd3\x83\x21\x1f\x0c\xf9\x1d\x1a\xf2\x16\xa2\xbb\xb8\x49\x9f\x8a\xae\x74\x17\xdf\x48\x72\xae\xe5\x41\x72\x07\xc9\xbd\x43\xc9\xb9\xaa\x47\x47\x93\x51\x34\xea\x41\xab\x2e\xa3\x72\xa4\x6b\xcb\xf4\xe7\x21\x69\x15\xf1\x14\xc2\xfd\x11\x72\x12\x7e\x73\x8c\x76\x6f\x73\x78\x6b\xdd\xff\x09\xc9\x49\xed\xc9\x5b\x6b\xae\x7e\xc4\x47\x67\x2f\xf6\x3c\xb8\xf5\xbf\xda\xad\xff\x7b\x0e\xfc\x70\xe3\xcd\xff\xa3\xf6\x58\xbd\x11\xdc\xdb\x2f\xbf\x7b\x9b\x85\x8d\xfc\x1d\x00\x00\xff\xff\x08\x8f\xe4\xc4\xf2\x19\x00\x00"),
          path: "sql-api-test.tml",
          root: "sql-api-test.tml",
        },
      
        "sql-api.tml": { // all .tml assets.
          data: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x59\x73\xdc\x36\xf2\x7f\xb6\xaa\xf4\x1d\x3a\xac\xbf\x5d\xc3\x14\x43\xfd\xf3\x2a\xad\x1f\x74\x79\x57\x15\x5b\x76\x24\x79\x37\xa9\x38\xa5\x60\x48\x50\x62\xcc\x63\x0c\x80\xd2\x4c\x4d\xcd\x77\xdf\xea\x06\xc0\x6b\xc8\xb9\xe5\xc4\xf6\xea\xc1\x12\x49\xa0\xd1\xfd\xeb\x13\x4d\xd0\x07\x07\x90\xb2\xd1\xab\x98\x27\xa1\x84\x90\x47\x71\xc6\x25\x30\x50\x93\x11\x87\x28\x17\xc0\xf0\x31\xa8\x7b\xa6\x80\x8f\x47\xb9\xa4\xa7\x7a\xf8\xc0\x85\x94\xab\xfb\x3c\xf4\xf7\xf7\x68\x7c\x45\x28\x65\xa3\xdf\xa4\x12\x71\x76\xf7\x7b\x9c\x29\x2e\x22\x16\xf0\xe9\x6c\x7f\x6f\x7f\xef\xe0\xc0\xcc\x06\xc1\x55\x21\x32\x09\xea\x9e\x66\x42\xac\x24\x4f\x22\x60\x59\x08\x23\x91\x3f\xc4\x21\x2d\xa5\x57\x00\x95\x43\xca\x54\x70\x4f\xa3\xe5\xa7\xc4\xbf\x61\xc3\x84\x13\x25\x28\x57\xf0\xf7\xf7\xa2\x22\x0b\x60\x90\x56\xac\xb8\x35\x66\x3b\x99\x82\xe9\xfe\x1e\x00\x18\x76\x20\xdd\xdf\xb3\x7c\x4e\xa7\xfe\xb5\x12\x45\xa0\xfc\xb7\xc3\x3f\x79\xa0\xfc\x4b\x96\xf2\xd9\xac\x8d\x55\x56\x31\x00\x8f\xf7\x71\x70\x5f\x02\x55\xf1\x6e\x88\x6b\x30\xf3\x08\x58\x92\xd0\x12\x4c\x29\x11\x0f\x0b\x85\x74\xa4\xcc\x83\x98\x29\x1e\xc2\x63\xac\xb4\xa0\x7a\x8d\x10\x24\xb1\x51\x08\x0e\x0c\x17\x0e\xe2\x90\x87\x30\x9c\x68\x30\xec\x33\xab\x85\xc5\x6c\xd7\x98\x9d\xee\xef\x3d\x5b\x02\xce\x52\x30\x4e\xf3\x4c\x16\x29\x17\x8b\xe0\x60\x41\xc0\x47\x4a\x56\xd2\x87\x4c\x31\xf3\xec\x31\x4e\x12\x18\x72\x08\x34\x9d\x90\xd6\x8a\x33\x95\x93\x6c\x77\xf1\x43\x9c\xdd\x41\x9c\x8e\x12\x9e\xf2\x4c\xe1\xc5\x2e\xb0\x28\xb9\x6e\x82\x61\x6e\x0f\xba\xb1\x70\x81\x0b\x91\x8b\x0a\x92\x8b\x2c\xe4\xe3\x37\xf1\x9d\x60\x2a\xce\xb3\x9a\xf3\x68\x36\x8c\x84\x41\x9e\x29\x16\x23\x2a\x21\x1f\x43\x9c\xe9\x87\x38\x01\xdd\x2b\x10\x9c\x91\x58\xfa\x71\x44\xea\x20\xea\xf8\x54\xa1\x91\x4b\x23\x4b\x6b\x39\xb3\x48\xa9\x44\xb4\x61\xd0\x5c\xc3\x1f\x7f\xca\x3c\x3b\x74\x88\x9a\xf3\xc7\xfe\xde\x33\x9a\x8b\xb2\xb7\x46\xd0\xaa\xb7\x19\x4b\x39\x0e\xb3\x82\x5d\xeb\x31\x75\x07\xd5\xec\x7d\x2a\xb8\x98\x68\xce\x6a\xda\xa1\x47\xa9\x65\xac\x74\x42\x7d\xbf\xc9\xb5\x6b\x68\x0f\x5c\xcb\x08\xf2\x6f\xbc\x23\x4a\x95\x7f\x3d\x12\x71\xa6\xa2\x81\x73\x71\x79\x76\xfe\x0b\x3c\x97\x30\x78\x2e\x5d\xc7\xd3\xab\xf8\x24\xa9\xbd\x28\x85\x72\x2b\xd6\x69\xc0\x52\x9d\xd8\xdb\x28\x85\x86\xdc\xc4\x3a\x02\xbc\x9c\x2e\xad\x19\xb5\xa8\xb6\xa1\x27\x60\x7b\xe0\x2f\xc1\xd5\x43\x6f\x90\x5c\xdf\x50\x5c\x8b\x86\x5e\xe6\xea\xb2\x48\x12\xd0\x3f\xc3\x3c\xc7\x3f\xcd\xd0\x2c\x57\xb7\x59\x91\x24\x34\xf0\x9d\x88\x53\x26\x26\x3f\xf1\xc9\xfc\xc0\x91\x7e\x76\xfb\x91\x4f\x68\xec\x71\xa1\xf2\x8b\x2c\x10\xe4\x49\xad\xb1\xac\x50\xf9\x6d\x6c\x1f\x6e\x6e\x0b\x24\x47\x87\x2d\xe8\xfb\x4d\x18\xbb\x6d\xe1\x81\x09\x18\xc2\x70\xa2\xb8\xf4\x4f\x8a\x28\xe2\x02\x19\x79\x86\xb6\xf1\xca\xd8\xc6\x8b\xa1\x07\xce\x73\xe9\x78\x7a\x39\xbf\xd4\x81\xdb\x35\x10\x9c\xce\xdb\xed\xf9\xa8\x18\x97\x96\x8a\x23\x73\xdf\x6a\x01\xd9\xea\xa3\x3b\x7f\xff\xf2\xed\x0d\x5c\xbe\x7f\xfd\x9a\x1e\xcf\x9a\x14\x6b\xea\x5a\x8f\xe8\xbb\xab\x8b\x37\xc7\x57\xbf\xc2\x4f\xe7\xbf\x76\xd1\x6d\xaa\x76\x3d\xd2\xc7\xef\x6f\xde\xde\x5e\x5c\x9e\x5e\x9d\xbf\x39\xbf\xbc\xa9\x51\x37\x5e\x39\xf4\xad\x9a\x8c\x51\x90\x59\xac\xec\x62\xcc\x1a\x0a\x59\x80\xca\x31\xd8\x8b\x22\x03\x76\xc7\x30\x16\x5a\x0f\xeb\x74\x2e\xca\xf1\xc6\xb9\x8c\x89\x54\x3f\xc6\x72\xc9\x63\x2b\x27\xbb\x89\x53\x2e\x15\x4b\x47\x98\x14\xb4\x89\xcf\x4f\xa9\xc6\x54\x8e\x29\xf5\x90\xdf\x7e\x6f\xf9\x7a\xdd\x41\x65\x15\x4b\xb9\x34\xc3\x5b\x51\xb9\x1e\x57\xb9\x1e\xff\x73\xc1\x45\x5c\x8e\x6f\xc9\x61\xc6\x7f\xd2\x63\x9c\x3f\xe0\xe0\x00\x82\x1c\xf3\x9d\xa2\x3a\x07\xcc\x93\x56\xba\x14\x0c\x7d\x6b\x33\x1f\x25\xc4\x3a\x7c\x54\xdf\xdf\xcc\x3d\xe3\x48\x93\xf5\x2b\x95\x7d\xf7\x12\x1c\xa7\xc7\x16\x4f\xaf\xce\x8f\x6f\xce\xe1\xe6\xf8\xe4\xf5\x39\x5c\xbc\x02\xf4\x99\xf3\x5f\x2e\xae\x6f\xae\x29\xe2\x7f\xc8\x1c\xaf\x4d\x4f\xfb\xe6\x33\x95\x2b\x96\xc0\xe1\x4b\x48\x78\xa6\x39\xf6\x6d\x9d\xf7\x03\xfc\x88\x23\xee\x99\x34\x0a\x3d\x7c\x09\xf5\x11\xc8\x51\x16\x27\x9a\x0e\x62\x42\x18\x99\x20\x80\x83\x05\xcb\xee\x78\x73\x0a\xb1\x3f\xcf\xff\x07\x55\x0b\x1f\x16\x26\xc3\x21\x62\xa1\xd1\xff\x07\x68\x6e\x35\x91\x79\x2a\xde\x87\x4c\xfb\x24\x3a\xdc\x33\xe3\x75\x35\x28\x6b\xa6\x3c\xb5\x94\x2b\xe9\xe6\xa8\x76\x10\x6d\x71\x6f\x99\xa7\xa2\x83\x87\xb7\x4c\x41\xe9\x0b\x60\xe3\x56\x45\x60\x7e\x62\x31\x0a\xfb\x27\x3a\x35\x00\x2a\xed\x18\x6f\x71\x11\xfd\xff\x87\x17\x2f\x3a\x14\x47\x4f\xfa\xc4\xe9\x46\x68\x53\xfa\x71\x04\xdf\xf5\xa1\xbb\x68\xed\x95\xe1\x9f\x43\x9f\x4c\xc0\x86\x8c\x86\xdd\x96\x9c\x93\xe1\x6a\xc4\x2b\xab\x8c\xb3\x39\x9b\xb4\x54\xfa\xec\xc9\x58\x65\x9c\xcd\xdb\xe4\x9c\x51\xb6\x68\x2d\x32\x4e\x8d\x7d\x43\x03\xf3\x52\xbb\x47\x1f\x84\x99\x51\xe6\xa6\x4a\x54\x13\x02\xeb\xaa\x98\x23\x61\xa6\x5b\xe7\xbc\xf5\x4c\xf4\x6a\x81\x60\xa3\xa9\x66\xfc\xe0\x00\x8e\x95\xe2\xe9\x48\x61\x6a\x91\x8f\xb8\x8d\xcc\xf4\x48\x4c\x09\x10\x67\x01\x93\x1c\xf7\x1c\x51\x2e\x52\xa6\x4c\x28\xa3\xb9\x9a\xfc\xcb\x46\xd9\x49\xf7\xfa\x62\x0f\xca\xa4\xe7\x4b\xff\x5f\x4c\x5e\x17\x51\x14\x8f\xed\x14\xe7\xc8\x71\x7b\x35\xf3\x5c\x52\x48\xa3\xa1\x06\x54\xdc\x16\xc4\x59\xc1\x7b\x5c\xb5\x9c\x78\xd4\x9a\xd9\xa7\x81\x26\xfa\x0b\x73\x77\xcf\xa6\xe8\xec\x64\x2e\x97\xe3\x2e\x4b\x27\x1e\xb3\x23\x87\xb3\x13\x38\xbd\x7a\x7f\x06\xf9\x88\x9b\x1a\x99\x48\x16\x92\xb6\x66\x9f\x12\xdc\x94\x61\xae\x29\xb2\x90\x8b\x24\xce\x38\x84\xc3\x25\x9b\xb1\xb3\x13\xb3\x1a\x6d\xc4\x83\x3c\x29\x95\x04\x20\xc7\xb4\xd9\x3f\x3b\xc1\x8b\x70\x0c\xdf\xe3\xd5\xf5\xcf\xaf\xf1\x32\xe5\x4a\xc4\x81\xb4\xbf\xfd\x37\xfa\x37\x3e\xd2\xa9\x2c\x1c\x6a\x15\x5e\x84\xb8\x75\x54\x93\x2a\x61\x5e\xf2\xc7\x32\x5b\x32\xc8\xf8\x23\xed\xcb\x58\x16\x90\xa9\xf4\xf2\x69\x53\xe5\x25\x7f\x34\xd9\x52\x73\xea\x41\xda\xe6\xc2\xab\x58\xf7\x40\xa5\xe0\xfb\xbe\xde\xcc\x69\x96\x6a\x59\xf6\xfb\xde\xe5\x4c\x63\x22\x1c\xa3\x0f\x20\x2d\x5c\x37\x45\xca\x48\xd2\xf7\x7d\xb2\xcb\x5a\xef\xe2\xc5\x32\x52\xb4\xf1\x18\x1f\x22\x85\xea\x46\x38\x3e\x84\xb0\x7e\x23\xc8\x93\x43\x0d\x61\xed\xa6\x91\xef\x10\xd2\xda\x4d\x1a\x74\x58\x02\x8d\xab\x4d\xf1\x1f\x33\x7d\x66\x86\xd6\xda\x08\x67\x9c\x2a\x1b\xa6\x9d\x56\xea\xde\x48\x9a\x3f\x70\xb2\x1a\xc1\x83\x5c\x84\x10\x89\x3c\xd5\xfd\x8f\xa1\xb1\x2c\xbc\x30\x26\x18\xc2\xa8\x18\x26\x71\x70\x71\xe6\x13\xc5\x2b\x9a\x23\xcb\x81\xb1\x44\x23\x4d\x0b\xa9\xe0\x9e\x3d\x70\x60\x66\x3c\xc4\x21\x3c\xb0\xa4\xe0\x1e\xf0\xf1\x48\x70\x29\x79\x08\x3c\x56\xf7\x5c\xc0\x70\x02\x0c\x86\x32\xcf\x20\x17\x80\x15\x19\x28\x76\x47\xd4\xf1\x4f\x5d\x3a\xf1\xac\x66\x18\xef\x58\xf0\x91\xdd\xf1\xd9\xcc\xef\x81\xdc\x98\x74\xd5\x91\x0a\x87\x0b\x34\xed\x1a\x5c\x06\x81\x1a\x53\xc3\x80\x8f\x95\x7f\xaa\x7f\x7b\xa5\xbc\xc6\xda\x4c\x1f\xc2\xf6\xad\x52\xb4\x0e\x6b\x7d\x97\xfc\xf1\x46\xb0\x80\x0f\x9c\x7e\x23\xd6\x4b\x61\xb0\x20\xed\xf3\x88\x0b\x48\xc3\xa1\x6f\x69\x9c\xa7\xb1\x1a\xd8\x8b\x8b\x2c\xca\x57\x21\xe6\xd9\x09\xff\x89\xd5\xfd\xc0\xb1\x2c\x3b\x15\xf7\xcd\x21\x9a\xcb\xd4\x3f\xcf\xc2\x81\xeb\x96\x86\x1c\x47\xa5\xf8\x17\xf2\x7c\x3c\x8a\x05\x0f\x11\x14\x17\x6a\x16\xcc\x85\x40\x99\x31\x04\x9e\x23\x12\xd1\xc0\x31\x58\x61\x7e\x46\xed\xe2\x34\x2b\x20\x61\xd4\x27\x9e\x9d\xff\x8a\xc5\x09\xa7\xed\x49\xa8\x0d\x54\x5b\x62\x4b\x2e\xd3\x2c\x5b\x2e\x9d\x1d\x48\x5e\xe0\x78\xb4\x7e\x90\x27\xdd\x83\x48\x9b\x8e\x87\x62\x69\x7e\x34\x20\x96\x77\xe3\xdb\x5c\x88\xd2\x99\x4a\xac\x0c\x12\x48\x3e\x1c\x1b\x5d\xa0\xa9\xe9\x58\xe3\x81\xe1\xf4\x36\x0e\xeb\xac\x1e\xd1\x3c\x5d\x0d\xd7\x71\xdd\x31\x4a\x2b\x09\xbf\x32\x94\x9b\xa2\xb4\xc4\xb2\x35\x66\xe1\x13\x49\xd2\x0e\xd0\xb4\xfd\xb0\xa1\xf0\x94\xaa\xf0\x46\x28\x64\x61\x58\x8f\x83\x65\x1f\xb4\x3b\x0e\xd6\x73\x96\xba\xe7\xad\xdc\xbe\x34\x44\xfd\x85\xe1\x73\xab\x50\xa9\x71\xeb\x0e\x95\x3c\xe1\xe9\x3a\x18\x6c\x1b\x4b\x35\x2f\x3b\x8a\xa5\x96\x58\x7f\x2c\x45\xf1\xfc\x77\x5f\x56\x40\xd5\x9b\xcd\x95\x03\xea\x02\x11\x77\x11\x55\xb1\xf4\x5e\x14\x51\x75\x9f\xc7\x83\xfc\x23\x22\x52\xeb\xfe\x0f\x90\x31\xd7\x1f\x2c\x7c\xbb\xe2\x1e\xe1\xc4\x1a\xb2\x73\x31\xfa\x9a\x3d\x34\x22\x74\xf9\x9e\x4a\xb7\x48\xa5\x6f\x5f\xc8\xb8\xbd\x61\x7a\x33\xfc\xfb\x9c\x6f\xfb\xc0\x87\xc0\x18\xc5\xad\xa5\x8a\xa6\x44\x6d\xa5\x34\x14\xb3\x42\x20\x3f\x5d\xc1\xcc\xd6\x16\xa7\xc1\x65\x3d\x86\xb7\xcd\x66\x97\x3e\xf6\x15\x78\xd9\xd2\xac\x4c\x78\x65\x8a\x1c\xa3\xf4\x80\xe9\x14\x2f\xf2\x42\x99\x16\x8b\x09\x88\xc7\xfa\x6d\x99\x56\x0c\x38\x98\x67\x1c\x70\xfe\xa4\x5f\xb3\x99\xdb\x5b\x0e\xb5\x5d\xcd\xac\xb9\x8b\xf2\xe7\xc9\x7d\x8a\xf6\xfb\x4e\xc5\xf3\xe7\x2c\x89\x76\xe6\x49\x6d\x21\xdc\xfe\x5a\xe8\x9f\x5c\x1d\x27\x09\x3e\x12\x31\x7f\xe0\x12\x18\x5d\xe9\xd2\xa4\xbe\x1d\x64\x59\x58\xdb\xb9\xcb\x24\x6e\x6f\xd9\x97\xef\xcc\xd4\x64\xc4\xbf\xd4\xda\x47\xe3\xd4\x5d\xfb\xe4\x22\xe4\xa2\xec\x48\xd0\xd5\x70\x52\x5e\x8f\xd8\x1d\xc7\x7c\xe6\x81\xe0\x72\x94\x67\x92\xbf\xe3\xe2\x9d\xb9\xe9\x02\x0c\x7e\xfb\x7d\x0d\x10\x3d\x4d\x8a\x2c\xd0\xdd\xb8\x7a\xd2\xd2\xec\xa8\x7a\xb2\xc4\xbe\x8c\xaa\xc8\x5a\xfa\x2e\x12\xd6\xb2\xf4\x5a\x39\x9c\x07\x3f\xfc\xe8\x75\x44\x84\xe9\x14\x21\x19\x50\x7b\x1b\xed\xd0\x60\x0c\x8e\x39\x11\xe1\x00\xb8\x30\x9b\x55\x24\x1f\x98\x00\x11\x2b\x9e\x4a\x58\xcb\x6e\xea\x6c\xd1\x74\x4f\xb7\xa3\xbd\x56\xec\xd6\xca\x34\x16\x5a\x0f\xe2\x64\xd6\xa5\x75\x6b\xb3\x9e\x33\x69\xf7\x68\xae\x02\xdb\xba\x8c\x2a\x15\x56\x8f\x4c\xfd\xcd\x42\x73\x80\x0a\x23\x57\x38\x7c\x52\xed\xb6\x35\x5c\xe1\xd9\x53\x48\x99\xee\x3a\xc2\x5f\x35\xd7\xb5\x2e\x5b\xf0\xa0\x96\xd7\xdd\x51\xb5\x59\xab\xd2\x32\xd5\x1c\xf6\x88\x0d\xae\xb7\xb0\xc2\x5d\x37\x23\x6b\xba\x76\xe7\x4c\x27\x8c\x50\xd0\x3e\xf5\xec\x40\x33\xb8\x86\xa3\x71\xdc\x42\x75\x0b\x1d\xb4\x53\x7f\x34\x43\xeb\xeb\x25\xb0\xd1\x88\x67\xe1\x40\x18\x67\xa2\xaa\xb5\x47\xef\x66\x15\xd1\xf4\xbb\xb2\x9c\x9d\x4e\x81\x27\x92\xef\xdc\xcd\x97\xfb\xf7\xc9\x64\x6d\x0f\xf7\x00\xf3\xe5\x40\xe4\x8f\x92\xde\x09\x8c\xfd\xab\xfc\x51\xb6\x76\xf3\x75\x83\xc7\x91\xfe\x25\x1f\xab\x81\xdb\x65\x69\xa5\xa0\xdb\x98\x7a\xd3\xdc\x69\x45\x3d\xed\x3a\x60\xd9\xe0\x85\x58\xc9\xe6\x57\xb1\x7b\x2e\x44\xa7\xc5\xd9\x5b\x74\xd9\x43\x1b\x7f\xd0\x32\x9d\x43\x9d\xe2\xbc\x05\xc3\xb4\x1b\x1c\x42\xa9\x1d\xdd\xe6\x1f\xb8\x3d\x93\x66\xdd\xe6\x0d\x3d\xdb\xbb\x72\x5a\xa7\x4f\xf4\x58\xb8\x46\x71\x99\x7b\xb4\xb6\x6a\x9a\xb9\xa3\x46\xf6\xd9\x51\x5e\xf8\x0b\x02\xcf\xee\x53\xc2\x0a\xa1\x21\x0b\x29\x32\x98\xb7\x88\xb6\x68\x3f\x99\xe8\xb3\x87\xb5\xc2\x7d\xf1\x4b\x1c\x7d\xd8\xe2\x23\x9f\x50\x25\xaf\x8b\x6a\x22\x56\x3f\xbc\xf2\x0d\x55\xf3\x06\xc0\xee\x8a\x1e\x61\xb2\xf5\x3b\x71\x5c\xbe\x01\x82\xc1\x5a\xc5\xfa\x0e\x0a\xf5\xdd\x55\xe9\xed\x06\xe7\x47\x3e\x31\xe2\x7d\x4d\xb5\x7b\x9f\x54\x4f\x52\xda\xaf\x61\x0c\xd3\x59\xd7\x06\x00\x1d\xbf\x23\x47\xd7\xf3\x72\x4d\xa0\xa3\x46\xc7\x65\xab\x4e\xca\xdf\xb6\xac\xde\x15\xb2\x9b\xd6\xd0\x74\xda\xe4\xd6\x36\xa2\xa9\x76\xee\xeb\x3d\xdb\xd3\xec\xee\x11\x7c\xa7\xdb\xcf\xb5\x26\x77\x62\x14\x9b\x0b\x72\xf5\x81\xf3\x36\x4b\x26\x4b\xcf\xc5\xb3\x24\xc9\x1f\xb5\x83\x98\x23\x27\xb0\x61\x2d\xff\xf7\x4e\xa5\xdb\xd7\xf0\xbb\xb2\x93\x86\xbe\xda\xbd\xb1\xd5\xf3\x6b\x79\x56\xa0\xde\x28\xfb\xc6\x72\xea\x8a\xa7\x28\xbe\xa6\x1c\xba\xd1\x81\x8b\x2f\x2a\x9f\xfe\x25\x87\x2e\xb6\xf6\xea\xb5\x1b\x6b\x2b\x24\xe2\x9e\x43\x1d\xdf\x66\xcb\x6b\x53\x0d\xcd\x6d\x81\xb6\xed\x75\x6d\xda\xe7\xfa\xda\xf3\xe3\x53\xe8\x6a\x3e\x57\x42\xab\x81\xb5\x3b\xbd\x4e\xa7\xf0\x7f\xa3\xf2\x13\x01\xfa\xe3\x64\x42\x1f\x38\x94\xbe\x6c\xdf\xa3\x3a\x0d\x4f\xa6\x89\x8a\xdd\xe1\xb4\x3b\xae\x6e\xd8\x5d\x49\xc8\x91\x9f\x12\xfb\x0a\xb3\xcf\x8a\x2a\xdf\x6f\xb6\xc7\x6c\xdf\xab\x6a\x7b\xf5\x74\xbd\x1a\x9d\xa8\x46\x23\x8a\x9a\x84\xdb\xf6\x5e\xb7\xe9\x41\xad\xd0\x7f\x5a\xab\xf7\xd4\xd3\x77\xea\xeb\x39\xad\xd6\x2e\xf2\xc0\x99\x4e\x49\x83\xfe\xbf\xb1\xb2\x99\xcd\x56\x39\x43\xb7\x0a\x74\x5f\x4e\xf7\xe8\x33\x78\x6c\xb3\xaf\x74\x70\x00\xef\xe9\x1b\x13\x28\xe4\xff\x8a\xdd\xa5\xc5\xae\xc6\x6a\xa5\x7a\xf7\xf3\x9f\x8d\xd3\xcc\xed\xa8\xe6\xb5\xc4\xbe\x9a\x73\xc6\x51\x9c\xc5\xf2\xde\xb3\x6c\x34\x29\x6e\x7b\x0a\xb5\x55\x1b\xee\xf4\xf4\x08\x26\x54\x8a\x53\xe5\xc1\x9d\xa7\x3b\x3e\x47\xeb\xbc\x5c\x70\x48\xce\xf0\x86\x79\x7f\xd1\xb4\x4d\x4f\x16\x41\xab\x96\x5f\xbf\x12\x58\xbb\x0a\x98\xab\x00\x8c\x8f\xd7\x4a\x00\x14\x6f\xb3\xec\xb4\x86\x7d\xea\x4f\xfd\x36\x3b\xe2\x64\x0f\xfe\x20\xa3\x5b\xd8\xf2\x02\x01\x3f\xe7\x79\x28\x93\x90\xb6\x3f\xa8\xb1\xae\x3c\x0d\x18\x17\x1e\x25\x3f\x1f\xf3\xa0\xfe\x9f\xa6\x60\xf6\x20\xd3\x36\xff\x01\x47\x92\xe4\x8f\x3a\x33\xf2\x31\x0f\x0a\x7a\x94\x47\xc0\x20\x28\xa4\xca\xd3\x6a\xbc\xf9\x2a\x9b\x86\xea\xaa\x6b\xd5\x54\x84\x2c\x74\x27\xa2\x68\xac\x8b\x56\xfb\xed\x96\x67\xbe\x8b\x72\x6d\x47\x65\xbb\x34\x83\x0b\xef\x28\xc9\x68\x52\x5f\x46\xfe\xd0\x8a\xe4\xd5\x87\x78\x4f\x50\x13\x2e\xf5\x9c\x2a\x58\x45\xe3\x81\x8e\x57\x7a\x25\x39\xde\x45\x0c\xfa\x5b\xc8\xb8\xc4\x9a\xde\x5a\xde\x2c\xb7\xab\x86\x88\x3e\x87\xfe\x6f\x00\x00\x00\xff\xff\xa5\x57\x87\x71\x91\x49\x00\x00"),
          path: "sql-api.tml",
          root: "sql-api.tml",
        },
      
    
  }
)

//==============================================================================

// FilesFor returns all files that use the provided extension, returning a
// empty/nil slice if none is found.
func FilesFor(ext string) []string {
  return assets[ext]
}

// MustFindFile calls FindFile to retrieve file reader with path else panics.
func MustFindFile(path string, doGzip bool) (io.Reader, int64) {
  reader, size, err := FindFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return reader, size
}

// FindDecompressedGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindDecompressedGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, true)
}

// MustFindDecompressedGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindDecompressedGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindDecompressedGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindGzippedFile returns a io.Reader by seeking the giving file path if it exists.
// It returns an uncompressed file.
func FindGzippedFile(path string) (io.Reader, int64, error){
	return FindFile(path, false)
}

// MustFindGzippedFile panics if error occured, uses FindUnGzippedFile underneath.
func MustFindGzippedFile(path string) (io.Reader, int64){
	reader, size, err := FindGzippedFile(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFile returns a io.Reader by seeking the giving file path if it exists.
func FindFile(path string, doGzip bool) (io.Reader, int64, error){
	reader, size, err := FindFileReader(path)
	if err != nil {
		return nil, size, err
	}

	if !doGzip {
		return reader, size, nil
	}

  gzr, err := gzip.NewReader(reader)
	return gzr, size, err
}

// MustFindFileReader returns bytes.Reader for path else panics.
func MustFindFileReader(path string) (*bytes.Reader, int64){
	reader, size, err := FindFileReader(path)
	if err != nil {
		panic(err)
	}
	return reader, size
}

// FindFileReader returns a io.Reader by seeking the giving file path if it exists.
func FindFileReader(path string) (*bytes.Reader, int64, error){
  item, ok := assetFiles[path]
  if !ok {
    return nil,0, fmt.Errorf("File %q not found in file system", path)
  }

  return bytes.NewReader(item.data), int64(len(item.data)), nil
}

// MustReadFile calls ReadFile to retrieve file content with path else panics.
func MustReadFile(path string, doGzip bool) string {
  body, err := ReadFile(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFile attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFile(path string, doGzip bool) (string, error){
  body, err := ReadFileByte(path, doGzip)
  return string(body), err
}

// MustReadFileByte calls ReadFile to retrieve file content with path else panics.
func MustReadFileByte(path string, doGzip bool) []byte {
  body, err := ReadFileByte(path, doGzip)
  if err != nil {
    panic(err)
  }

  return body
}

// ReadFileByte attempts to return the underline data associated with the given path
// if it exists else returns an error.
func ReadFileByte(path string, doGzip bool) ([]byte, error){
  reader, _, err := FindFile(path, doGzip)
  if err != nil {
    return nil, err
  }

  if closer, ok := reader.(io.Closer); ok {
    defer closer.Close()
  }

  var bu bytes.Buffer

  _, err = io.Copy(&bu, reader);
  if err != nil && err != io.EOF {
   return nil, fmt.Errorf("File %q failed to be read: %+q", path, err)
  }

  return bu.Bytes(), nil
}
